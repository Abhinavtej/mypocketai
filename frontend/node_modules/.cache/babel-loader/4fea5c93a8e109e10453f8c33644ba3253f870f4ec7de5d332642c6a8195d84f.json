{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/ExpenseManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/ExpenseManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseManagement = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newExpense, setNewExpense] = useState(\"\"); // Renamed from newAmount to newExpense\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const categories = [\"Groceries\", \"Rent\", \"Utilities\", \"Entertainment\", \"Savings\", \"Miscellaneous\"];\n\n  // Set current month and year\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch expenses and budget data\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"You must be logged in to view this data.\");\n        return;\n      }\n      try {\n        // Fetch expenses\n        const {\n          data: expensesData\n        } = await axios.get(\"http://localhost:3001/api/expense\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setExpenses(expensesData);\n\n        // Fetch budget and categories\n        const {\n          data: budgetData\n        } = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setBudgetAllocated(budgetData.budgetAllocated);\n        setNewCategory(budgetData.categories);\n      } catch (err) {\n        var _err$response;\n        setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401 ? \"Unauthorized. Please login again.\" : \"Error fetching data.\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle adding a new expense\n  const handleAddExpense = async () => {\n    if (!newCategory || !newExpense || newExpense <= 0) {\n      setMessage(\"Please provide a valid category and expense.\");\n      return;\n    }\n    const totalExpensesInCategory = expenses.filter(expense => expense.category === newCategory).reduce((sum, expense) => sum + expense.expense, 0);\n    if (totalExpensesInCategory + parseFloat(newExpense) > budgetAllocated) {\n      setMessage(\"Expenses for this category exceed the allocated budget.\");\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMessage(\"You must be logged in to add an expense.\");\n      return;\n    }\n    try {\n      const {\n        data: newExpenseData\n      } = await axios.post(\"http://localhost:3001/api/expense\", {\n        category: newCategory,\n        expense: parseFloat(newExpense),\n        // Send 'expense' instead of 'amount'\n        date: new Date().toISOString()\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Expense added successfully!\");\n      setNewExpense(\"\");\n      setNewCategory(\"\");\n      const response = await axios.get(\"http://localhost:3001/api/expense\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setExpenses(response.data.expense);\n    } catch (err) {\n      setMessage(\"Error adding expense. Please try again.\");\n    }\n  };\n\n  // Handle updating an expense\n  const handleExpenseUpdate = async (id, updatedExpense) => {\n    if (updatedExpense <= 0) {\n      setMessage(\"Expense amount must be greater than zero.\");\n      return;\n    }\n    const totalExpensesInCategory = expenses.filter(expense => expense.category === newCategory).reduce((sum, expense) => sum + expense.expense, 0);\n    if (totalExpensesInCategory + parseFloat(updatedExpense) > budgetAllocated) {\n      setMessage(\"Updated expense exceeds the allocated budget.\");\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMessage(\"You must be logged in to update an expense.\");\n      return;\n    }\n    try {\n      await axios.put(`http://localhost:3001/api/expense/${id}`, {\n        expense: updatedExpense\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedExpenses = expenses.map(expense => expense._id === id ? {\n        ...expense,\n        expense: updatedExpense\n      } : expense);\n      setExpenses(updatedExpenses);\n      setMessage(\"Expense updated successfully!\");\n    } catch (err) {\n      var _err$response2;\n      setMessage(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401 ? \"Unauthorized. Please login again.\" : \"Error updating expense.\");\n    }\n  };\n\n  // Handle removing an expense\n  const handleRemoveExpense = async id => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMessage(\"You must be logged in to remove an expense.\");\n      return;\n    }\n    try {\n      await axios.delete(`http://localhost:3001/api/expense/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedExpenses = expenses.filter(expense => expense._id !== id);\n      setExpenses(updatedExpenses);\n      setMessage(\"Expense removed successfully!\");\n    } catch (err) {\n      var _err$response3;\n      setMessage(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 401 ? \"Unauthorized. Please login again.\" : \"Error removing expense.\");\n    }\n  };\n\n  // Calculate total expenses\n  const totalExpenses = expenses.reduce((sum, expense) => sum + expense.expense, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Expenses: \\u20B9\", totalExpenses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-expense\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Expense\",\n        value: newExpense,\n        onChange: e => setNewExpense(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddExpense,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"expense-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Expenses List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), expenses.map(expense => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"expense-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [expense.category, \": \\u20B9\", expense.expense]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", new Date(expense.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: expense.expense,\n            onChange: e => handleExpenseUpdate(expense._id, parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveExpense(expense._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, expense._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseManagement, \"HXrcwaoppsAtN4XtfbQv1Ap2BUE=\");\n_c = ExpenseManagement;\nexport default ExpenseManagement;\nvar _c;\n$RefreshReg$(_c, \"ExpenseManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExpenseManagement","_s","expenses","setExpenses","newCategory","setNewCategory","newExpense","setNewExpense","message","setMessage","currentMonth","setCurrentMonth","budgetAllocated","setBudgetAllocated","categories","month","Date","toLocaleString","year","getFullYear","fetchData","token","localStorage","getItem","data","expensesData","get","headers","Authorization","budgetData","err","_err$response","response","status","handleAddExpense","totalExpensesInCategory","filter","expense","category","reduce","sum","parseFloat","newExpenseData","post","date","toISOString","handleExpenseUpdate","id","updatedExpense","put","updatedExpenses","map","_id","_err$response2","handleRemoveExpense","delete","_err$response3","totalExpenses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","index","type","placeholder","onClick","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/ExpenseManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/ExpenseManagement.css\";\n\nconst ExpenseManagement = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newExpense, setNewExpense] = useState(\"\"); // Renamed from newAmount to newExpense\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n\n  const categories = [\n    \"Groceries\",\n    \"Rent\",\n    \"Utilities\",\n    \"Entertainment\",\n    \"Savings\",\n    \"Miscellaneous\",\n  ];\n\n  // Set current month and year\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch expenses and budget data\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        setMessage(\"You must be logged in to view this data.\");\n        return;\n      }\n\n      try {\n        // Fetch expenses\n        const { data: expensesData } = await axios.get(\"http://localhost:3001/api/expense\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setExpenses(expensesData);\n\n        // Fetch budget and categories\n        const { data: budgetData } = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setBudgetAllocated(budgetData.budgetAllocated);\n        setNewCategory(budgetData.categories);\n      } catch (err) {\n        setMessage(\n          err.response?.status === 401 ? \"Unauthorized. Please login again.\" : \"Error fetching data.\"\n        );\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Handle adding a new expense\n  const handleAddExpense = async () => {\n    if (!newCategory || !newExpense || newExpense <= 0) {\n      setMessage(\"Please provide a valid category and expense.\");\n      return;\n    }\n\n    const totalExpensesInCategory = expenses\n      .filter(expense => expense.category === newCategory)\n      .reduce((sum, expense) => sum + expense.expense, 0);\n\n    if (totalExpensesInCategory + parseFloat(newExpense) > budgetAllocated) {\n      setMessage(\"Expenses for this category exceed the allocated budget.\");\n      return;\n    }\n\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      setMessage(\"You must be logged in to add an expense.\");\n      return;\n    }\n\n    try {\n      const { data: newExpenseData } = await axios.post(\n        \"http://localhost:3001/api/expense\",\n        {\n          category: newCategory,\n          expense: parseFloat(newExpense), // Send 'expense' instead of 'amount'\n          date: new Date().toISOString(),\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      \n      setMessage(\"Expense added successfully!\");\n\n      setNewExpense(\"\");\n      setNewCategory(\"\");\n\n      const response = await axios.get(\"http://localhost:3001/api/expense\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setExpenses(response.data.expense);\n\n    } catch (err) {\n      setMessage(\"Error adding expense. Please try again.\");\n    }\n  };\n\n  // Handle updating an expense\n  const handleExpenseUpdate = async (id, updatedExpense) => { \n    if (updatedExpense <= 0) {\n      setMessage(\"Expense amount must be greater than zero.\");\n      return;\n    }\n\n    const totalExpensesInCategory = expenses\n      .filter(expense => expense.category === newCategory)\n      .reduce((sum, expense) => sum + expense.expense, 0);\n\n    if (totalExpensesInCategory + parseFloat(updatedExpense) > budgetAllocated) {\n      setMessage(\"Updated expense exceeds the allocated budget.\");\n      return;\n    }\n\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      setMessage(\"You must be logged in to update an expense.\");\n      return;\n    }\n\n    try {\n      await axios.put(\n        `http://localhost:3001/api/expense/${id}`,\n        { expense: updatedExpense }, \n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const updatedExpenses = expenses.map((expense) =>\n        expense._id === id ? { ...expense, expense: updatedExpense } : expense \n      );\n      setExpenses(updatedExpenses);\n      setMessage(\"Expense updated successfully!\");\n    } catch (err) {\n      setMessage(\n        err.response?.status === 401 ? \"Unauthorized. Please login again.\" : \"Error updating expense.\"\n      );\n    }\n  };\n\n  // Handle removing an expense\n  const handleRemoveExpense = async (id) => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      setMessage(\"You must be logged in to remove an expense.\");\n      return;\n    }\n\n    try {\n      await axios.delete(`http://localhost:3001/api/expense/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      const updatedExpenses = expenses.filter((expense) => expense._id !== id);\n      setExpenses(updatedExpenses);\n      setMessage(\"Expense removed successfully!\");\n    } catch (err) {\n      setMessage(\n        err.response?.status === 401 ? \"Unauthorized. Please login again.\" : \"Error removing expense.\"\n      );\n    }\n  };\n\n  // Calculate total expenses\n  const totalExpenses = expenses.reduce((sum, expense) => sum + expense.expense, 0);\n\n  return (\n    <div className=\"expense-container\">\n      <h2>Expense Management</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n\n      <div className=\"expense-summary\">\n        <h3>Total Expenses: ₹{totalExpenses}</h3>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <p>Add Expense</p>\n      <div className=\"add-expense\">\n        <select value={newCategory} onChange={(e) => setNewCategory(e.target.value)}>\n          <option value=\"\">Select Category</option>\n          {categories.map((category, index) => (\n            <option key={index} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"Expense\"\n          value={newExpense}\n          onChange={(e) => setNewExpense(e.target.value)}\n        />\n        <button onClick={handleAddExpense}>Add Expense</button>\n      </div>\n\n      <ul className=\"expense-list\">\n        <p>Expenses List</p>\n        {expenses.map((expense) => (\n          <li key={expense._id} className=\"expense-item\">\n            <span>{expense.category}: ₹{expense.expense}</span> \n            <span>Date: {new Date(expense.date).toLocaleDateString()}</span>\n            <div>\n              <input\n                type=\"number\"\n                value={expense.expense}\n                onChange={(e) => handleExpenseUpdate(expense._id, parseFloat(e.target.value))}\n              />\n              <button onClick={() => handleRemoveExpense(expense._id)}>Remove</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ExpenseManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}