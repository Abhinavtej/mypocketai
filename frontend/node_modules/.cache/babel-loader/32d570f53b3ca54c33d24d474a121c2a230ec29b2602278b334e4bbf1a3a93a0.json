{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Reports = ({\n  userId\n}) => {\n  _s();\n  const [reports, setReports] = useState({\n    monthlyIncome: [],\n    budgetAllocation: [],\n    expenseReport: [],\n    categoryReport: [],\n    remainingBudget: []\n  });\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [error, setError] = useState(null); // Track any errors during data fetching\n\n  useEffect(() => {\n    // Fetch reports data from backend\n    const fetchReports = async () => {\n      try {\n        const incomeResponse = await axios.get(`/api/reports/monthly-income/${userId}`);\n        const budgetResponse = await axios.get(`/api/reports/budget-allocation/${userId}`);\n        const expenseResponse = await axios.get(`/api/reports/expense-report/${userId}`);\n        const categoryResponse = await axios.get(`/api/reports/category-report/${userId}`);\n        const remainingBudgetResponse = await axios.get(`/api/reports/remaining-budget/${userId}`);\n        setReports({\n          monthlyIncome: incomeResponse.data.data,\n          budgetAllocation: budgetResponse.data.data,\n          expenseReport: expenseResponse.data.data,\n          categoryReport: categoryResponse.data.data,\n          remainingBudget: remainingBudgetResponse.data.data\n        });\n      } catch (error) {\n        console.error(\"Error fetching reports:\", error);\n        setError(\"Failed to fetch reports data.\");\n      } finally {\n        setLoading(false); // Set loading to false once the data fetching is done\n      }\n    };\n    fetchReports();\n  }, [userId]);\n\n  // Check if data is being loaded\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this); // Show loading message\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this); // Show error message if any error occurred\n  }\n\n  // Monthly Income Chart\n  const monthlyIncomeChart = {\n    labels: reports.monthlyIncome.map(item => item._id),\n    // Use _id as month (or map it to the month names)\n    datasets: [{\n      label: \"Monthly Income\",\n      data: reports.monthlyIncome.map(item => item.totalIncome),\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n\n  // Category-wise Expense Pie Chart\n  const categoryExpenseChart = {\n    labels: reports.categoryReport.map(item => item._id),\n    datasets: [{\n      data: reports.categoryReport.map(item => item.totalExpense),\n      backgroundColor: [\"#FF5733\", \"#33FF57\", \"#5733FF\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monthly Income Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: monthlyIncomeChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Category-wise Expense Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: categoryExpenseChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"ev2MnoSBJIrRDDBPE1mMN6sBfaQ=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Line","Pie","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Reports","userId","_s","reports","setReports","monthlyIncome","budgetAllocation","expenseReport","categoryReport","remainingBudget","loading","setLoading","error","setError","fetchReports","incomeResponse","get","budgetResponse","expenseResponse","categoryResponse","remainingBudgetResponse","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","monthlyIncomeChart","labels","map","item","_id","datasets","label","totalIncome","borderColor","fill","categoryExpenseChart","totalExpense","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Reports = ({ userId }) => {\n  const [reports, setReports] = useState({\n    monthlyIncome: [],\n    budgetAllocation: [],\n    expenseReport: [],\n    categoryReport: [],\n    remainingBudget: [],\n  });\n  const [loading, setLoading] = useState(true);  // Track loading state\n  const [error, setError] = useState(null);  // Track any errors during data fetching\n\n  useEffect(() => {\n    // Fetch reports data from backend\n    const fetchReports = async () => {\n      try {\n        const incomeResponse = await axios.get(`/api/reports/monthly-income/${userId}`);\n        const budgetResponse = await axios.get(`/api/reports/budget-allocation/${userId}`);\n        const expenseResponse = await axios.get(`/api/reports/expense-report/${userId}`);\n        const categoryResponse = await axios.get(`/api/reports/category-report/${userId}`);\n        const remainingBudgetResponse = await axios.get(`/api/reports/remaining-budget/${userId}`);\n\n        setReports({\n          monthlyIncome: incomeResponse.data.data,\n          budgetAllocation: budgetResponse.data.data,\n          expenseReport: expenseResponse.data.data,\n          categoryReport: categoryResponse.data.data,\n          remainingBudget: remainingBudgetResponse.data.data,\n        });\n      } catch (error) {\n        console.error(\"Error fetching reports:\", error);\n        setError(\"Failed to fetch reports data.\");\n      } finally {\n        setLoading(false);  // Set loading to false once the data fetching is done\n      }\n    };\n\n    fetchReports();\n  }, [userId]);\n\n  // Check if data is being loaded\n  if (loading) {\n    return <div>Loading...</div>;  // Show loading message\n  }\n\n  if (error) {\n    return <div>{error}</div>;  // Show error message if any error occurred\n  }\n\n  // Monthly Income Chart\n  const monthlyIncomeChart = {\n    labels: reports.monthlyIncome.map((item) => item._id), // Use _id as month (or map it to the month names)\n    datasets: [\n      {\n        label: \"Monthly Income\",\n        data: reports.monthlyIncome.map((item) => item.totalIncome),\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false,\n      },\n    ],\n  };\n\n  // Category-wise Expense Pie Chart\n  const categoryExpenseChart = {\n    labels: reports.categoryReport.map((item) => item._id),\n    datasets: [\n      {\n        data: reports.categoryReport.map((item) => item.totalExpense),\n        backgroundColor: [\"#FF5733\", \"#33FF57\", \"#5733FF\"],\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h2>Reports</h2>\n      <div>\n        <h3>Monthly Income Report</h3>\n        <Line data={monthlyIncomeChart} />\n      </div>\n\n      <div>\n        <h3>Category-wise Expense Report</h3>\n        <Pie data={categoryExpenseChart} />\n      </div>\n\n      {/* Add more charts here for other reports like budget allocation, remaining budget, etc. */}\n    </div>\n  );\n};\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}