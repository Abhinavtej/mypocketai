{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/auth/login', {\n        email,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      alert(message);\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/auth/register', {\n        name,\n        email,\n        password\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Error registering user\", error);\n    }\n  };\n  const forgotPassword = async email => {\n    try {\n      await axios.post('http://localhost:3001/api/auth/forgot-password', {\n        email\n      });\n      alert('Password reset instructions sent to your email.');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to send reset instructions';\n      alert(message);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      register,\n      forgotPassword,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","login","email","password","response","post","data","setItem","error","_error$response","_error$response$data","message","alert","register","name","console","log","forgotPassword","_error$response2","_error$response2$data","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/auth/login', { email, password });\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      setIsAuthenticated(true);\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      alert(message);\n    }\n  };\n\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/auth/register', { name, email, password });\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Error registering user\", error);\n    }\n  };\n  \n  \n\n  const forgotPassword = async (email) => {\n    try {\n      await axios.post('http://localhost:3001/api/auth/forgot-password', { email });\n      alert('Password reset instructions sent to your email.');\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to send reset instructions';\n      alert(message);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login, register, forgotPassword, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}