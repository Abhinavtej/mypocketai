{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch budget and income data from backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch budget data\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          budgetAllocated,\n          categories\n        } = budgetResponse.data;\n\n        // Fetch income data\n        const incomeResponse = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const incomeList = incomeResponse.data.income;\n        const totalIncomeFromAPI = incomeList.reduce((sum, income) => sum + income.amount, 0);\n        setTotalIncome(totalIncomeFromAPI);\n        setBudgetAllocated(budgetAllocated);\n        setRemainingBudget(totalIncomeFromAPI - budgetAllocated);\n        setCategories(categories);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n\n    // Check if the new budget exceeds the remaining budget\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3001/api/budget\", {\n        category: newCategory,\n        budget: parseFloat(newBudget)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const addedCategory = response.data;\n\n      // Update local state with the new category\n      setCategories(prevCategories => [...prevCategories, addedCategory]);\n\n      // Update budget calculations\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n\n  // Handle budget update automatically on change\n  // Handle budget update automatically on change\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    const updatedBudgetFloat = parseFloat(updatedBudget);\n\n    // Check if the updated budget is valid (greater than 0 and not empty)\n    if (isNaN(updatedBudgetFloat) || updatedBudgetFloat <= 0) {\n      setMessage(\"Please provide a valid budget amount.\");\n      return;\n    }\n\n    // Check if the updated budget exceeds the remaining budget\n    const newTotalAllocated = categories.reduce((sum, cat) => {\n      if (cat._id === id) {\n        return sum + updatedBudgetFloat; // Replace the category budget\n      }\n      return sum + cat.budget;\n    }, 0);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocation exceeds total income. Please adjust.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budget: updatedBudgetFloat\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update the category locally\n      const updatedCategories = categories.map(item => item._id === id ? {\n        ...item,\n        budget: updatedBudgetFloat\n      } : item);\n      setCategories(updatedCategories);\n\n      // Recalculate total allocated and remaining budget\n      const updatedBudgetAllocated = updatedCategories.reduce((sum, cat) => sum + cat.budget, 0);\n      setBudgetAllocated(updatedBudgetAllocated);\n      setRemainingBudget(totalIncome - updatedBudgetAllocated);\n      setMessage(\"Budget updated successfully!\");\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n\n  // Remove a category\n  const handleRemoveCategory = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedCategories = categories.filter(item => item._id !== id);\n      setCategories(updatedCategories);\n\n      // Recalculate budget allocations\n      const updatedBudgetAllocated = updatedCategories.reduce((sum, cat) => sum + cat.budget, 0);\n      setBudgetAllocated(updatedBudgetAllocated);\n      setRemainingBudget(totalIncome - updatedBudgetAllocated);\n      setMessage(\"Category removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Date: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Budget Allocated: \\u20B9\", budgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Remaining Budget: \\u20B9\", remainingBudget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        placeholder: \"Category Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: newBudget,\n        onChange: e => setNewBudget(e.target.value),\n        placeholder: \"Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"category-list\",\n      children: categories.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: item.budget,\n          onChange: e => handleBudgetUpdate(item._id, e.target.value),\n          placeholder: \"Budget Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveCategory(item._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"MxlM6tfM8Y9PRDSXwUeZtP5+CaI=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","categories","setCategories","totalIncome","setTotalIncome","budgetAllocated","setBudgetAllocated","remainingBudget","setRemainingBudget","newCategory","setNewCategory","newBudget","setNewBudget","message","setMessage","currentMonth","setCurrentMonth","month","Date","toLocaleString","year","getFullYear","fetchBudgetData","token","localStorage","getItem","budgetResponse","get","headers","Authorization","data","incomeResponse","incomeList","income","totalIncomeFromAPI","reduce","sum","amount","err","handleAddCategory","newTotalAllocated","parseFloat","response","post","category","budget","addedCategory","prevCategories","handleBudgetUpdate","id","updatedBudget","updatedBudgetFloat","isNaN","cat","_id","put","updatedCategories","map","item","updatedBudgetAllocated","handleRemoveCategory","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","min","onClick","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch budget and income data from backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch budget data\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const { budgetAllocated, categories } = budgetResponse.data;\n\n        // Fetch income data\n        const incomeResponse = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const incomeList = incomeResponse.data.income;\n        const totalIncomeFromAPI = incomeList.reduce((sum, income) => sum + income.amount, 0);\n\n        setTotalIncome(totalIncomeFromAPI);\n        setBudgetAllocated(budgetAllocated);\n        setRemainingBudget(totalIncomeFromAPI - budgetAllocated);\n        setCategories(categories);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  // Add a new category\nconst handleAddCategory = async () => {\n  if (!newCategory || !newBudget || newBudget <= 0) {\n    setMessage(\"Please provide a valid category and budget.\");\n    return;\n  }\n\n  // Check if the new budget exceeds the remaining budget\n  const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n  if (newTotalAllocated > totalIncome) {\n    setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n    return;\n  }\n\n  try {\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.post(\n      \"http://localhost:3001/api/budget\",\n      { category: newCategory, budget: parseFloat(newBudget) },\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n\n    const addedCategory = response.data;\n\n    // Update local state with the new category\n    setCategories((prevCategories) => [...prevCategories, addedCategory]);\n\n    // Update budget calculations\n    setBudgetAllocated(newTotalAllocated);\n    setRemainingBudget(totalIncome - newTotalAllocated);\n\n    setMessage(\"Category added successfully!\");\n    setNewCategory(\"\");\n    setNewBudget(\"\");\n  } catch (err) {\n    setMessage(\"Error adding category\");\n  }\n};\n\n// Handle budget update automatically on change\n// Handle budget update automatically on change\nconst handleBudgetUpdate = async (id, updatedBudget) => {\n  const updatedBudgetFloat = parseFloat(updatedBudget);\n\n  // Check if the updated budget is valid (greater than 0 and not empty)\n  if (isNaN(updatedBudgetFloat) || updatedBudgetFloat <= 0) {\n    setMessage(\"Please provide a valid budget amount.\");\n    return;\n  }\n\n  // Check if the updated budget exceeds the remaining budget\n  const newTotalAllocated = categories.reduce((sum, cat) => {\n    if (cat._id === id) {\n      return sum + updatedBudgetFloat; // Replace the category budget\n    }\n    return sum + cat.budget;\n  }, 0);\n\n  if (newTotalAllocated > totalIncome) {\n    setMessage(\"Budget allocation exceeds total income. Please adjust.\");\n    return;\n  }\n\n  try {\n    const token = localStorage.getItem(\"token\");\n    await axios.put(\n      `http://localhost:3001/api/budget/${id}`,\n      { budget: updatedBudgetFloat },\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n\n    // Update the category locally\n    const updatedCategories = categories.map((item) =>\n      item._id === id ? { ...item, budget: updatedBudgetFloat } : item\n    );\n    setCategories(updatedCategories);\n\n    // Recalculate total allocated and remaining budget\n    const updatedBudgetAllocated = updatedCategories.reduce(\n      (sum, cat) => sum + cat.budget,\n      0\n    );\n    setBudgetAllocated(updatedBudgetAllocated);\n    setRemainingBudget(totalIncome - updatedBudgetAllocated);\n\n    setMessage(\"Budget updated successfully!\");\n  } catch (err) {\n    setMessage(\"Error updating budget\");\n  }\n};\n\n\n\n  // Remove a category\n  const handleRemoveCategory = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      const updatedCategories = categories.filter((item) => item._id !== id);\n      setCategories(updatedCategories);\n\n      // Recalculate budget allocations\n      const updatedBudgetAllocated = updatedCategories.reduce((sum, cat) => sum + cat.budget, 0);\n      setBudgetAllocated(updatedBudgetAllocated);\n      setRemainingBudget(totalIncome - updatedBudgetAllocated);\n\n      setMessage(\"Category removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Date: {currentMonth}</p>\n\n      <div className=\"budget-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n        <h3>Budget Allocated: ₹{budgetAllocated}</h3>\n        <h3>Remaining Budget: ₹{remainingBudget}</h3>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <div className=\"add-category\">\n        <input\n          type=\"text\"\n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n          placeholder=\"Category Name\"\n        />\n        <input\n          type=\"number\"\n          min=\"1\"\n          value={newBudget}\n          onChange={(e) => setNewBudget(e.target.value)}\n          placeholder=\"Budget Amount\"\n        />\n        <button onClick={handleAddCategory}>Add Category</button>\n      </div>\n\n      <ul className=\"category-list\">\n        {categories.map((item) => (\n          <li key={item._id} className=\"category-item\">\n            <span>{item.category}</span>\n            <input\n              type=\"number\"\n              min=\"1\"\n              value={item.budget}\n              onChange={(e) => handleBudgetUpdate(item._id, e.target.value)}\n              placeholder=\"Budget Amount\"\n            />\n            <button onClick={() => handleRemoveCategory(item._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}