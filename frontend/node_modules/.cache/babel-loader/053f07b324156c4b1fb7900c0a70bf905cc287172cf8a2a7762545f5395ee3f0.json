{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const category_data = [\"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \"Savings\", \"Miscellaneous\"];\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Token not found. Please log in again.\");\n          return;\n        }\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          totalIncome,\n          categories\n        } = budgetResponse.data;\n        if (!totalIncome || totalIncome <= 0) {\n          setMessage(\"Invalid total income data.\");\n          return;\n        }\n        setTotalIncome(totalIncome); // Set state for total income\n        setCategories(categories);\n\n        // Calculate the total allocated budget and remaining budget\n        const allocated = categories.reduce((sum, category) => sum + category.budgetAllocated, 0);\n        setBudgetAllocated(allocated);\n        setRemainingBudget(totalIncome - allocated);\n      } catch (err) {\n        console.error(err);\n        setMessage(\"Error fetching data\");\n      }\n    };\n    fetchBudgetData();\n  }, []);\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n    const currentDate = new Date().toISOString().split(\"T\")[0]; // \"2024-11-09\" format\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3001/api/budget\", {\n        category: newCategory,\n        budgetAllocated: parseFloat(newBudget),\n        remainingBudget: parseFloat(newBudget),\n        date: currentDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const addedCategory = response.data;\n      setCategories(prevCategories => {\n        const updatedCategories = prevCategories.map(category => {\n          if (category._id === addedCategory._id) {\n            // If category exists, update it\n            return {\n              ...category,\n              ...addedCategory\n            };\n          }\n          return category;\n        });\n        if (!updatedCategories.some(category => category._id === addedCategory._id)) {\n          // If the category doesn't exist, add it\n          updatedCategories.push(addedCategory);\n        }\n        return updatedCategories;\n      });\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added or updated successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding or updating category\");\n    }\n  };\n\n  // Handle updating the budget for a category\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    if (updatedBudget <= 0 || updatedBudget > totalIncome) {\n      setMessage(\"Invalid updated budget value.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budgetAllocated: updatedBudget,\n        remainingBudget: updatedBudget\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedCategory = response.data;\n      setCategories(prevCategories => prevCategories.map(category => category._id === id ? updatedCategory : category));\n      setMessage(\"Budget updated successfully!\");\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n\n  // Handle removing a category\n  const handleRemoveCategory = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => prevCategories.filter(category => category._id !== id));\n      setMessage(\"Category removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Budget Allocation for \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Income: \\u20B9\", totalIncome]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), category_data.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudget,\n        onChange: e => setNewBudget(e.target.value),\n        placeholder: \"Enter Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Allocated Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [category.category, \": \\u20B9\", category.budgetAllocated, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveCategory(category._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBudgetUpdate(category._id, prompt(\"New Budget:\", category.budgetAllocated)),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, category._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Budget: \\u20B9\", remainingBudget]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"MxlM6tfM8Y9PRDSXwUeZtP5+CaI=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","categories","setCategories","totalIncome","setTotalIncome","budgetAllocated","setBudgetAllocated","remainingBudget","setRemainingBudget","newCategory","setNewCategory","newBudget","setNewBudget","message","setMessage","currentMonth","setCurrentMonth","category_data","month","Date","toLocaleString","year","getFullYear","fetchBudgetData","token","localStorage","getItem","budgetResponse","get","headers","Authorization","data","allocated","reduce","sum","category","err","console","error","handleAddCategory","newTotalAllocated","parseFloat","currentDate","toISOString","split","response","post","date","addedCategory","prevCategories","updatedCategories","map","_id","some","push","handleBudgetUpdate","id","updatedBudget","put","updatedCategory","handleRemoveCategory","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","cat","type","placeholder","onClick","prompt","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  const category_data = [\n    \"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \n    \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \n    \"Savings\", \"Miscellaneous\"\n  ];\n\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Token not found. Please log in again.\");\n          return;\n        }\n  \n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n  \n        const { totalIncome, categories } = budgetResponse.data;\n        if (!totalIncome || totalIncome <= 0) {\n          setMessage(\"Invalid total income data.\");\n          return;\n        }\n  \n        setTotalIncome(totalIncome);  // Set state for total income\n        setCategories(categories);\n  \n        // Calculate the total allocated budget and remaining budget\n        const allocated = categories.reduce((sum, category) => sum + category.budgetAllocated, 0);\n        setBudgetAllocated(allocated);\n        setRemainingBudget(totalIncome - allocated);\n  \n      } catch (err) {\n        console.error(err);\n        setMessage(\"Error fetching data\");\n      }\n    };\n  \n    fetchBudgetData();\n  }, []);\n  \n  \n\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n  \n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n  \n    const currentDate = new Date().toISOString().split(\"T\")[0]; // \"2024-11-09\" format\n  \n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\n        \"http://localhost:3001/api/budget\",\n        { category: newCategory, budgetAllocated: parseFloat(newBudget), remainingBudget: parseFloat(newBudget), date: currentDate },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n  \n      const addedCategory = response.data;\n  \n      setCategories((prevCategories) => {\n        const updatedCategories = prevCategories.map((category) => {\n          if (category._id === addedCategory._id) {\n            // If category exists, update it\n            return { ...category, ...addedCategory };\n          }\n          return category;\n        });\n  \n        if (!updatedCategories.some((category) => category._id === addedCategory._id)) {\n          // If the category doesn't exist, add it\n          updatedCategories.push(addedCategory);\n        }\n  \n        return updatedCategories;\n      });\n  \n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added or updated successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding or updating category\");\n    }\n  };\n  \n\n  // Handle updating the budget for a category\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    if (updatedBudget <= 0 || updatedBudget > totalIncome) {\n      setMessage(\"Invalid updated budget value.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        { budgetAllocated: updatedBudget, remainingBudget: updatedBudget },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const updatedCategory = response.data;\n      setCategories((prevCategories) =>\n        prevCategories.map((category) =>\n          category._id === id ? updatedCategory : category\n        )\n      );\n      setMessage(\"Budget updated successfully!\");\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n\n  // Handle removing a category\n  const handleRemoveCategory = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(\n        `http://localhost:3001/api/budget/${id}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      setCategories((prevCategories) =>\n        prevCategories.filter((category) => category._id !== id)\n      );\n      setMessage(\"Category removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n\n  return (\n    <div className=\"budget\">\n      <h2>Budget Allocation for {currentMonth}</h2>\n      <p>Total Income: ₹{totalIncome}</p>\n\n      {message && <p>{message}</p>}\n\n      <div className=\"category-form\">\n        <select\n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n        >\n          <option value=\"\">Select Category</option>\n          {category_data.map((cat) => (\n            <option key={cat} value={cat}>\n              {cat}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newBudget}\n          onChange={(e) => setNewBudget(e.target.value)}\n          placeholder=\"Enter Budget\"\n        />\n        <button onClick={handleAddCategory}>Add Category</button>\n      </div>\n\n      <h3>Allocated Budget</h3>\n      <ul>\n        {categories.map((category) => (\n          <li key={category._id}>\n            {category.category}: ₹{category.budgetAllocated} \n            <button onClick={() => handleRemoveCategory(category._id)}>Remove</button>\n            <button onClick={() => handleBudgetUpdate(category._id, prompt(\"New Budget:\", category.budgetAllocated))}>Update</button>\n          </li>\n        ))}\n      </ul>\n\n      <p>Remaining Budget: ₹{remainingBudget}</p>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMuB,aAAa,GAAG,CACpB,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EACrD,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa,EACjD,SAAS,EAAE,eAAe,CAC3B;EAEDtB,SAAS,CAAC,MAAM;IACd,MAAMuB,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,SAAS,EAAE;MAAEF,KAAK,EAAE;IAAO,CAAC,CAAC;IACrE,MAAMG,IAAI,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;IACrCN,eAAe,CAAC,GAAGE,KAAK,IAAIG,IAAI,EAAE,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN1B,SAAS,CAAC,MAAM;IACd,MAAM4B,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACVV,UAAU,CAAC,uCAAuC,CAAC;UACnD;QACF;QAEA,MAAMa,cAAc,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAAC,kCAAkC,EAAE;UACzEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QAEF,MAAM;UAAErB,WAAW;UAAEF;QAAW,CAAC,GAAG0B,cAAc,CAACI,IAAI;QACvD,IAAI,CAAC5B,WAAW,IAAIA,WAAW,IAAI,CAAC,EAAE;UACpCW,UAAU,CAAC,4BAA4B,CAAC;UACxC;QACF;QAEAV,cAAc,CAACD,WAAW,CAAC,CAAC,CAAE;QAC9BD,aAAa,CAACD,UAAU,CAAC;;QAEzB;QACA,MAAM+B,SAAS,GAAG/B,UAAU,CAACgC,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAKD,GAAG,GAAGC,QAAQ,CAAC9B,eAAe,EAAE,CAAC,CAAC;QACzFC,kBAAkB,CAAC0B,SAAS,CAAC;QAC7BxB,kBAAkB,CAACL,WAAW,GAAG6B,SAAS,CAAC;MAE7C,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBtB,UAAU,CAAC,qBAAqB,CAAC;MACnC;IACF,CAAC;IAEDS,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAC9B,WAAW,IAAI,CAACE,SAAS,IAAIA,SAAS,IAAI,CAAC,EAAE;MAChDG,UAAU,CAAC,6CAA6C,CAAC;MACzD;IACF;IAEA,MAAM0B,iBAAiB,GAAGnC,eAAe,GAAGoC,UAAU,CAAC9B,SAAS,CAAC;IACjE,IAAI6B,iBAAiB,GAAGrC,WAAW,EAAE;MACnCW,UAAU,CAAC,uDAAuD,CAAC;MACnE;IACF;IAEA,MAAM4B,WAAW,GAAG,IAAIvB,IAAI,CAAC,CAAC,CAACwB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE5D,IAAI;MACF,MAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMmB,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,IAAI,CAC/B,kCAAkC,EAClC;QAAEX,QAAQ,EAAE1B,WAAW;QAAEJ,eAAe,EAAEoC,UAAU,CAAC9B,SAAS,CAAC;QAAEJ,eAAe,EAAEkC,UAAU,CAAC9B,SAAS,CAAC;QAAEoC,IAAI,EAAEL;MAAY,CAAC,EAC5H;QAAEb,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAAE,CAClD,CAAC;MAED,MAAMwB,aAAa,GAAGH,QAAQ,CAACd,IAAI;MAEnC7B,aAAa,CAAE+C,cAAc,IAAK;QAChC,MAAMC,iBAAiB,GAAGD,cAAc,CAACE,GAAG,CAAEhB,QAAQ,IAAK;UACzD,IAAIA,QAAQ,CAACiB,GAAG,KAAKJ,aAAa,CAACI,GAAG,EAAE;YACtC;YACA,OAAO;cAAE,GAAGjB,QAAQ;cAAE,GAAGa;YAAc,CAAC;UAC1C;UACA,OAAOb,QAAQ;QACjB,CAAC,CAAC;QAEF,IAAI,CAACe,iBAAiB,CAACG,IAAI,CAAElB,QAAQ,IAAKA,QAAQ,CAACiB,GAAG,KAAKJ,aAAa,CAACI,GAAG,CAAC,EAAE;UAC7E;UACAF,iBAAiB,CAACI,IAAI,CAACN,aAAa,CAAC;QACvC;QAEA,OAAOE,iBAAiB;MAC1B,CAAC,CAAC;MAEF5C,kBAAkB,CAACkC,iBAAiB,CAAC;MACrChC,kBAAkB,CAACL,WAAW,GAAGqC,iBAAiB,CAAC;MACnD1B,UAAU,CAAC,yCAAyC,CAAC;MACrDJ,cAAc,CAAC,EAAE,CAAC;MAClBE,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOwB,GAAG,EAAE;MACZtB,UAAU,CAAC,mCAAmC,CAAC;IACjD;EACF,CAAC;;EAGD;EACA,MAAMyC,kBAAkB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,aAAa,KAAK;IACtD,IAAIA,aAAa,IAAI,CAAC,IAAIA,aAAa,GAAGtD,WAAW,EAAE;MACrDW,UAAU,CAAC,+BAA+B,CAAC;MAC3C;IACF;IAEA,IAAI;MACF,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMmB,QAAQ,GAAG,MAAMjD,KAAK,CAAC8D,GAAG,CAC9B,oCAAoCF,EAAE,EAAE,EACxC;QAAEnD,eAAe,EAAEoD,aAAa;QAAElD,eAAe,EAAEkD;MAAc,CAAC,EAClE;QAAE5B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAAE,CAClD,CAAC;MAED,MAAMmC,eAAe,GAAGd,QAAQ,CAACd,IAAI;MACrC7B,aAAa,CAAE+C,cAAc,IAC3BA,cAAc,CAACE,GAAG,CAAEhB,QAAQ,IAC1BA,QAAQ,CAACiB,GAAG,KAAKI,EAAE,GAAGG,eAAe,GAAGxB,QAC1C,CACF,CAAC;MACDrB,UAAU,CAAC,8BAA8B,CAAC;IAC5C,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZtB,UAAU,CAAC,uBAAuB,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAM8C,oBAAoB,GAAG,MAAOJ,EAAE,IAAK;IACzC,IAAI;MACF,MAAMhC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAM9B,KAAK,CAACiE,MAAM,CAChB,oCAAoCL,EAAE,EAAE,EACxC;QAAE3B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAAE,CAClD,CAAC;MAEDtB,aAAa,CAAE+C,cAAc,IAC3BA,cAAc,CAACa,MAAM,CAAE3B,QAAQ,IAAKA,QAAQ,CAACiB,GAAG,KAAKI,EAAE,CACzD,CAAC;MACD1C,UAAU,CAAC,gCAAgC,CAAC;IAC9C,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZtB,UAAU,CAAC,yBAAyB,CAAC;IACvC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiE,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBlE,OAAA;MAAAkE,QAAA,GAAI,wBAAsB,EAACjD,YAAY;IAAA;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7CtE,OAAA;MAAAkE,QAAA,GAAG,sBAAe,EAAC7D,WAAW;IAAA;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAElCvD,OAAO,iBAAIf,OAAA;MAAAkE,QAAA,EAAInD;IAAO;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5BtE,OAAA;MAAKiE,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BlE,OAAA;QACEuE,KAAK,EAAE5D,WAAY;QACnB6D,QAAQ,EAAGC,CAAC,IAAK7D,cAAc,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,gBAEhDlE,OAAA;UAAQuE,KAAK,EAAC,EAAE;UAAAL,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxCnD,aAAa,CAACkC,GAAG,CAAEsB,GAAG,iBACrB3E,OAAA;UAAkBuE,KAAK,EAAEI,GAAI;UAAAT,QAAA,EAC1BS;QAAG,GADOA,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTtE,OAAA;QACE4E,IAAI,EAAC,QAAQ;QACbL,KAAK,EAAE1D,SAAU;QACjB2D,QAAQ,EAAGC,CAAC,IAAK3D,YAAY,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CM,WAAW,EAAC;MAAc;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACFtE,OAAA;QAAQ8E,OAAO,EAAErC,iBAAkB;QAAAyB,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eAENtE,OAAA;MAAAkE,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtE,OAAA;MAAAkE,QAAA,EACG/D,UAAU,CAACkD,GAAG,CAAEhB,QAAQ,iBACvBrC,OAAA;QAAAkE,QAAA,GACG7B,QAAQ,CAACA,QAAQ,EAAC,UAAG,EAACA,QAAQ,CAAC9B,eAAe,eAC/CP,OAAA;UAAQ8E,OAAO,EAAEA,CAAA,KAAMhB,oBAAoB,CAACzB,QAAQ,CAACiB,GAAG,CAAE;UAAAY,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1EtE,OAAA;UAAQ8E,OAAO,EAAEA,CAAA,KAAMrB,kBAAkB,CAACpB,QAAQ,CAACiB,GAAG,EAAEyB,MAAM,CAAC,aAAa,EAAE1C,QAAQ,CAAC9B,eAAe,CAAC,CAAE;UAAA2D,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHlHjC,QAAQ,CAACiB,GAAG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELtE,OAAA;MAAAkE,QAAA,GAAG,0BAAmB,EAACzD,eAAe;IAAA;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACpE,EAAA,CAvMID,gBAAgB;AAAA+E,EAAA,GAAhB/E,gBAAgB;AAyMtB,eAAeA,gBAAgB;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}