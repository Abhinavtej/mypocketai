{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/Reports.js\",\n  _s = $RefreshSig$();\n// components/Reports.js\nimport React, { useState, useEffect } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = ({\n  userId\n}) => {\n  _s();\n  const [reports, setReports] = useState({\n    monthlyIncome: [],\n    budgetAllocation: [],\n    expenseReport: [],\n    categoryReport: [],\n    remainingBudget: []\n  });\n  useEffect(() => {\n    // Fetch reports data from backend\n    const fetchReports = async () => {\n      try {\n        const incomeResponse = await axios.get(`/api/reports/monthly-income/${userId}`);\n        const budgetResponse = await axios.get(`/api/reports/budget-allocation/${userId}`);\n        const expenseResponse = await axios.get(`/api/reports/expense-report/${userId}`);\n        const categoryResponse = await axios.get(`/api/reports/category-report/${userId}`);\n        const remainingBudgetResponse = await axios.get(`/api/reports/remaining-budget/${userId}`);\n        setReports({\n          monthlyIncome: incomeResponse.data.data,\n          budgetAllocation: budgetResponse.data.data,\n          expenseReport: expenseResponse.data.data,\n          categoryReport: categoryResponse.data.data,\n          remainingBudget: remainingBudgetResponse.data.data\n        });\n      } catch (error) {\n        console.error(\"Error fetching reports:\", error);\n      }\n    };\n    fetchReports();\n  }, [userId]);\n\n  // Monthly Income Chart\n  const monthlyIncomeChart = {\n    labels: reports.monthlyIncome.map(item => item.date),\n    datasets: [{\n      label: \"Monthly Income\",\n      data: reports.monthlyIncome.map(item => item.amount),\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n\n  // Category-wise Expense Pie Chart\n  const categoryExpenseChart = {\n    labels: reports.categoryReport.map(item => item._id),\n    datasets: [{\n      data: reports.categoryReport.map(item => item.totalExpense),\n      backgroundColor: [\"#FF5733\", \"#33FF57\", \"#5733FF\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monthly Income Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: monthlyIncomeChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Category-wise Expense Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: categoryExpenseChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"sAmnp7qO2T3/qv9BH4seaBImYIo=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Line","Pie","axios","jsxDEV","_jsxDEV","Reports","userId","_s","reports","setReports","monthlyIncome","budgetAllocation","expenseReport","categoryReport","remainingBudget","fetchReports","incomeResponse","get","budgetResponse","expenseResponse","categoryResponse","remainingBudgetResponse","data","error","console","monthlyIncomeChart","labels","map","item","date","datasets","label","amount","borderColor","fill","categoryExpenseChart","_id","totalExpense","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/Reports.js"],"sourcesContent":["// components/Reports.js\nimport React, { useState, useEffect } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\n\nconst Reports = ({ userId }) => {\n  const [reports, setReports] = useState({\n    monthlyIncome: [],\n    budgetAllocation: [],\n    expenseReport: [],\n    categoryReport: [],\n    remainingBudget: [],\n  });\n\n  useEffect(() => {\n    // Fetch reports data from backend\n    const fetchReports = async () => {\n      try {\n        const incomeResponse = await axios.get(`/api/reports/monthly-income/${userId}`);\n        const budgetResponse = await axios.get(`/api/reports/budget-allocation/${userId}`);\n        const expenseResponse = await axios.get(`/api/reports/expense-report/${userId}`);\n        const categoryResponse = await axios.get(`/api/reports/category-report/${userId}`);\n        const remainingBudgetResponse = await axios.get(`/api/reports/remaining-budget/${userId}`);\n\n        setReports({\n          monthlyIncome: incomeResponse.data.data,\n          budgetAllocation: budgetResponse.data.data,\n          expenseReport: expenseResponse.data.data,\n          categoryReport: categoryResponse.data.data,\n          remainingBudget: remainingBudgetResponse.data.data,\n        });\n      } catch (error) {\n        console.error(\"Error fetching reports:\", error);\n      }\n    };\n\n    fetchReports();\n  }, [userId]);\n\n  // Monthly Income Chart\n  const monthlyIncomeChart = {\n    labels: reports.monthlyIncome.map((item) => item.date),\n    datasets: [\n      {\n        label: \"Monthly Income\",\n        data: reports.monthlyIncome.map((item) => item.amount),\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false,\n      },\n    ],\n  };\n\n  // Category-wise Expense Pie Chart\n  const categoryExpenseChart = {\n    labels: reports.categoryReport.map((item) => item._id),\n    datasets: [\n      {\n        data: reports.categoryReport.map((item) => item.totalExpense),\n        backgroundColor: [\"#FF5733\", \"#33FF57\", \"#5733FF\"],\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h2>Reports</h2>\n      <div>\n        <h3>Monthly Income Report</h3>\n        <Line data={monthlyIncomeChart} />\n      </div>\n\n      <div>\n        <h3>Category-wise Expense Report</h3>\n        <Pie data={categoryExpenseChart} />\n      </div>\n\n      {/* Add more charts here for other reports like budget allocation, remaining budget, etc. */}\n    </div>\n  );\n};\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}