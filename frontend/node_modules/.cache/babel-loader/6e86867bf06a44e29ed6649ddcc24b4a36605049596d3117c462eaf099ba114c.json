{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const category_data = [\"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \"Savings\", \"Miscellaneous\"];\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Token not found. Please log in again.\");\n          return;\n        }\n        console.log(\"Token:\", token); // Add this line for debugging\n\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          totalIncome,\n          categories\n        } = budgetResponse.data;\n        if (!totalIncome || totalIncome <= 0) {\n          setMessage(\"Invalid total income data.\");\n          return;\n        }\n        setTotalIncome(totalIncome); // Set state for total income\n        setCategories(categories);\n      } catch (err) {\n        console.error(err);\n        setMessage(\"Error fetching data\");\n      }\n    };\n    fetchBudgetData();\n  }, []);\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n    const currentDate = new Date().toISOString().split(\"T\")[0]; // \"2024-11-09\" format\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3001/api/budget\", {\n        category: newCategory,\n        budgetAllocated: parseFloat(newBudget),\n        remainingBudget: parseFloat(newBudget),\n        date: currentDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const addedCategory = response.data;\n      setCategories(prevCategories => [...prevCategories, addedCategory]);\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n\n  // Handle updating the budget for a category\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    if (updatedBudget <= 0 || updatedBudget > totalIncome) {\n      setMessage(\"Invalid updated budget value.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budgetAllocated: updatedBudget,\n        remainingBudget: updatedBudget\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedCategory = response.data;\n      setCategories(prevCategories => prevCategories.map(category => category._id === id ? updatedCategory : category));\n      setMessage(\"Budget updated successfully!\");\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n\n  // Handle removing a category\n  const handleRemoveCategory = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => prevCategories.filter(category => category._id !== id));\n      setMessage(\"Category removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Allocated Budget: \\u20B9\", budgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Remaining Budget: \\u20B9\", remainingBudget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Category & Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), category_data.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudget,\n        onChange: e => setNewBudget(e.target.value),\n        placeholder: \"Enter Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Category & Budget List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"category-list\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [category.category, \": \\u20B9\", category.budgetAllocated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", new Date(category.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Update Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: category.budgetAllocated,\n          onChange: e => handleBudgetUpdate(category._id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveCategory(category._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, category._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"MxlM6tfM8Y9PRDSXwUeZtP5+CaI=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","categories","setCategories","totalIncome","setTotalIncome","budgetAllocated","setBudgetAllocated","remainingBudget","setRemainingBudget","newCategory","setNewCategory","newBudget","setNewBudget","message","setMessage","currentMonth","setCurrentMonth","category_data","month","Date","toLocaleString","year","getFullYear","fetchBudgetData","token","localStorage","getItem","console","log","budgetResponse","get","headers","Authorization","data","err","error","handleAddCategory","newTotalAllocated","parseFloat","currentDate","toISOString","split","response","post","category","date","addedCategory","prevCategories","handleBudgetUpdate","id","updatedBudget","put","updatedCategory","map","_id","handleRemoveCategory","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","index","type","placeholder","onClick","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  const category_data = [\n    \"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \n    \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \n    \"Savings\", \"Miscellaneous\"\n  ];\n\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Token not found. Please log in again.\");\n          return;\n        }\n  \n        console.log(\"Token:\", token); // Add this line for debugging\n  \n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n  \n        const { totalIncome, categories } = budgetResponse.data;\n        if (!totalIncome || totalIncome <= 0) {\n          setMessage(\"Invalid total income data.\");\n          return;\n        }\n  \n        setTotalIncome(totalIncome);  // Set state for total income\n        setCategories(categories);\n      } catch (err) {\n        console.error(err);\n        setMessage(\"Error fetching data\");\n      }\n    };\n  \n    fetchBudgetData();\n  }, []);\n  \n\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n\n    const currentDate = new Date().toISOString().split(\"T\")[0]; // \"2024-11-09\" format\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\n        \"http://localhost:3001/api/budget\",\n        { category: newCategory, budgetAllocated: parseFloat(newBudget), remainingBudget: parseFloat(newBudget), date: currentDate },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const addedCategory = response.data;\n      setCategories((prevCategories) => [...prevCategories, addedCategory]);\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n\n  // Handle updating the budget for a category\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    if (updatedBudget <= 0 || updatedBudget > totalIncome) {\n      setMessage(\"Invalid updated budget value.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        { budgetAllocated: updatedBudget, remainingBudget: updatedBudget },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const updatedCategory = response.data;\n      setCategories((prevCategories) =>\n        prevCategories.map((category) =>\n          category._id === id ? updatedCategory : category\n        )\n      );\n      setMessage(\"Budget updated successfully!\");\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n\n  // Handle removing a category\n  const handleRemoveCategory = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setCategories((prevCategories) =>\n        prevCategories.filter((category) => category._id !== id)\n      );\n      setMessage(\"Category removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n      <div className=\"budget-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n        <h4>Allocated Budget: ₹{budgetAllocated}</h4>\n        <h4>Remaining Budget: ₹{remainingBudget}</h4>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <p>Add Category & Budget</p>\n      <div className=\"add-category\">\n        <select value={newCategory} onChange={(e) => setNewCategory(e.target.value)}>\n          <option value=\"\">Select a Category</option>\n          {category_data.map((category, index) => (\n            <option key={index} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n        <input \n          type=\"number\" \n          value={newBudget} \n          onChange={(e) => setNewBudget(e.target.value)} \n          placeholder=\"Enter Budget Amount\" \n        />\n        <button onClick={handleAddCategory}>Add Category</button>\n      </div>\n\n      <p>Category & Budget List</p>\n      <ul className=\"category-list\">\n        {categories.map((category) => (\n          <li className=\"category-item\" key={category._id}>\n            <span>{category.category}: ₹{category.budgetAllocated}</span>\n            <span>Date: {new Date(category.date).toLocaleDateString()}</span>\n            <p>Update Value:</p>&nbsp;\n            <input\n              type=\"number\"\n              value={category.budgetAllocated}\n              onChange={(e) => handleBudgetUpdate(category._id, e.target.value)}\n            />\n            <button onClick={() => handleRemoveCategory(category._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}