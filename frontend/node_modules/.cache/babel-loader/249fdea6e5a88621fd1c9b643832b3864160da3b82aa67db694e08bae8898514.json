{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/ExpenseManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/ExpenseManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseManagement = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [categories, setCategories] = useState([]); // State for categories\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n\n  // Get the current month\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch expenses and budget data\n  useEffect(() => {\n    const fetchExpenseData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch expenses data\n        const expenseResponse = await axios.get(\"http://localhost:3001/api/expense\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const expensesData = expenseResponse.data;\n        setExpenses(expensesData);\n\n        // Fetch categories from the budget allocation endpoint\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const fetchedCategories = budgetResponse.data.categories; // Assuming categories are stored in \"categories\"\n        setCategories(fetchedCategories);\n        setBudgetAllocated(budgetResponse.data.budgetAllocated);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n    fetchExpenseData();\n  }, []);\n\n  // Handle adding a new expense\n  const handleAddExpense = async () => {\n    if (!newCategory || !newAmount || newAmount <= 0) {\n      setMessage(\"Please provide a valid category and amount.\");\n      return;\n    }\n    const totalExpensesInCategory = expenses.filter(expense => expense.category === newCategory).reduce((sum, expense) => sum + expense.amount, 0);\n    if (totalExpensesInCategory + parseFloat(newAmount) > budgetAllocated) {\n      setMessage(\"Expenses for this category exceed the allocated budget.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3001/api/expense\", {\n        category: newCategory,\n        amount: parseFloat(newAmount)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setExpenses(prevExpenses => [...prevExpenses, response.data]);\n      setMessage(\"Expense added successfully!\");\n      setNewCategory(\"\");\n      setNewAmount(\"\");\n    } catch (err) {\n      setMessage(\"Error adding expense\");\n    }\n  };\n  const handleExpenseUpdate = async (id, updatedAmount) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:3001/api/expense/${id}`, {\n        amount: updatedAmount\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedExpenses = expenses.map(expense => expense._id === id ? {\n        ...expense,\n        amount: updatedAmount\n      } : expense);\n      setExpenses(updatedExpenses);\n    } catch (err) {\n      setMessage(\"Error updating expense\");\n    }\n  };\n  const handleRemoveExpense = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/expense/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedExpenses = expenses.filter(expense => expense._id !== id);\n      setExpenses(updatedExpenses);\n      setMessage(\"Expense removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing expense\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Date: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-expense\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.category,\n          children: category.category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: newAmount,\n        onChange: e => setNewAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddExpense,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-list\",\n      children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [expense.category, \": \\u20B9\", expense.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", new Date(expense.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: expense.amount,\n          onChange: e => handleExpenseUpdate(expense._id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveExpense(expense._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, expense._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseManagement, \"PI3wKyRpT6XWwVyCp24/Lf6zsg8=\");\n_c = ExpenseManagement;\nexport default ExpenseManagement;\nvar _c;\n$RefreshReg$(_c, \"ExpenseManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExpenseManagement","_s","expenses","setExpenses","categories","setCategories","newCategory","setNewCategory","newAmount","setNewAmount","message","setMessage","currentMonth","setCurrentMonth","budgetAllocated","setBudgetAllocated","month","Date","toLocaleString","year","getFullYear","fetchExpenseData","token","localStorage","getItem","expenseResponse","get","headers","Authorization","expensesData","data","budgetResponse","fetchedCategories","err","handleAddExpense","totalExpensesInCategory","filter","expense","category","reduce","sum","amount","parseFloat","response","post","prevExpenses","handleExpenseUpdate","id","updatedAmount","put","updatedExpenses","map","_id","handleRemoveExpense","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","index","type","placeholder","onClick","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/ExpenseManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/ExpenseManagement.css\";\n\nconst ExpenseManagement = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [categories, setCategories] = useState([]); // State for categories\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n\n  // Get the current month\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch expenses and budget data\n  useEffect(() => {\n    const fetchExpenseData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch expenses data\n        const expenseResponse = await axios.get(\"http://localhost:3001/api/expense\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const expensesData = expenseResponse.data;\n        setExpenses(expensesData);\n\n        // Fetch categories from the budget allocation endpoint\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const fetchedCategories = budgetResponse.data.categories; // Assuming categories are stored in \"categories\"\n        setCategories(fetchedCategories);\n\n        setBudgetAllocated(budgetResponse.data.budgetAllocated);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n\n    fetchExpenseData();\n  }, []);\n\n  // Handle adding a new expense\n  const handleAddExpense = async () => {\n    if (!newCategory || !newAmount || newAmount <= 0) {\n      setMessage(\"Please provide a valid category and amount.\");\n      return;\n    }\n\n    const totalExpensesInCategory = expenses\n      .filter(expense => expense.category === newCategory)\n      .reduce((sum, expense) => sum + expense.amount, 0);\n\n    if (totalExpensesInCategory + parseFloat(newAmount) > budgetAllocated) {\n      setMessage(\"Expenses for this category exceed the allocated budget.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\n        \"http://localhost:3001/api/expense\",\n        {\n          category: newCategory,\n          amount: parseFloat(newAmount),\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      setExpenses((prevExpenses) => [...prevExpenses, response.data]);\n      setMessage(\"Expense added successfully!\");\n      setNewCategory(\"\");\n      setNewAmount(\"\");\n    } catch (err) {\n      setMessage(\"Error adding expense\");\n    }\n  };\n\n  const handleExpenseUpdate = async (id, updatedAmount) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(\n        `http://localhost:3001/api/expense/${id}`,\n        { amount: updatedAmount },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const updatedExpenses = expenses.map((expense) =>\n        expense._id === id ? { ...expense, amount: updatedAmount } : expense\n      );\n\n      setExpenses(updatedExpenses);\n    } catch (err) {\n      setMessage(\"Error updating expense\");\n    }\n  };\n\n  const handleRemoveExpense = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/expense/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      const updatedExpenses = expenses.filter((expense) => expense._id !== id);\n      setExpenses(updatedExpenses);\n      setMessage(\"Expense removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing expense\");\n    }\n  };\n\n  return (\n    <div className=\"expense-container\">\n      <h2>Expense Management</h2>\n      <p className=\"date-display\">Date: {currentMonth}</p>\n\n      <div className=\"add-expense\">\n        <select\n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n        >\n          {categories.map((category, index) => (\n            <option key={index} value={category.category}>\n              {category.category}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"Amount\"\n          value={newAmount}\n          onChange={(e) => setNewAmount(e.target.value)}\n        />\n        <button onClick={handleAddExpense}>Add Expense</button>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <div className=\"expense-list\">\n        {expenses.map((expense) => (\n          <div key={expense._id} className=\"expense-item\">\n            <span>{expense.category}: ₹{expense.amount}</span>\n            <span>Date: {new Date(expense.date).toLocaleDateString()}</span>\n            <input\n              type=\"number\"\n              value={expense.amount}\n              onChange={(e) => handleExpenseUpdate(expense._id, e.target.value)}\n            />\n            <button onClick={() => handleRemoveExpense(expense._id)}>Remove</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}