{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [budgetList, setBudgetList] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalBudgetAllocated, setTotalBudgetAllocated] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [newBudgetAllocated, setNewBudgetAllocated] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const categories = [\"Groceries\", \"Rent\", \"Utilities\", \"Entertainment\", \"Savings\", \"Miscellaneous\"];\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch income and budget data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to access budget data.\");\n          return;\n        }\n        const [incomeResponse, budgetResponse] = await Promise.all([axios.get(\"http://localhost:3001/api/income\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n        setTotalIncome(incomeResponse.data.totalIncome);\n        const budgets = budgetResponse.data.budgets;\n        setBudgetList(budgets);\n        setTotalBudgetAllocated(budgets.reduce((total, budget) => total + budget.budgetAllocated, 0));\n      } catch (err) {\n        setMessage(\"Error fetching data. Please try again.\");\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddBudget = async () => {\n    if (!selectedCategory || !newBudgetAllocated) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n    if (totalBudgetAllocated === totalIncome) {\n      setMessage(\"Total Income is fully allocated.\");\n      return;\n    }\n    const newAllocation = parseFloat(newBudgetAllocated);\n    if (newAllocation + totalBudgetAllocated > totalIncome) {\n      setMessage(\"Budget allocation cannot exceed total income.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to access budget data.\");\n        return;\n      }\n      const [incomeResponse, budgetResponse] = await Promise.all([axios.get(\"http://localhost:3001/api/income\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(\"http://localhost:3001/api/budget\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(budgets.reduce((total, budget) => total + budget.budgetAllocated, 0));\n    } catch (err) {\n      setMessage(\"Error adding budget. Please try again.\");\n    }\n  };\n  const handleUpdateBudget = async (id, newAllocation) => {\n    try {\n      var _budgetList$find;\n      const updatedAllocation = parseFloat(newAllocation);\n      if (isNaN(updatedAllocation) || updatedAllocation <= 0) {\n        setMessage(\"Please provide a valid budget allocation.\");\n        return;\n      }\n      const currentBudget = ((_budgetList$find = budgetList.find(b => b._id === id)) === null || _budgetList$find === void 0 ? void 0 : _budgetList$find.budgetAllocated) || 0;\n      if (updatedAllocation + totalBudgetAllocated - currentBudget > totalIncome) {\n        setMessage(\"Updated budget exceeds total income.\");\n        return;\n      }\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to update a budget.\");\n        return;\n      }\n      await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budgetAllocated: updatedAllocation\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Budget updated successfully!\");\n\n      // Inline the refresh data logic\n      const [incomeResponse, budgetResponse] = await Promise.all([axios.get(\"http://localhost:3001/api/income\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(\"http://localhost:3001/api/budget\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(budgets.reduce((total, budget) => total + budget.budgetAllocated, 0));\n    } catch (err) {\n      setMessage(\"Error updating budget. Please try again.\");\n    }\n  };\n  const handleRemoveBudget = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove a budget.\");\n        return;\n      }\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Budget removed successfully!\");\n\n      // Inline the refresh data logic\n      const [incomeResponse, budgetResponse] = await Promise.all([axios.get(\"http://localhost:3001/api/income\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(\"http://localhost:3001/api/budget\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(budgets.reduce((total, budget) => total + budget.budgetAllocated, 0));\n    } catch (err) {\n      setMessage(\"Error removing budget. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total Budget Allocated: \\u20B9\", totalBudgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Budget Remaining: \\u20B9\", totalIncome - totalBudgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-budget\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudgetAllocated,\n        onChange: e => setNewBudgetAllocated(e.target.value),\n        placeholder: \"Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddBudget,\n        children: \"Add Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Budget List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"budget-list\",\n        children: budgetList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"budget-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.category, \": \\u20B9\", item.budgetAllocated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Date: \", new Date(item.date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Update Value:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            defaultValue: item.budgetAllocated,\n            onBlur: e => handleUpdateBudget(item._id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveBudget(item._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"mzCVM8ay8a0C8LgLUaTwJw6o8m8=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","budgetList","setBudgetList","totalIncome","setTotalIncome","totalBudgetAllocated","setTotalBudgetAllocated","selectedCategory","setSelectedCategory","newBudgetAllocated","setNewBudgetAllocated","message","setMessage","currentMonth","setCurrentMonth","categories","month","Date","toLocaleString","year","getFullYear","fetchData","token","localStorage","getItem","incomeResponse","budgetResponse","Promise","all","get","headers","Authorization","data","budgets","reduce","total","budget","budgetAllocated","err","handleAddBudget","newAllocation","parseFloat","handleUpdateBudget","id","_budgetList$find","updatedAllocation","isNaN","currentBudget","find","b","_id","put","handleRemoveBudget","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","category","index","type","placeholder","onClick","item","date","toLocaleDateString","defaultValue","onBlur","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [budgetList, setBudgetList] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalBudgetAllocated, setTotalBudgetAllocated] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [newBudgetAllocated, setNewBudgetAllocated] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  const categories = [\n    \"Groceries\",\n    \"Rent\",\n    \"Utilities\",\n    \"Entertainment\",\n    \"Savings\",\n    \"Miscellaneous\",\n  ];\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch income and budget data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to access budget data.\");\n          return;\n        }\n  \n        const [incomeResponse, budgetResponse] = await Promise.all([\n          axios.get(\"http://localhost:3001/api/income\", {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n          axios.get(\"http://localhost:3001/api/budget\", {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n        ]);\n  \n        setTotalIncome(incomeResponse.data.totalIncome);\n        const budgets = budgetResponse.data.budgets;\n        setBudgetList(budgets);\n        setTotalBudgetAllocated(\n          budgets.reduce((total, budget) => total + budget.budgetAllocated, 0)\n        );\n      } catch (err) {\n        setMessage(\"Error fetching data. Please try again.\");\n      }\n    };\n  \n    fetchData();\n  }, []);\n  \n  const handleAddBudget = async () => {\n    if (!selectedCategory || !newBudgetAllocated) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n\n    if (totalBudgetAllocated === totalIncome) {\n      setMessage(\"Total Income is fully allocated.\");\n      return;\n    }\n\n    const newAllocation = parseFloat(newBudgetAllocated);\n    if (newAllocation + totalBudgetAllocated > totalIncome) {\n      setMessage(\"Budget allocation cannot exceed total income.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to access budget data.\");\n        return;\n      }\n\n      const [incomeResponse, budgetResponse] = await Promise.all([\n        axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n\n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(\n        budgets.reduce((total, budget) => total + budget.budgetAllocated, 0)\n      );\n    } catch (err) {\n      setMessage(\"Error adding budget. Please try again.\");\n    }\n  };\n\n  const handleUpdateBudget = async (id, newAllocation) => {\n    try {\n      const updatedAllocation = parseFloat(newAllocation);\n      if (isNaN(updatedAllocation) || updatedAllocation <= 0) {\n        setMessage(\"Please provide a valid budget allocation.\");\n        return;\n      }\n  \n      const currentBudget = budgetList.find((b) => b._id === id)?.budgetAllocated || 0;\n      if (updatedAllocation + totalBudgetAllocated - currentBudget > totalIncome) {\n        setMessage(\"Updated budget exceeds total income.\");\n        return;\n      }\n  \n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to update a budget.\");\n        return;\n      }\n  \n      await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        { budgetAllocated: updatedAllocation },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n  \n      setMessage(\"Budget updated successfully!\");\n  \n      // Inline the refresh data logic\n      const [incomeResponse, budgetResponse] = await Promise.all([\n        axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n  \n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(\n        budgets.reduce((total, budget) => total + budget.budgetAllocated, 0)\n      );\n    } catch (err) {\n      setMessage(\"Error updating budget. Please try again.\");\n    }\n  };\n  \n  const handleRemoveBudget = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove a budget.\");\n        return;\n      }\n  \n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      setMessage(\"Budget removed successfully!\");\n  \n      // Inline the refresh data logic\n      const [incomeResponse, budgetResponse] = await Promise.all([\n        axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n  \n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(\n        budgets.reduce((total, budget) => total + budget.budgetAllocated, 0)\n      );\n    } catch (err) {\n      setMessage(\"Error removing budget. Please try again.\");\n    }\n  };\n  \n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n      <div className=\"budget-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n        <h4>Total Budget Allocated: ₹{totalBudgetAllocated}</h4>\n        <h4>Budget Remaining: ₹{totalIncome - totalBudgetAllocated}</h4>\n      </div>\n      {message && <p className=\"message\">{message}</p>}\n\n      <h4>Add Budget</h4>\n      <div className=\"add-budget\">\n        <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n          <option value=\"\">Select Category</option>\n          {categories.map((category, index) => (\n            <option key={index} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newBudgetAllocated}\n          onChange={(e) => setNewBudgetAllocated(e.target.value)}\n          placeholder=\"Budget Amount\"\n        />\n        <button onClick={handleAddBudget}>Add Budget</button>\n      </div>\n\n      <div>\n        <h4>Budget List</h4>\n        <ul className=\"budget-list\">\n          {budgetList.map((item) => (\n            <li key={item._id} className=\"budget-item\">\n              <span>\n                {item.category}: ₹{item.budgetAllocated}\n              </span>\n              <span>Date: {new Date(item.date).toLocaleDateString()}</span>\n              <p>Update Value:</p>\n              <input\n                type=\"number\"\n                defaultValue={item.budgetAllocated}\n                onBlur={(e) => handleUpdateBudget(item._id, e.target.value)}\n              />\n              <button onClick={() => handleRemoveBudget(item._id)}>Remove</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}