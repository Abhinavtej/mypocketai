{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, ArcElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register Chart.js components (including ArcElement for Pie charts)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, ArcElement, Title, Tooltip, Legend);\nconst Reports = ({\n  userId\n}) => {\n  _s();\n  const [reports, setReports] = useState({\n    monthlyIncome: [],\n    budgetAllocation: [],\n    expenseReport: [],\n    categoryReport: [],\n    remainingBudget: []\n  });\n  useEffect(() => {\n    // Fetch reports data from backend\n    const fetchReports = async () => {\n      try {\n        const incomeResponse = await axios.get(`http://localhost:3001/api/reports/monthly-income/${userId}`);\n        console.log(\"Income Response:\", incomeResponse.data);\n        const budgetResponse = await axios.get(`http://localhost:3001/api/reports/budget-allocation/${userId}`);\n        console.log(\"Budget Response:\", budgetResponse.data);\n        const expenseResponse = await axios.get(`http://localhost:3001/api/reports/expense-report/${userId}`);\n        console.log(\"Expense Response:\", expenseResponse.data);\n        const categoryResponse = await axios.get(`http://localhost:3001/api/reports/category-report/${userId}`);\n        console.log(\"Category Response:\", categoryResponse.data);\n        const remainingBudgetResponse = await axios.get(`http://localhost:3001/api/reports/remaining-budget/${userId}`);\n        console.log(\"Remaining Budget Response:\", remainingBudgetResponse.data);\n        setReports({\n          monthlyIncome: incomeResponse.data.data || [],\n          budgetAllocation: budgetResponse.data.data || [],\n          expenseReport: expenseResponse.data.data || [],\n          categoryReport: categoryResponse.data.data || [],\n          remainingBudget: remainingBudgetResponse.data.data || []\n        });\n      } catch (error) {\n        console.error(\"Error fetching reports:\", error);\n      }\n    };\n    if (userId) {\n      fetchReports();\n    }\n  }, [userId]);\n\n  // Monthly Income Chart Configuration\n  const monthlyIncomeChart = {\n    labels: reports.monthlyIncome.map(item => item.date),\n    datasets: [{\n      label: \"Monthly Income\",\n      data: reports.monthlyIncome.map(item => item.amount),\n      borderColor: \"rgba(75,192,192,1)\",\n      fill: false\n    }]\n  };\n\n  // Category-wise Expense Pie Chart Configuration\n  const categoryExpenseChart = {\n    labels: reports.categoryReport.map(item => item._id),\n    datasets: [{\n      data: reports.categoryReport.map(item => item.totalExpense),\n      backgroundColor: [\"#FF5733\", \"#33FF57\", \"#5733FF\", \"#FFC300\", \"#FF9F00\", \"#DAF7A6\", \"#C70039\"] // Additional colors can be added as needed\n    }]\n  };\n\n  // Budget Allocation Chart Configuration\n  const budgetAllocationChart = {\n    labels: reports.budgetAllocation.map(item => item.category),\n    datasets: [{\n      label: \"Budget Allocation\",\n      data: reports.budgetAllocation.map(item => item.allocatedAmount),\n      backgroundColor: \"#FF6347\",\n      borderColor: \"#FF4500\",\n      borderWidth: 1\n    }]\n  };\n\n  // Remaining Budget Chart Configuration\n  const remainingBudgetChart = {\n    labels: reports.remainingBudget.map(item => item.category),\n    datasets: [{\n      label: \"Remaining Budget\",\n      data: reports.remainingBudget.map(item => item.remainingAmount),\n      backgroundColor: \"#4CAF50\",\n      borderColor: \"#388E3C\",\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), reports.monthlyIncome.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monthly Income Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: monthlyIncomeChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), reports.categoryReport.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Category-wise Expense Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: categoryExpenseChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), reports.budgetAllocation.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Budget Allocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: budgetAllocationChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), reports.remainingBudget.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Remaining Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: remainingBudgetChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"sAmnp7qO2T3/qv9BH4seaBImYIo=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Line","Pie","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Reports","userId","_s","reports","setReports","monthlyIncome","budgetAllocation","expenseReport","categoryReport","remainingBudget","fetchReports","incomeResponse","get","console","log","data","budgetResponse","expenseResponse","categoryResponse","remainingBudgetResponse","error","monthlyIncomeChart","labels","map","item","date","datasets","label","amount","borderColor","fill","categoryExpenseChart","_id","totalExpense","backgroundColor","budgetAllocationChart","category","allocatedAmount","borderWidth","remainingBudgetChart","remainingAmount","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\n// Register Chart.js components (including ArcElement for Pie charts)\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst Reports = ({ userId }) => {\n  const [reports, setReports] = useState({\n    monthlyIncome: [],\n    budgetAllocation: [],\n    expenseReport: [],\n    categoryReport: [],\n    remainingBudget: [],\n  });\n\n  useEffect(() => {\n    // Fetch reports data from backend\n    const fetchReports = async () => {\n      try {\n        const incomeResponse = await axios.get(`http://localhost:3001/api/reports/monthly-income/${userId}`);\n        console.log(\"Income Response:\", incomeResponse.data);\n        const budgetResponse = await axios.get(`http://localhost:3001/api/reports/budget-allocation/${userId}`);\n        console.log(\"Budget Response:\", budgetResponse.data);\n        const expenseResponse = await axios.get(`http://localhost:3001/api/reports/expense-report/${userId}`);\n        console.log(\"Expense Response:\", expenseResponse.data);\n        const categoryResponse = await axios.get(`http://localhost:3001/api/reports/category-report/${userId}`);\n        console.log(\"Category Response:\", categoryResponse.data);\n        const remainingBudgetResponse = await axios.get(`http://localhost:3001/api/reports/remaining-budget/${userId}`);\n        console.log(\"Remaining Budget Response:\", remainingBudgetResponse.data);\n    \n        setReports({\n          monthlyIncome: incomeResponse.data.data || [],\n          budgetAllocation: budgetResponse.data.data || [],\n          expenseReport: expenseResponse.data.data || [],\n          categoryReport: categoryResponse.data.data || [],\n          remainingBudget: remainingBudgetResponse.data.data || [],\n        });\n      } catch (error) {\n        console.error(\"Error fetching reports:\", error);\n      }\n    };    \n\n    if (userId) {\n      fetchReports();\n    }\n  }, [userId]);\n\n  // Monthly Income Chart Configuration\n  const monthlyIncomeChart = {\n    labels: reports.monthlyIncome.map((item) => item.date),\n    datasets: [\n      {\n        label: \"Monthly Income\",\n        data: reports.monthlyIncome.map((item) => item.amount),\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false,\n      },\n    ],\n  };\n\n  // Category-wise Expense Pie Chart Configuration\n  const categoryExpenseChart = {\n    labels: reports.categoryReport.map((item) => item._id),\n    datasets: [\n      {\n        data: reports.categoryReport.map((item) => item.totalExpense),\n        backgroundColor: [\n          \"#FF5733\",\n          \"#33FF57\",\n          \"#5733FF\",\n          \"#FFC300\",\n          \"#FF9F00\",\n          \"#DAF7A6\",\n          \"#C70039\",\n        ], // Additional colors can be added as needed\n      },\n    ],\n  };\n\n  // Budget Allocation Chart Configuration\n  const budgetAllocationChart = {\n    labels: reports.budgetAllocation.map((item) => item.category),\n    datasets: [\n      {\n        label: \"Budget Allocation\",\n        data: reports.budgetAllocation.map((item) => item.allocatedAmount),\n        backgroundColor: \"#FF6347\",\n        borderColor: \"#FF4500\",\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Remaining Budget Chart Configuration\n  const remainingBudgetChart = {\n    labels: reports.remainingBudget.map((item) => item.category),\n    datasets: [\n      {\n        label: \"Remaining Budget\",\n        data: reports.remainingBudget.map((item) => item.remainingAmount),\n        backgroundColor: \"#4CAF50\",\n        borderColor: \"#388E3C\",\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h2>Reports</h2>\n\n      {/* Monthly Income Report */}\n      {reports.monthlyIncome.length > 0 && (\n        <div>\n          <h3>Monthly Income Report</h3>\n          <Line data={monthlyIncomeChart} />\n        </div>\n      )}\n\n      {/* Category-wise Expense Report */}\n      {reports.categoryReport.length > 0 && (\n        <div>\n          <h3>Category-wise Expense Report</h3>\n          <Pie data={categoryExpenseChart} />\n        </div>\n      )}\n\n      {/* Budget Allocation Report */}\n      {reports.budgetAllocation.length > 0 && (\n        <div>\n          <h3>Budget Allocation</h3>\n          <Pie data={budgetAllocationChart} />\n        </div>\n      )}\n\n      {/* Remaining Budget Report */}\n      {reports.remainingBudget.length > 0 && (\n        <div>\n          <h3>Remaining Budget</h3>\n          <Pie data={remainingBudgetChart} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}