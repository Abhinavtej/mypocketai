{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomeManagement = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [incomeSource, setIncomeSource] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [incomeList, setIncomeList] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null); // To store the authenticated user ID\n\n  useEffect(() => {\n    // Fetch current user's data from auth service (assuming JWT or similar auth method)\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await axios.get('/api/auth/me');\n        setCurrentUser(res.data.user);\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n  useEffect(() => {\n    // Fetch existing income data for the user\n    const fetchIncomeData = async () => {\n      if (currentUser) {\n        const res = await axios.get(`/api/income/${currentUser._id}`);\n        setIncomeList(res.data.income);\n      }\n    };\n    fetchIncomeData();\n  }, [currentUser]);\n  const handleAddIncome = async () => {\n    const incomeData = {\n      userId: currentUser._id,\n      date: date.toISOString(),\n      source: incomeSource,\n      amount: incomeAmount\n    };\n    try {\n      const response = await axios.post('/api/income', incomeData);\n      setIncomeList([...incomeList, response.data]);\n      setIncomeSource('');\n      setIncomeAmount('');\n    } catch (error) {\n      console.error('Error adding income:', error);\n    }\n  };\n  const handleRemoveIncome = async incomeId => {\n    try {\n      await axios.delete(`/api/income/${incomeId}`);\n      setIncomeList(incomeList.filter(item => item._id !== incomeId));\n    } catch (error) {\n      console.error('Error removing income:', error);\n    }\n  };\n  const handleUpdateIncome = async (incomeId, updatedAmount) => {\n    try {\n      const response = await axios.put(`/api/income/${incomeId}`, {\n        amount: updatedAmount\n      });\n      setIncomeList(incomeList.map(item => item._id === incomeId ? response.data : item));\n    } catch (error) {\n      console.error('Error updating income:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"income-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Income Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: date.toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [date.toLocaleString('default', {\n          month: 'long'\n        }), \", \", date.getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Income Source\",\n        value: incomeSource,\n        onChange: e => setIncomeSource(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Income Amount\",\n        value: incomeAmount,\n        onChange: e => setIncomeAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddIncome,\n        children: \"Add Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Income for \", date.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: incomeList.map(income => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [income.source, \": \", income.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveIncome(income._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateIncome(income._id, prompt(\"Enter new amount:\", income.amount)),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, income._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(IncomeManagement, \"M1Tu5oUbLNW3bCfG3DxzHdGgp1s=\");\n_c = IncomeManagement;\nexport default IncomeManagement;\nvar _c;\n$RefreshReg$(_c, \"IncomeManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","IncomeManagement","_s","date","setDate","Date","incomeSource","setIncomeSource","incomeAmount","setIncomeAmount","incomeList","setIncomeList","currentUser","setCurrentUser","fetchCurrentUser","res","get","data","user","error","console","fetchIncomeData","_id","income","handleAddIncome","incomeData","userId","toISOString","source","amount","response","post","handleRemoveIncome","incomeId","delete","filter","item","handleUpdateIncome","updatedAmount","put","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","toLocaleString","month","getFullYear","type","placeholder","value","onChange","e","target","onClick","prompt","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst IncomeManagement = () => {\n  const [date, setDate] = useState(new Date());\n  const [incomeSource, setIncomeSource] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [incomeList, setIncomeList] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null); // To store the authenticated user ID\n\n  useEffect(() => {\n    // Fetch current user's data from auth service (assuming JWT or similar auth method)\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await axios.get('/api/auth/me');\n        setCurrentUser(res.data.user);\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n\n  useEffect(() => {\n    // Fetch existing income data for the user\n    const fetchIncomeData = async () => {\n      if (currentUser) {\n        const res = await axios.get(`/api/income/${currentUser._id}`);\n        setIncomeList(res.data.income);\n      }\n    };\n    fetchIncomeData();\n  }, [currentUser]);\n\n  const handleAddIncome = async () => {\n    const incomeData = {\n      userId: currentUser._id,\n      date: date.toISOString(),\n      source: incomeSource,\n      amount: incomeAmount,\n    };\n    try {\n      const response = await axios.post('/api/income', incomeData);\n      setIncomeList([...incomeList, response.data]);\n      setIncomeSource('');\n      setIncomeAmount('');\n    } catch (error) {\n      console.error('Error adding income:', error);\n    }\n  };\n\n  const handleRemoveIncome = async (incomeId) => {\n    try {\n      await axios.delete(`/api/income/${incomeId}`);\n      setIncomeList(incomeList.filter(item => item._id !== incomeId));\n    } catch (error) {\n      console.error('Error removing income:', error);\n    }\n  };\n\n  const handleUpdateIncome = async (incomeId, updatedAmount) => {\n    try {\n      const response = await axios.put(`/api/income/${incomeId}`, { amount: updatedAmount });\n      setIncomeList(incomeList.map(item => item._id === incomeId ? response.data : item));\n    } catch (error) {\n      console.error('Error updating income:', error);\n    }\n  };\n\n  return (\n    <div className=\"income-management\">\n      <h1>Income Management</h1>\n      <div className=\"date-display\">\n        <span>{date.toLocaleDateString()}</span>\n        <span>{date.toLocaleString('default', { month: 'long' })}, {date.getFullYear()}</span>\n      </div>\n\n      <div className=\"income-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Income Source\"\n          value={incomeSource}\n          onChange={(e) => setIncomeSource(e.target.value)}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Income Amount\"\n          value={incomeAmount}\n          onChange={(e) => setIncomeAmount(e.target.value)}\n        />\n        <button onClick={handleAddIncome}>Add Income</button>\n      </div>\n\n      <div className=\"income-list\">\n        <h2>Income for {date.toLocaleDateString()}</h2>\n        <ul>\n          {incomeList.map(income => (\n            <li key={income._id}>\n              <span>{income.source}: {income.amount}</span>\n              <button onClick={() => handleRemoveIncome(income._id)}>Remove</button>\n              <button onClick={() => handleUpdateIncome(income._id, prompt(\"Enter new amount:\", income.amount))}>Update</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}