{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport '../assets/css/Reports.css';\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, ArcElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, ArcElement, Title, Tooltip, Legend);\nconst Reports = () => {\n  _s();\n  const [state, setState] = useState({\n    reports: {\n      monthlyIncome: [],\n      categoryReport: [],\n      budgetAllocation: []\n    },\n    userData: null,\n    loading: false,\n    error: \"\"\n  });\n\n  // Helper function to update state\n  const updateState = (key, value) => setState(prev => ({\n    ...prev,\n    [key]: value\n  }));\n\n  // Fetch user details\n  useEffect(() => {\n    const fetchUserData = async () => {\n      updateState(\"loading\", true);\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(\"http://localhost:3001/api/auth/user-details\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        updateState(\"userData\", res.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        updateState(\"error\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to fetch user details.\");\n      } finally {\n        updateState(\"loading\", false);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Fetch reports\n  useEffect(() => {\n    const fetchReports = async () => {\n      if (!state.userData) return;\n      try {\n        const token = localStorage.getItem(\"token\");\n        const responses = await Promise.all([axios.get(\"http://localhost:3001/api/reports/monthly-income\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(\"http://localhost:3001/api/reports/category-expense\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(\"http://localhost:3001/api/reports/budget-allocation\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n        updateState(\"reports\", {\n          monthlyIncome: Array.isArray(responses[0].data.data) ? responses[0].data.data : [],\n          categoryReport: Array.isArray(responses[1].data.data) ? responses[1].data.data : [],\n          budgetAllocation: Array.isArray(responses[2].data.data) ? responses[2].data.data : []\n        });\n      } catch (error) {\n        updateState(\"error\", \"Error fetching reports\");\n      }\n    };\n    fetchReports();\n  }, [state.userData]);\n\n  // Calculate remaining budget (Allocated Budget - Expense)\n  const calculateRemainingBudget = () => {\n    return state.reports.budgetAllocation.map(allocation => {\n      // Find the expense matching the category\n      const expense = state.reports.categoryReport.find(expense => expense.category === allocation.category);\n\n      // Set expense amount to 0 if not found\n      const expenseAmount = expense ? expense.amount : 0;\n\n      // Calculate remaining budget\n      const remaining = allocation.allocatedBudget - expenseAmount;\n\n      // Return the result for each category\n      return {\n        category: allocation.category,\n        remaining\n      };\n    });\n  };\n\n  // Chart configurations\n  const createPieChartData = (labels, data, color) => ({\n    labels,\n    datasets: [{\n      data,\n      backgroundColor: color,\n      borderColor: color.map(c => c.replace(\"0.5\", \"1\")),\n      // Adjust transparency\n      borderWidth: 1\n    }]\n  });\n\n  // Monthly Income Chart (Amount, Source, Date)\n  const monthlyIncomeChart = {\n    labels: state.reports.monthlyIncome.map(entry => entry.date),\n    datasets: [{\n      label: \"Amount\",\n      data: state.reports.monthlyIncome.map(entry => entry.amount),\n      fill: false,\n      borderColor: \"rgba(75,192,192,1)\",\n      tension: 0.1\n    }]\n  };\n\n  // Category Expense Chart (Category name, Expense for the month)\n  const categoryExpenseChart = createPieChartData(state.reports.categoryReport.map(entry => entry.category), state.reports.categoryReport.map(entry => entry.amount), [\"rgba(255,99,132,0.2)\", \"rgba(53,162,235,0.5)\", \"rgba(255,205,86,0.5)\"]);\n\n  // Budget Allocation Chart (Category, Allocated Budget, Remaining Budget)\n  const budgetAllocationChart = createPieChartData(state.reports.budgetAllocation.map(entry => entry.category), state.reports.budgetAllocation.map(entry => entry.allocatedBudget), [\"rgba(75,192,192,0.2)\", \"rgba(255,205,86,0.5)\", \"rgba(153,102,255,0.5)\"]);\n\n  // Remaining Budget Chart (Remaining Budget for categories)\n  const remainingBudgetChart = state.reports.budgetAllocation.length ? {\n    labels: calculateRemainingBudget().map(entry => entry.category),\n    datasets: [{\n      label: \"Remaining Budget\",\n      data: calculateRemainingBudget().map(entry => entry.remaining),\n      backgroundColor: [\"rgba(54,162,235,0.5)\", \"rgba(153,102,255,0.5)\", \"rgba(255,159,64,0.5)\"],\n      borderColor: [\"rgba(54,162,235,1)\", \"rgba(153,102,255,1)\", \"rgba(255,159,64,1)\"],\n      borderWidth: 1\n    }]\n  } : null;\n  if (state.loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 29\n  }, this);\n  if (state.error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: state.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), state.reports.monthlyIncome.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monthly Income Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: monthlyIncomeChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: state.reports.monthlyIncome.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [entry.date, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), \" \", entry.source, \" - \", entry.amount, \" USD\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for Monthly Income.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), state.reports.categoryReport.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Category-wise Expense Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: categoryExpenseChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for Category-wise Expenses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), state.reports.budgetAllocation.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Budget Allocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: budgetAllocationChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for Budget Allocation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), remainingBudgetChart ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Remaining Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: remainingBudgetChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for Remaining Budget.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"O/eBAF1qVtIa/lHdIqh9J7BQXXM=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Line","Pie","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Reports","_s","state","setState","reports","monthlyIncome","categoryReport","budgetAllocation","userData","loading","error","updateState","key","value","prev","fetchUserData","token","localStorage","getItem","res","get","headers","Authorization","data","err","_err$response","_err$response$data","response","message","fetchReports","responses","Promise","all","Array","isArray","calculateRemainingBudget","map","allocation","expense","find","category","expenseAmount","amount","remaining","allocatedBudget","createPieChartData","labels","color","datasets","backgroundColor","borderColor","c","replace","borderWidth","monthlyIncomeChart","entry","date","label","fill","tension","categoryExpenseChart","budgetAllocationChart","remainingBudgetChart","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","source","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line, Pie } from \"react-chartjs-2\";\nimport '../assets/css/Reports.css';\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, ArcElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, ArcElement, Title, Tooltip, Legend);\n\nconst Reports = () => {\n  const [state, setState] = useState({\n    reports: {\n      monthlyIncome: [],\n      categoryReport: [],\n      budgetAllocation: [],\n    },\n    userData: null,\n    loading: false,\n    error: \"\",\n  });\n\n  // Helper function to update state\n  const updateState = (key, value) => setState((prev) => ({ ...prev, [key]: value }));\n\n  // Fetch user details\n  useEffect(() => {\n    const fetchUserData = async () => {\n      updateState(\"loading\", true);\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(\"http://localhost:3001/api/auth/user-details\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        updateState(\"userData\", res.data);\n      } catch (err) {\n        updateState(\"error\", err.response?.data?.message || \"Failed to fetch user details.\");\n      } finally {\n        updateState(\"loading\", false);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  // Fetch reports\n  useEffect(() => {\n    const fetchReports = async () => {\n      if (!state.userData) return;\n    \n      try {\n        const token = localStorage.getItem(\"token\");\n    \n        const responses = await Promise.all([\n          axios.get(\"http://localhost:3001/api/reports/monthly-income\", { headers: { Authorization: `Bearer ${token}` } }),\n          axios.get(\"http://localhost:3001/api/reports/category-expense\", { headers: { Authorization: `Bearer ${token}` } }),\n          axios.get(\"http://localhost:3001/api/reports/budget-allocation\", { headers: { Authorization: `Bearer ${token}` } }),\n        ]);\n    \n        updateState(\"reports\", {\n          monthlyIncome: Array.isArray(responses[0].data.data) ? responses[0].data.data : [],\n          categoryReport: Array.isArray(responses[1].data.data) ? responses[1].data.data : [],\n          budgetAllocation: Array.isArray(responses[2].data.data) ? responses[2].data.data : [],\n        });\n      } catch (error) {\n        updateState(\"error\", \"Error fetching reports\");\n      }\n    };    \n\n    fetchReports();\n  }, [state.userData]);\n\n  // Calculate remaining budget (Allocated Budget - Expense)\n  const calculateRemainingBudget = () => {\n    return state.reports.budgetAllocation.map((allocation) => {\n      // Find the expense matching the category\n      const expense = state.reports.categoryReport.find(\n        (expense) => expense.category === allocation.category\n      );\n  \n      // Set expense amount to 0 if not found\n      const expenseAmount = expense ? expense.amount : 0;\n  \n      // Calculate remaining budget\n      const remaining = allocation.allocatedBudget - expenseAmount;\n  \n      // Return the result for each category\n      return { category: allocation.category, remaining };\n    });\n  };\n  \n\n  // Chart configurations\n  const createPieChartData = (labels, data, color) => ({\n    labels,\n    datasets: [\n      {\n        data,\n        backgroundColor: color,\n        borderColor: color.map((c) => c.replace(\"0.5\", \"1\")), // Adjust transparency\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  // Monthly Income Chart (Amount, Source, Date)\n  const monthlyIncomeChart = {\n    labels: state.reports.monthlyIncome.map((entry) => entry.date),\n    datasets: [\n      {\n        label: \"Amount\",\n        data: state.reports.monthlyIncome.map((entry) => entry.amount),\n        fill: false,\n        borderColor: \"rgba(75,192,192,1)\",\n        tension: 0.1,\n      },\n    ],\n  };\n\n  // Category Expense Chart (Category name, Expense for the month)\n  const categoryExpenseChart = createPieChartData(\n    state.reports.categoryReport.map((entry) => entry.category),\n    state.reports.categoryReport.map((entry) => entry.amount),\n    [\"rgba(255,99,132,0.2)\", \"rgba(53,162,235,0.5)\", \"rgba(255,205,86,0.5)\"]\n  );\n\n  // Budget Allocation Chart (Category, Allocated Budget, Remaining Budget)\n  const budgetAllocationChart = createPieChartData(\n    state.reports.budgetAllocation.map((entry) => entry.category),\n    state.reports.budgetAllocation.map((entry) => entry.allocatedBudget),\n    [\"rgba(75,192,192,0.2)\", \"rgba(255,205,86,0.5)\", \"rgba(153,102,255,0.5)\"]\n  );\n\n  // Remaining Budget Chart (Remaining Budget for categories)\n  const remainingBudgetChart = state.reports.budgetAllocation.length\n    ? {\n        labels: calculateRemainingBudget().map((entry) => entry.category),\n        datasets: [\n          {\n            label: \"Remaining Budget\",\n            data: calculateRemainingBudget().map((entry) => entry.remaining),\n            backgroundColor: [\"rgba(54,162,235,0.5)\", \"rgba(153,102,255,0.5)\", \"rgba(255,159,64,0.5)\"],\n            borderColor: [\"rgba(54,162,235,1)\", \"rgba(153,102,255,1)\", \"rgba(255,159,64,1)\"],\n            borderWidth: 1,\n          },\n        ],\n      }\n    : null;\n\n  if (state.loading) return <p>Loading...</p>;\n  if (state.error) return <p>{state.error}</p>;\n\n  return (\n    <div>\n      <h2>Reports</h2>\n\n      {/* Monthly Income Report */}\n      {state.reports.monthlyIncome.length > 0 ? (\n        <div className=\"chart-container\">\n          <h3>Monthly Income Report</h3>\n          <Line data={monthlyIncomeChart} />\n          <ul>\n            {state.reports.monthlyIncome.map((entry, index) => (\n              <li key={index}>\n                <strong>{entry.date}:</strong> {entry.source} - {entry.amount} USD\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No data available for Monthly Income.</p>\n      )}\n\n      {/* Category-wise Expense Report */}\n      {state.reports.categoryReport.length > 0 ? (\n        <div className=\"chart-container\">\n          <h3>Category-wise Expense Report</h3>\n          <Pie data={categoryExpenseChart} />\n        </div>\n      ) : (\n        <p>No data available for Category-wise Expenses.</p>\n      )}\n\n      {/* Budget Allocation Report */}\n      {state.reports.budgetAllocation.length > 0 ? (\n        <div className=\"chart-container\">\n          <h3>Budget Allocation</h3>\n          <Pie data={budgetAllocationChart} />\n        </div>\n      ) : (\n        <p>No data available for Budget Allocation.</p>\n      )}\n\n      {/* Remaining Budget Report */}\n      {remainingBudgetChart ? (\n        <div className=\"chart-container\">\n          <h3>Remaining Budget</h3>\n          <Pie data={remainingBudgetChart} />\n        </div>\n      ) : (\n        <p>No data available for Remaining Budget.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}