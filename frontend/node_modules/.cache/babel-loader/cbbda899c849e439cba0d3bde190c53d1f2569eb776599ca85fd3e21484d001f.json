{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const categoryData = [\"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \"Savings\", \"Miscellaneous\"];\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) throw new Error(\"Authentication token not found.\");\n        const response = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          totalIncome,\n          categories,\n          totalBudget,\n          totalRemainingBudget\n        } = response.data;\n        setTotalIncome(totalIncome || 0);\n        setBudgetAllocated(totalBudget || 0);\n        setRemainingBudget(totalRemainingBudget || 0);\n        setCategories(categories || []);\n      } catch (err) {\n        setMessage(\"Error fetching data: \" + err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchBudgetData();\n  }, []);\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || parseFloat(newBudget) <= 0) {\n      return setMessage(\"Please provide a valid category and budget.\");\n    }\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      return setMessage(\"Budget allocated exceeds total income.\");\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"Authentication token not found.\");\n      const currentDate = new Date().toISOString().split(\"T\")[0];\n      const response = await axios.post(\"http://localhost:3001/api/budget\", {\n        category: newCategory,\n        budgetAllocated: parseFloat(newBudget),\n        remainingBudget: parseFloat(newBudget),\n        date: currentDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => [...prevCategories, response.data]);\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully.\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category: \" + err.message);\n    }\n  };\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    if (!updatedBudget || parseFloat(updatedBudget) <= 0) {\n      return setMessage(\"Please provide a valid budget amount.\");\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"Authentication token not found.\");\n      const updatedBudgetFloat = parseFloat(updatedBudget);\n      const newTotalAllocated = categories.reduce((sum, cat) => sum + (cat._id === id ? updatedBudgetFloat : cat.budgetAllocated), 0);\n      if (newTotalAllocated > totalIncome) {\n        return setMessage(\"Budget allocation exceeds total income.\");\n      }\n      await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budgetAllocated: updatedBudgetFloat,\n        remainingBudget: updatedBudgetFloat\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => prevCategories.map(category => category._id === id ? {\n        ...category,\n        budgetAllocated: updatedBudgetFloat,\n        remainingBudget: updatedBudgetFloat\n      } : category));\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Budget updated successfully.\");\n    } catch (err) {\n      setMessage(\"Error updating budget: \" + err.message);\n    }\n  };\n  const handleRemoveCategory = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"Authentication token not found.\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => prevCategories.filter(category => category._id !== id));\n      setMessage(\"Category removed successfully.\");\n    } catch (err) {\n      setMessage(\"Error removing category: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Allocated Budget: \\u20B9\", budgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Remaining Budget: \\u20B9\", remainingBudget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), categoryData.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudget,\n        onChange: e => setNewBudget(e.target.value),\n        placeholder: \"Enter Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"category-list\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [category.category, \": \\u20B9\", category.budgetAllocated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: category.budgetAllocated,\n          onBlur: e => handleBudgetUpdate(category._id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveCategory(category._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, category._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"r7RISZeQvPOlgC7oEkaiZSPwsZg=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","categories","setCategories","totalIncome","setTotalIncome","budgetAllocated","setBudgetAllocated","remainingBudget","setRemainingBudget","newCategory","setNewCategory","newBudget","setNewBudget","message","setMessage","currentMonth","setCurrentMonth","isLoading","setIsLoading","categoryData","month","Date","toLocaleString","year","getFullYear","fetchBudgetData","token","localStorage","getItem","Error","response","get","headers","Authorization","totalBudget","totalRemainingBudget","data","err","handleAddCategory","parseFloat","newTotalAllocated","currentDate","toISOString","split","post","category","date","prevCategories","handleBudgetUpdate","id","updatedBudget","updatedBudgetFloat","reduce","sum","cat","_id","put","map","handleRemoveCategory","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","index","type","placeholder","onClick","defaultValue","onBlur","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  const categoryData = [\n    \"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\",\n    \"Utilities\", \"Health\", \"Insurance\", \"Investments\",\n    \"Savings\", \"Miscellaneous\"\n  ];\n\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) throw new Error(\"Authentication token not found.\");\n\n        const response = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const { totalIncome, categories, totalBudget, totalRemainingBudget } = response.data;\n        setTotalIncome(totalIncome || 0);\n        setBudgetAllocated(totalBudget || 0);\n        setRemainingBudget(totalRemainingBudget || 0);\n        setCategories(categories || []);\n      } catch (err) {\n        setMessage(\"Error fetching data: \" + err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchBudgetData();\n  }, []);\n\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || parseFloat(newBudget) <= 0) {\n      return setMessage(\"Please provide a valid category and budget.\");\n    }\n\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      return setMessage(\"Budget allocated exceeds total income.\");\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"Authentication token not found.\");\n\n      const currentDate = new Date().toISOString().split(\"T\")[0];\n      const response = await axios.post(\n        \"http://localhost:3001/api/budget\",\n        {\n          category: newCategory,\n          budgetAllocated: parseFloat(newBudget),\n          remainingBudget: parseFloat(newBudget),\n          date: currentDate,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      setCategories((prevCategories) => [...prevCategories, response.data]);\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully.\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category: \" + err.message);\n    }\n  };\n\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    if (!updatedBudget || parseFloat(updatedBudget) <= 0) {\n      return setMessage(\"Please provide a valid budget amount.\");\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"Authentication token not found.\");\n\n      const updatedBudgetFloat = parseFloat(updatedBudget);\n      const newTotalAllocated = categories.reduce((sum, cat) =>\n        sum + (cat._id === id ? updatedBudgetFloat : cat.budgetAllocated),\n        0\n      );\n\n      if (newTotalAllocated > totalIncome) {\n        return setMessage(\"Budget allocation exceeds total income.\");\n      }\n\n      await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        {\n          budgetAllocated: updatedBudgetFloat,\n          remainingBudget: updatedBudgetFloat,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      setCategories((prevCategories) =>\n        prevCategories.map((category) =>\n          category._id === id\n            ? { ...category, budgetAllocated: updatedBudgetFloat, remainingBudget: updatedBudgetFloat }\n            : category\n        )\n      );\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Budget updated successfully.\");\n    } catch (err) {\n      setMessage(\"Error updating budget: \" + err.message);\n    }\n  };\n\n  const handleRemoveCategory = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) throw new Error(\"Authentication token not found.\");\n\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setCategories((prevCategories) => prevCategories.filter((category) => category._id !== id));\n      setMessage(\"Category removed successfully.\");\n    } catch (err) {\n      setMessage(\"Error removing category: \" + err.message);\n    }\n  };\n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n      <div className=\"budget-summary\">\n        {isLoading ? <h3>Loading...</h3> : <h3>Total Income: ₹{totalIncome}</h3>}\n        <h4>Allocated Budget: ₹{budgetAllocated}</h4>\n        <h4>Remaining Budget: ₹{remainingBudget}</h4>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <div className=\"add-category\">\n        <select value={newCategory} onChange={(e) => setNewCategory(e.target.value)}>\n          <option value=\"\">Select a Category</option>\n          {categoryData.map((category, index) => (\n            <option key={index} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newBudget}\n          onChange={(e) => setNewBudget(e.target.value)}\n          placeholder=\"Enter Budget Amount\"\n        />\n        <button onClick={handleAddCategory}>Add Category</button>\n      </div>\n\n      <ul className=\"category-list\">\n        {categories.map((category) => (\n          <li key={category._id}>\n            <span>{category.category}: ₹{category.budgetAllocated}</span>\n            <input\n              type=\"number\"\n              defaultValue={category.budgetAllocated}\n              onBlur={(e) => handleBudgetUpdate(category._id, e.target.value)}\n            />\n            <button onClick={() => handleRemoveCategory(category._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}