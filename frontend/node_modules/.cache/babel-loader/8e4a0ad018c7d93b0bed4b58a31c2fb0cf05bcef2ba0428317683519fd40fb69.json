{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(null);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const category_data = [\"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \"Savings\", \"Miscellaneous\"];\n\n  // Set current month and year on initial load\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch budget and income data from the backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          totalIncome,\n          categories,\n          totalBudget,\n          totalRemainingBudget\n        } = response.data;\n\n        // Check if totalIncome is valid and set state\n        if (typeof totalIncome === \"number\" && !isNaN(totalIncome)) {\n          setTotalIncome(totalIncome);\n        } else {\n          setMessage(\"Invalid total income data.\");\n        }\n\n        // Check if totalRemainingBudget is valid and set state\n        if (typeof totalRemainingBudget === \"number\" && !isNaN(totalRemainingBudget)) {\n          setRemainingBudget(totalRemainingBudget);\n        } else {\n          setMessage(\"Invalid total remaining budget data.\");\n        }\n\n        // Check if totalBudget is valid and set state\n        if (typeof totalBudget === \"number\" && !isNaN(totalBudget)) {\n          setBudgetAllocated(totalBudget);\n        } else {\n          setMessage(\"Invalid total allocated budget data.\");\n        }\n        setCategories(categories);\n        setIsLoading(false);\n      } catch (err) {\n        setMessage(\"Error fetching data.\");\n        setIsLoading(false);\n      }\n    };\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      return setMessage(\"Please provide a valid category and budget.\");\n    }\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      return setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n    }\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3001/api/budget\", {\n        category: newCategory,\n        budgetAllocated: parseFloat(newBudget),\n        remainingBudget: parseFloat(newBudget),\n        date: currentDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const addedCategory = response.data;\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully!\");\n    } catch (err) {\n      setMessage(\"Error adding category.\");\n    }\n  };\n\n  // Update a category's budget\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    const updatedBudgetFloat = parseFloat(updatedBudget);\n    if (isNaN(updatedBudgetFloat) || updatedBudgetFloat <= 0) {\n      return setMessage(\"Please provide a valid budget amount.\");\n    }\n    const newTotalAllocated = categories.reduce((sum, cat) => {\n      return sum + (cat._id === id ? updatedBudgetFloat : cat.budgetAllocated);\n    }, 0);\n    if (newTotalAllocated > totalIncome) {\n      return setMessage(\"Budget allocation exceeds total income. Please adjust.\");\n    }\n    const currentDate = new Date().toLocaleDateString();\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budgetAllocated: updatedBudgetFloat,\n        remainingBudget: updatedBudgetFloat,\n        date: currentDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => prevCategories.map(category => category._id === id ? {\n        ...category,\n        budgetAllocated: updatedBudgetFloat,\n        remainingBudget: updatedBudgetFloat,\n        date: currentDate\n      } : category));\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n    } catch (err) {\n      setMessage(\"Error updating budget.\");\n    }\n  };\n\n  // Remove a category\n  const handleRemoveCategory = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => prevCategories.filter(category => category._id !== id));\n      setMessage(\"Category removed successfully.\");\n    } catch (err) {\n      setMessage(\"Error removing category.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading Total Income...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Allocated Budget: \\u20B9\", budgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Remaining Budget: \\u20B9\", remainingBudget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Category & Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), category_data.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudget,\n        onChange: e => setNewBudget(e.target.value),\n        placeholder: \"Enter Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Category & Budget List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"category-list\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [category.category, \": \\u20B9\", category.budgetAllocated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", new Date(category.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Update Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: category.budgetAllocated,\n          onChange: e => handleBudgetUpdate(category._id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveCategory(category._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, category._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"wWlocvIWSryWpVTWj1Zxg3Yenl0=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","categories","setCategories","totalIncome","setTotalIncome","budgetAllocated","setBudgetAllocated","remainingBudget","setRemainingBudget","newCategory","setNewCategory","newBudget","setNewBudget","message","setMessage","currentMonth","setCurrentMonth","isLoading","setIsLoading","category_data","month","Date","toLocaleString","year","getFullYear","fetchBudgetData","token","localStorage","getItem","response","get","headers","Authorization","totalBudget","totalRemainingBudget","data","isNaN","err","handleAddCategory","newTotalAllocated","parseFloat","currentDate","toISOString","split","post","category","date","addedCategory","handleBudgetUpdate","id","updatedBudget","updatedBudgetFloat","reduce","sum","cat","_id","toLocaleDateString","put","prevCategories","map","handleRemoveCategory","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","index","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(null);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  const category_data = [\n    \"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\",\n    \"Utilities\", \"Health\", \"Insurance\", \"Investments\",\n    \"Savings\", \"Miscellaneous\"\n  ];\n\n  // Set current month and year on initial load\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch budget and income data from the backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n  \n        const { totalIncome, categories, totalBudget, totalRemainingBudget } = response.data;\n  \n        // Check if totalIncome is valid and set state\n        if (typeof totalIncome === \"number\" && !isNaN(totalIncome)) {\n          setTotalIncome(totalIncome);\n        } else {\n          setMessage(\"Invalid total income data.\");\n        }\n  \n        // Check if totalRemainingBudget is valid and set state\n        if (typeof totalRemainingBudget === \"number\" && !isNaN(totalRemainingBudget)) {\n          setRemainingBudget(totalRemainingBudget);\n        } else {\n          setMessage(\"Invalid total remaining budget data.\");\n        }\n  \n        // Check if totalBudget is valid and set state\n        if (typeof totalBudget === \"number\" && !isNaN(totalBudget)) {\n          setBudgetAllocated(totalBudget);\n        } else {\n          setMessage(\"Invalid total allocated budget data.\");\n        }\n  \n        setCategories(categories);\n        setIsLoading(false);\n      } catch (err) {\n        setMessage(\"Error fetching data.\");\n        setIsLoading(false);\n      }\n    };\n  \n    fetchBudgetData();\n  }, []);\n  \n\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      return setMessage(\"Please provide a valid category and budget.\");\n    }\n\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      return setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n    }\n\n    const currentDate = new Date().toISOString().split(\"T\")[0]; \n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\n        \"http://localhost:3001/api/budget\",\n        { category: newCategory, budgetAllocated: parseFloat(newBudget), remainingBudget: parseFloat(newBudget), date: currentDate },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const addedCategory = response.data;\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully!\");\n    } catch (err) {\n      setMessage(\"Error adding category.\");\n    }\n  };\n\n  // Update a category's budget\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    const updatedBudgetFloat = parseFloat(updatedBudget);\n\n    if (isNaN(updatedBudgetFloat) || updatedBudgetFloat <= 0) {\n      return setMessage(\"Please provide a valid budget amount.\");\n    }\n\n    const newTotalAllocated = categories.reduce((sum, cat) => {\n      return sum + (cat._id === id ? updatedBudgetFloat : cat.budgetAllocated);\n    }, 0);\n\n    if (newTotalAllocated > totalIncome) {\n      return setMessage(\"Budget allocation exceeds total income. Please adjust.\");\n    }\n\n    const currentDate = new Date().toLocaleDateString();\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        { budgetAllocated: updatedBudgetFloat, remainingBudget: updatedBudgetFloat, date: currentDate },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      setCategories((prevCategories) =>\n        prevCategories.map((category) =>\n          category._id === id ? { ...category, budgetAllocated: updatedBudgetFloat, remainingBudget: updatedBudgetFloat, date: currentDate } : category\n        )\n      );\n\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n    } catch (err) {\n      setMessage(\"Error updating budget.\");\n    }\n  };\n\n  // Remove a category\n  const handleRemoveCategory = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      setCategories((prevCategories) => prevCategories.filter((category) => category._id !== id));\n      setMessage(\"Category removed successfully.\");\n    } catch (err) {\n      setMessage(\"Error removing category.\");\n    }\n  };\n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n      <div className=\"budget-summary\">\n        {isLoading ? (\n          <h3>Loading Total Income...</h3>\n        ) : (\n          <h3>Total Income: ₹{totalIncome || 0}</h3>\n        )}\n        <h4>Allocated Budget: ₹{budgetAllocated}</h4>\n        <h4>Remaining Budget: ₹{remainingBudget}</h4>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <p>Add Category & Budget</p>\n      <div className=\"add-category\">\n        <select value={newCategory} onChange={(e) => setNewCategory(e.target.value)}>\n          <option value=\"\">Select a Category</option>\n          {category_data.map((category, index) => (\n            <option key={index} value={category}>{category}</option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newBudget}\n          onChange={(e) => setNewBudget(e.target.value)}\n          placeholder=\"Enter Budget Amount\"\n        />\n        <button onClick={handleAddCategory}>Add Category</button>\n      </div>\n\n      <p>Category & Budget List</p>\n      <ul className=\"category-list\">\n        {categories.map((category) => (\n          <li className=\"category-item\" key={category._id}>\n            <span>{category.category}: ₹{category.budgetAllocated}</span>\n            <span>Date: {new Date(category.date).toLocaleDateString()}</span>\n            <p>Update Value:</p>&nbsp;\n            <input\n              type=\"number\"\n              value={category.budgetAllocated}\n              onChange={(e) => handleBudgetUpdate(category._id, e.target.value)}\n            />\n            <button onClick={() => handleRemoveCategory(category._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}