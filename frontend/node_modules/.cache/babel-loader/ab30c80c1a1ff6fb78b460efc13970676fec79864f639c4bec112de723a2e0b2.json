{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import\"../assets/css/IncomeManagement.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IncomeManagement=()=>{const[incomeList,setIncomeList]=useState([]);const[totalIncome,setTotalIncome]=useState(0);const[newAmount,setNewAmount]=useState(\"\");const[message,setMessage]=useState(\"\");const[selectedSource,setSelectedSource]=useState(\"\");const[currentMonth,setCurrentMonth]=useState(\"\");// Static list of income sources\nconst incomeSources=[\"Pocket Money\",\"Freelancing\",\"Investments\",\"Stipends\",'Part-time Job','Others'];// Fetch the current month and format it\nuseEffect(()=>{const month=new Date().toLocaleString(\"default\",{month:\"long\"});const year=new Date().getFullYear();// Get the current year\nsetCurrentMonth(`${month} ${year}`);// Set both month and year\n},[]);// Fetch income data when the component loads\nuseEffect(()=>{const fetchIncomeData=async()=>{try{const token=localStorage.getItem(\"token\");if(!token){setMessage(\"Please log in to see your income data.\");return;}const response=await axios.get(\"http://localhost:3001/api/income\",{headers:{Authorization:`Bearer ${token}`}});setIncomeList(response.data.income);setTotalIncome(response.data.totalIncome);}catch(err){setMessage(\"Error fetching income data\");}};fetchIncomeData();},[]);// Add a new income entry\nconst handleAddIncome=async()=>{if(!selectedSource||!newAmount){setMessage(\"Please fill out both fields.\");return;}try{const token=localStorage.getItem(\"token\");if(!token){setMessage(\"Please log in to add income.\");return;}await axios.post(\"http://localhost:3001/api/income\",{source:selectedSource,income:newAmount},{headers:{Authorization:`Bearer ${token}`}});setMessage(\"Income added successfully!\");setNewAmount(\"\");setSelectedSource(\"\");const response=await axios.get(\"http://localhost:3001/api/income\",{headers:{Authorization:`Bearer ${token}`}});setIncomeList(response.data.income);setTotalIncome(response.data.totalIncome);}catch(err){setMessage(\"Error adding income\");}};// Handle real-time income update\nconst handleIncomeChange=async(id,newIncome)=>{try{const token=localStorage.getItem(\"token\");if(!token){setMessage(\"Please log in to update income.\");return;}if(isNaN(newIncome)||newIncome<=0){setMessage(\"Please provide a valid Income allocation.\");return;}// Optimistically update UI\nconst updatedIncomeList=incomeList.map(item=>item._id===id?{...item,income:newIncome}:item);setIncomeList(updatedIncomeList);setTotalIncome(updatedIncomeList.reduce((total,income)=>total+income.income,0));// Send the update request to the backend\nawait axios.put(`http://localhost:3001/api/income/${id}`,{income:newIncome},{headers:{Authorization:`Bearer ${token}`}});}catch(err){setMessage(\"Error updating income\");}};// Remove an income entry\nconst handleRemoveIncome=async id=>{try{const token=localStorage.getItem(\"token\");if(!token){setMessage(\"Please log in to remove income.\");return;}await axios.delete(`http://localhost:3001/api/income/${id}`,{headers:{Authorization:`Bearer ${token}`}});const updatedIncomeList=incomeList.filter(item=>item._id!==id);setIncomeList(updatedIncomeList);setTotalIncome(updatedIncomeList.reduce((total,income)=>total+income.income,0));setMessage(\"Income removed successfully!\");}catch(err){setMessage(\"Error removing income\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"income-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Income Management\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"date-display\",children:[\"Month: \",currentMonth]}),/*#__PURE__*/_jsx(\"div\",{className:\"income-summary\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Total Income: \\u20B9\",totalIncome]})}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message}),/*#__PURE__*/_jsx(\"p\",{children:\"Add Income\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-income\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedSource,onChange:e=>setSelectedSource(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Income Source\"}),incomeSources.map((source,index)=>/*#__PURE__*/_jsx(\"option\",{value:source,children:source},index))]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:newAmount,onChange:e=>setNewAmount(e.target.value),placeholder:\"Amount\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddIncome,children:\"Add Income\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Income List\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"income-list\",children:incomeList.map(item=>/*#__PURE__*/_jsxs(\"li\",{className:\"income-item\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[item.source,\": \\u20B9\",item.income,\" \"]}),\"\\xA0\",/*#__PURE__*/_jsxs(\"span\",{children:[\"Date: \",new Date(item.date).toLocaleDateString()]}),/*#__PURE__*/_jsx(\"p\",{children:\"Update Value:\"}),\"\\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:item.income,min:1,onChange:e=>handleIncomeChange(item._id,parseFloat(e.target.value))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveIncome(item._id),children:\"Remove\"})]},item._id))})]});};export default IncomeManagement;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","IncomeManagement","incomeList","setIncomeList","totalIncome","setTotalIncome","newAmount","setNewAmount","message","setMessage","selectedSource","setSelectedSource","currentMonth","setCurrentMonth","incomeSources","month","Date","toLocaleString","year","getFullYear","fetchIncomeData","token","localStorage","getItem","response","get","headers","Authorization","data","income","err","handleAddIncome","post","source","handleIncomeChange","id","newIncome","isNaN","updatedIncomeList","map","item","_id","reduce","total","put","handleRemoveIncome","delete","filter","className","children","value","onChange","e","target","index","type","placeholder","onClick","date","toLocaleDateString","min","parseFloat"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/IncomeManagement.css\";\n\nconst IncomeManagement = () => {\n  const [incomeList, setIncomeList] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [selectedSource, setSelectedSource] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  // Static list of income sources\n  const incomeSources = [\"Pocket Money\", \"Freelancing\", \"Investments\", \"Stipends\", 'Part-time Job', 'Others'];\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear(); // Get the current year\n    setCurrentMonth(`${month} ${year}`); // Set both month and year\n  }, []);\n\n  // Fetch income data when the component loads\n  useEffect(() => {\n    const fetchIncomeData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to see your income data.\");\n          return;\n        }\n\n        const response = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setIncomeList(response.data.income);\n        setTotalIncome(response.data.totalIncome);\n      } catch (err) {\n        setMessage(\"Error fetching income data\");\n      }\n    };\n\n    fetchIncomeData();\n  }, []);\n\n  // Add a new income entry\n  const handleAddIncome = async () => {\n    if (!selectedSource || !newAmount) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to add income.\");\n        return;\n      }\n\n      await axios.post(\n        \"http://localhost:3001/api/income\",\n        { source: selectedSource, income: newAmount },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setMessage(\"Income added successfully!\");\n      setNewAmount(\"\");\n      setSelectedSource(\"\");\n      const response = await axios.get(\"http://localhost:3001/api/income\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setIncomeList(response.data.income);\n      setTotalIncome(response.data.totalIncome);\n    } catch (err) {\n      setMessage(\"Error adding income\");\n    }\n  };\n\n  // Handle real-time income update\n  const handleIncomeChange = async (id, newIncome) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to update income.\");\n        return;\n      }\n\n      if (isNaN(newIncome) || newIncome <= 0) {\n        setMessage(\"Please provide a valid Income allocation.\");\n        return;\n      }\n\n      // Optimistically update UI\n      const updatedIncomeList = incomeList.map((item) =>\n        item._id === id ? { ...item, income: newIncome } : item\n      );\n      setIncomeList(updatedIncomeList);\n      setTotalIncome(updatedIncomeList.reduce((total, income) => total + income.income, 0));\n\n      // Send the update request to the backend\n      await axios.put(\n        `http://localhost:3001/api/income/${id}`,\n        { income: newIncome },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n    } catch (err) {\n      setMessage(\"Error updating income\");\n    }\n  };\n\n  // Remove an income entry\n  const handleRemoveIncome = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove income.\");\n        return;\n      }\n\n      await axios.delete(`http://localhost:3001/api/income/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      const updatedIncomeList = incomeList.filter((item) => item._id !== id);\n      setIncomeList(updatedIncomeList);\n      setTotalIncome(updatedIncomeList.reduce((total, income) => total + income.income, 0));\n\n      setMessage(\"Income removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing income\");\n    }\n  };\n\n  return (\n    <div className=\"income-container\">\n      <h2>Income Management</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n\n      <div className=\"income-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <p>Add Income</p>\n      <div className=\"add-income\">\n        <select\n          value={selectedSource}\n          onChange={(e) => setSelectedSource(e.target.value)}\n        >\n          <option value=\"\">Select Income Source</option>\n          {incomeSources.map((source, index) => (\n            <option key={index} value={source}>\n              {source}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newAmount}\n          onChange={(e) => setNewAmount(e.target.value)}\n          placeholder=\"Amount\"\n        />\n        <button onClick={handleAddIncome}>Add Income</button>\n      </div>\n\n      <p>Income List</p>\n      <ul className=\"income-list\">\n        {incomeList.map((item) => (\n          <li key={item._id} className=\"income-item\">\n            <span>{item.source}: ₹{item.income} </span>&nbsp;\n            <span>Date: {new Date(item.date).toLocaleDateString()}</span>\n            <p>Update Value:</p>&nbsp;\n            <input\n              type=\"number\"\n              value={item.income}\n              min={1}\n              onChange={(e) => handleIncomeChange(item._id, parseFloat(e.target.value))}\n            />\n            <button onClick={() => handleRemoveIncome(item._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default IncomeManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}