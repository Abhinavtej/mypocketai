{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/ExpenseManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/ExpenseManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseManagement = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [expenseAmount, setExpenseAmount] = useState(\"\");\n  const [expenseDate, setExpenseDate] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  useEffect(() => {\n    // Fetch categories and expenses\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch categories\n        const categoriesResponse = await axios.get(\"http://localhost:3001/api/categories\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setCategories(categoriesResponse.data);\n\n        // Fetch expenses\n        const expensesResponse = await axios.get(\"http://localhost:3001/api/expenses\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setExpenses(expensesResponse.data);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle Add Expense\n  const handleAddExpense = async () => {\n    if (!selectedCategory || !expenseAmount || !expenseDate) {\n      setMessage(\"Please provide valid category, amount, and date.\");\n      return;\n    }\n\n    // Check if the expense exceeds the allocated budget\n    const category = categories.find(cat => cat.name === selectedCategory);\n    const currentCategoryExpenses = expenses.filter(expense => expense.category === selectedCategory);\n    const totalCategoryExpenses = currentCategoryExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n    if (totalCategoryExpenses + parseFloat(expenseAmount) > category.budget) {\n      setMessage(\"Expense exceeds the allocated budget for this category.\");\n      return;\n    }\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3001/api/expenses\", {\n        category: selectedCategory,\n        amount: parseFloat(expenseAmount),\n        date: expenseDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setExpenses(prevExpenses => [...prevExpenses, response.data]);\n      setMessage(\"Expense added successfully!\");\n\n      // Reset input fields\n      setExpenseAmount(\"\");\n      setExpenseDate(\"\");\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setMessage(\"Error adding expense\");\n    }\n  };\n\n  // Handle Update Expense\n  const handleUpdateExpense = async (id, updatedAmount) => {\n    const updatedAmountFloat = parseFloat(updatedAmount);\n    if (isNaN(updatedAmountFloat) || updatedAmountFloat <= 0) {\n      setMessage(\"Please provide a valid expense amount.\");\n      return;\n    }\n\n    // Check if the updated expense exceeds the allocated budget\n    const category = categories.find(cat => cat.name === selectedCategory);\n    const currentCategoryExpenses = expenses.filter(expense => expense.category === selectedCategory);\n    const totalCategoryExpenses = currentCategoryExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n    if (totalCategoryExpenses - expenses.find(exp => exp._id === id).amount + updatedAmountFloat > category.budget) {\n      setMessage(\"Updated expense exceeds the allocated budget for this category.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:3001/api/expenses/${id}`, {\n        amount: updatedAmountFloat,\n        date: expenseDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update expenses in the state\n      setExpenses(prevExpenses => prevExpenses.map(expense => expense._id === id ? {\n        ...expense,\n        amount: updatedAmountFloat,\n        date: expenseDate\n      } : expense));\n      setMessage(\"Expense updated successfully!\");\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setMessage(\"Error updating expense\");\n    }\n  };\n\n  // Handle Remove Expense\n  const handleRemoveExpense = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/expenses/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setExpenses(prevExpenses => prevExpenses.filter(expense => expense._id !== id));\n      setMessage(\"Expense removed successfully!\");\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setMessage(\"Error removing expense\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-expense\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.name,\n          children: category.name\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Expense Amount\",\n        value: expenseAmount,\n        onChange: e => setExpenseAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: expenseDate,\n        onChange: e => setExpenseDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddExpense,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-list\",\n      children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [expense.category, \": \\u20B9\", expense.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", new Date(expense.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: expense.amount,\n          onChange: e => handleUpdateExpense(expense._id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveExpense(expense._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, expense._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseManagement, \"U7ZakWUZu5p0qveLQ0t/MdZE59s=\");\n_c = ExpenseManagement;\nexport default ExpenseManagement;\nvar _c;\n$RefreshReg$(_c, \"ExpenseManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExpenseManagement","_s","categories","setCategories","expenses","setExpenses","selectedCategory","setSelectedCategory","expenseAmount","setExpenseAmount","expenseDate","setExpenseDate","message","setMessage","totalExpenses","setTotalExpenses","fetchData","token","localStorage","getItem","categoriesResponse","get","headers","Authorization","data","expensesResponse","err","handleAddExpense","category","find","cat","name","currentCategoryExpenses","filter","expense","totalCategoryExpenses","reduce","sum","exp","amount","parseFloat","budget","currentDate","Date","toISOString","split","response","post","date","prevExpenses","setTimeout","handleUpdateExpense","id","updatedAmount","updatedAmountFloat","isNaN","_id","put","map","handleRemoveExpense","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/ExpenseManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/ExpenseManagement.css\";\n\nconst ExpenseManagement = () => {\n  const [categories, setCategories] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [expenseAmount, setExpenseAmount] = useState(\"\");\n  const [expenseDate, setExpenseDate] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [totalExpenses, setTotalExpenses] = useState(0);\n\n  useEffect(() => {\n    // Fetch categories and expenses\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch categories\n        const categoriesResponse = await axios.get(\"http://localhost:3001/api/categories\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        setCategories(categoriesResponse.data);\n\n        // Fetch expenses\n        const expensesResponse = await axios.get(\"http://localhost:3001/api/expenses\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        setExpenses(expensesResponse.data);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Handle Add Expense\n  const handleAddExpense = async () => {\n    if (!selectedCategory || !expenseAmount || !expenseDate) {\n      setMessage(\"Please provide valid category, amount, and date.\");\n      return;\n    }\n\n    // Check if the expense exceeds the allocated budget\n    const category = categories.find((cat) => cat.name === selectedCategory);\n    const currentCategoryExpenses = expenses.filter(\n      (expense) => expense.category === selectedCategory\n    );\n    const totalCategoryExpenses = currentCategoryExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n\n    if (totalCategoryExpenses + parseFloat(expenseAmount) > category.budget) {\n      setMessage(\"Expense exceeds the allocated budget for this category.\");\n      return;\n    }\n\n    const currentDate = new Date().toISOString().split(\"T\")[0];\n\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const response = await axios.post(\n        \"http://localhost:3001/api/expenses\",\n        {\n          category: selectedCategory,\n          amount: parseFloat(expenseAmount),\n          date: expenseDate,\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      setExpenses((prevExpenses) => [...prevExpenses, response.data]);\n      setMessage(\"Expense added successfully!\");\n\n      // Reset input fields\n      setExpenseAmount(\"\");\n      setExpenseDate(\"\");\n\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setMessage(\"Error adding expense\");\n    }\n  };\n\n  // Handle Update Expense\n  const handleUpdateExpense = async (id, updatedAmount) => {\n    const updatedAmountFloat = parseFloat(updatedAmount);\n    if (isNaN(updatedAmountFloat) || updatedAmountFloat <= 0) {\n      setMessage(\"Please provide a valid expense amount.\");\n      return;\n    }\n\n    // Check if the updated expense exceeds the allocated budget\n    const category = categories.find((cat) => cat.name === selectedCategory);\n    const currentCategoryExpenses = expenses.filter(\n      (expense) => expense.category === selectedCategory\n    );\n    const totalCategoryExpenses = currentCategoryExpenses.reduce((sum, exp) => sum + exp.amount, 0);\n\n    if (totalCategoryExpenses - expenses.find(exp => exp._id === id).amount + updatedAmountFloat > category.budget) {\n      setMessage(\"Updated expense exceeds the allocated budget for this category.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      await axios.put(\n        `http://localhost:3001/api/expenses/${id}`,\n        { amount: updatedAmountFloat, date: expenseDate },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      // Update expenses in the state\n      setExpenses((prevExpenses) =>\n        prevExpenses.map((expense) =>\n          expense._id === id ? { ...expense, amount: updatedAmountFloat, date: expenseDate } : expense\n        )\n      );\n\n      setMessage(\"Expense updated successfully!\");\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setMessage(\"Error updating expense\");\n    }\n  };\n\n  // Handle Remove Expense\n  const handleRemoveExpense = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      await axios.delete(`http://localhost:3001/api/expenses/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setExpenses((prevExpenses) => prevExpenses.filter((expense) => expense._id !== id));\n\n      setMessage(\"Expense removed successfully!\");\n      setTimeout(() => setMessage(\"\"), 3000);\n    } catch (err) {\n      setMessage(\"Error removing expense\");\n    }\n  };\n\n  return (\n    <div className=\"expense-container\">\n      <h2>Expense Management</h2>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <div className=\"add-expense\">\n        <select\n          value={selectedCategory}\n          onChange={(e) => setSelectedCategory(e.target.value)}\n        >\n          <option value=\"\">Select Category</option>\n          {categories.map((category) => (\n            <option key={category._id} value={category.name}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n\n        <input\n          type=\"number\"\n          placeholder=\"Expense Amount\"\n          value={expenseAmount}\n          onChange={(e) => setExpenseAmount(e.target.value)}\n        />\n        <input\n          type=\"date\"\n          value={expenseDate}\n          onChange={(e) => setExpenseDate(e.target.value)}\n        />\n        <button onClick={handleAddExpense}>Add Expense</button>\n      </div>\n\n      <div className=\"expense-list\">\n        {expenses.map((expense) => (\n          <div key={expense._id} className=\"expense-item\">\n            <span>{expense.category}: ₹{expense.amount}</span>\n            <span>Date: {new Date(expense.date).toLocaleDateString()}</span>\n            <input\n              type=\"number\"\n              value={expense.amount}\n              onChange={(e) => handleUpdateExpense(expense._id, e.target.value)}\n            />\n            <button onClick={() => handleRemoveExpense(expense._id)}>Remove</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}