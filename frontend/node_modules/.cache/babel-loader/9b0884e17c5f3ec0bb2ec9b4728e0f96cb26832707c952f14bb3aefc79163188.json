{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [budgetList, setBudgetList] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalBudgetAllocated, setTotalBudgetAllocated] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [newBudgetAllocated, setNewBudgetAllocated] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const categories = [\"Groceries\", \"Rent\", \"Utilities\", \"Entertainment\", \"Savings\", \"Miscellaneous\"];\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch income and budget data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to access budget data.\");\n          return;\n        }\n        const [incomeResponse, budgetResponse] = await Promise.all([axios.get(\"http://localhost:3001/api/income\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n        setTotalIncome(incomeResponse.data.totalIncome);\n        const budgets = budgetResponse.data.budgets;\n        setBudgetList(budgets);\n        setTotalBudgetAllocated(budgets.reduce((total, budget) => total + budget.budgetAllocated, 0));\n        if (totalIncome < totalBudgetAllocated) {\n          setMessage(\"Please update Income to allocate more budget.\");\n          return;\n        }\n      } catch (err) {\n        setMessage(\"Error fetching data. Please try again.\");\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddBudget = async () => {\n    if (!selectedCategory || !newBudgetAllocated) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n    const newAllocation = parseFloat(newBudgetAllocated);\n    if (newAllocation <= 0) {\n      setMessage(\"Please provide a valid budget amount.\");\n      return;\n    }\n    if (totalBudgetAllocated + newAllocation > totalIncome) {\n      setMessage(\"Budget allocation cannot exceed total income.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to access budget data.\");\n        return;\n      }\n\n      // Check if the category already exists for the current month\n      const existingBudget = budgetList.find(budget => budget.category === selectedCategory && new Date(budget.date).getMonth() === new Date().getMonth());\n      if (existingBudget) {\n        // If the category already exists, update the existing budget by adding the new allocation\n        await axios.put(`http://localhost:3001/api/budget/${existingBudget._id}`, {\n          budgetAllocated: existingBudget.budgetAllocated + newAllocation\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessage(\"Budget updated successfully!\");\n      } else {\n        // If the category doesn't exist, create a new budget entry\n        await axios.post(\"http://localhost:3001/api/budget\", {\n          category: selectedCategory,\n          budgetAllocated: newAllocation\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMessage(\"Budget added successfully!\");\n      }\n\n      // Fetch updated data after adding/updating the budget\n      await fetchUpdatedData();\n      setSelectedCategory(\"\");\n      setNewBudgetAllocated(\"\");\n    } catch (err) {\n      setMessage(\"Error adding or updating budget. Please try again.\");\n    }\n  };\n\n  // Reusable function to fetch and update income and budget data\n  const fetchUpdatedData = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMessage(\"Please log in to access budget data.\");\n      return;\n    }\n    try {\n      const [incomeResponse, budgetResponse] = await Promise.all([axios.get(\"http://localhost:3001/api/income\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(\"http://localhost:3001/api/budget\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(budgets.reduce((total, budget) => total + budget.budgetAllocated, 0));\n    } catch (err) {\n      setMessage(\"Error fetching budget data. Please try again.\");\n    }\n  };\n  const handleUpdateBudget = async (id, newAllocation) => {\n    try {\n      var _budgetList$find;\n      const updatedAllocation = parseFloat(newAllocation);\n      if (isNaN(updatedAllocation) || updatedAllocation <= 0) {\n        setMessage(\"Please provide a valid budget allocation.\");\n        return;\n      }\n      const currentBudget = ((_budgetList$find = budgetList.find(b => b._id === id)) === null || _budgetList$find === void 0 ? void 0 : _budgetList$find.budgetAllocated) || 0;\n      if (updatedAllocation + totalBudgetAllocated - currentBudget > totalIncome) {\n        setMessage(\"Updated budget exceeds total income.\");\n        return;\n      }\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to update a budget.\");\n        return;\n      }\n      await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budgetAllocated: updatedAllocation\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Budget updated successfully!\");\n\n      // Inline the refresh data logic\n      const [incomeResponse, budgetResponse] = await Promise.all([axios.get(\"http://localhost:3001/api/income\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(\"http://localhost:3001/api/budget\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(budgets.reduce((total, budget) => total + budget.budgetAllocated, 0));\n    } catch (err) {\n      setMessage(\"Error updating budget. Please try again.\");\n    }\n  };\n  const handleRemoveBudget = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove a budget.\");\n        return;\n      }\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Budget removed successfully!\");\n\n      // Inline the refresh data logic\n      const [incomeResponse, budgetResponse] = await Promise.all([axios.get(\"http://localhost:3001/api/income\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }), axios.get(\"http://localhost:3001/api/budget\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })]);\n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(budgets.reduce((total, budget) => total + budget.budgetAllocated, 0));\n    } catch (err) {\n      setMessage(\"Error removing budget. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total Budget Allocated: \\u20B9\", totalBudgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Budget Remaining: \\u20B9\", totalIncome - totalBudgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-budget\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudgetAllocated,\n        onChange: e => setNewBudgetAllocated(e.target.value),\n        placeholder: \"Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddBudget,\n        children: \"Add Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Budget List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"budget-list\",\n        children: budgetList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"budget-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.category, \": \\u20B9\", item.budgetAllocated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Date: \", new Date(item.date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Update Value:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: item.budgetAllocated,\n            onChange: e => handleUpdateBudget(item._id, parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveBudget(item._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"mzCVM8ay8a0C8LgLUaTwJw6o8m8=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","budgetList","setBudgetList","totalIncome","setTotalIncome","totalBudgetAllocated","setTotalBudgetAllocated","selectedCategory","setSelectedCategory","newBudgetAllocated","setNewBudgetAllocated","message","setMessage","currentMonth","setCurrentMonth","categories","month","Date","toLocaleString","year","getFullYear","fetchData","token","localStorage","getItem","incomeResponse","budgetResponse","Promise","all","get","headers","Authorization","data","budgets","reduce","total","budget","budgetAllocated","err","handleAddBudget","newAllocation","parseFloat","existingBudget","find","category","date","getMonth","put","_id","post","fetchUpdatedData","handleUpdateBudget","id","_budgetList$find","updatedAllocation","isNaN","currentBudget","b","handleRemoveBudget","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","index","type","placeholder","onClick","item","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [budgetList, setBudgetList] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [totalBudgetAllocated, setTotalBudgetAllocated] = useState(0);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [newBudgetAllocated, setNewBudgetAllocated] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  const categories = [\n    \"Groceries\",\n    \"Rent\",\n    \"Utilities\",\n    \"Entertainment\",\n    \"Savings\",\n    \"Miscellaneous\",\n  ];\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch income and budget data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to access budget data.\");\n          return;\n        }\n  \n        const [incomeResponse, budgetResponse] = await Promise.all([\n          axios.get(\"http://localhost:3001/api/income\", {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n          axios.get(\"http://localhost:3001/api/budget\", {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n        ]);\n  \n        setTotalIncome(incomeResponse.data.totalIncome);\n        const budgets = budgetResponse.data.budgets;\n        setBudgetList(budgets);\n        setTotalBudgetAllocated(\n          budgets.reduce((total, budget) => total + budget.budgetAllocated, 0)\n        );\n\n        if ( totalIncome < totalBudgetAllocated) {\n        setMessage(\"Please update Income to allocate more budget.\");\n        return;\n      }\n      } catch (err) {\n        setMessage(\"Error fetching data. Please try again.\");\n      }\n    };\n  \n    fetchData();\n  }, []);\n  \n  const handleAddBudget = async () => {\n    if (!selectedCategory || !newBudgetAllocated) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n  \n    const newAllocation = parseFloat(newBudgetAllocated);\n    if (newAllocation <= 0) {\n      setMessage(\"Please provide a valid budget amount.\");\n      return;\n    }\n  \n    if (totalBudgetAllocated + newAllocation > totalIncome) {\n      setMessage(\"Budget allocation cannot exceed total income.\");\n      return;\n    }\n  \n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to access budget data.\");\n        return;\n      }\n  \n      // Check if the category already exists for the current month\n      const existingBudget = budgetList.find(\n        (budget) => budget.category === selectedCategory && new Date(budget.date).getMonth() === new Date().getMonth()\n      );\n  \n      if (existingBudget) {\n        // If the category already exists, update the existing budget by adding the new allocation\n        await axios.put(\n          `http://localhost:3001/api/budget/${existingBudget._id}`,\n          { budgetAllocated: existingBudget.budgetAllocated + newAllocation },\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n  \n        setMessage(\"Budget updated successfully!\");\n      } else {\n        // If the category doesn't exist, create a new budget entry\n        await axios.post(\n          \"http://localhost:3001/api/budget\",\n          { category: selectedCategory, budgetAllocated: newAllocation },\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n  \n        setMessage(\"Budget added successfully!\");\n      }\n  \n      // Fetch updated data after adding/updating the budget\n      await fetchUpdatedData();\n      setSelectedCategory(\"\");\n      setNewBudgetAllocated(\"\");\n  \n    } catch (err) {\n      setMessage(\"Error adding or updating budget. Please try again.\");\n    }\n  };\n  \n  \n  // Reusable function to fetch and update income and budget data\n  const fetchUpdatedData = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMessage(\"Please log in to access budget data.\");\n      return;\n    }\n  \n    try {\n      const [incomeResponse, budgetResponse] = await Promise.all([\n        axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n  \n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(\n        budgets.reduce((total, budget) => total + budget.budgetAllocated, 0)\n      );\n    } catch (err) {\n      setMessage(\"Error fetching budget data. Please try again.\");\n    }\n  };\n  \n\n  const handleUpdateBudget = async (id, newAllocation) => {\n    try {\n      const updatedAllocation = parseFloat(newAllocation);\n      if (isNaN(updatedAllocation) || updatedAllocation <= 0) {\n        setMessage(\"Please provide a valid budget allocation.\");\n        return;\n      }\n  \n      const currentBudget = budgetList.find((b) => b._id === id)?.budgetAllocated || 0;\n      if (updatedAllocation + totalBudgetAllocated - currentBudget > totalIncome) {\n        setMessage(\"Updated budget exceeds total income.\");\n        return;\n      }\n  \n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to update a budget.\");\n        return;\n      }\n  \n      await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        { budgetAllocated: updatedAllocation },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n  \n      setMessage(\"Budget updated successfully!\");\n  \n      // Inline the refresh data logic\n      const [incomeResponse, budgetResponse] = await Promise.all([\n        axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n  \n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(\n        budgets.reduce((total, budget) => total + budget.budgetAllocated, 0)\n      );\n    } catch (err) {\n      setMessage(\"Error updating budget. Please try again.\");\n    }\n  };\n  \n  const handleRemoveBudget = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove a budget.\");\n        return;\n      }\n  \n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n  \n      setMessage(\"Budget removed successfully!\");\n  \n      // Inline the refresh data logic\n      const [incomeResponse, budgetResponse] = await Promise.all([\n        axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n        axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        }),\n      ]);\n  \n      setTotalIncome(incomeResponse.data.totalIncome);\n      const budgets = budgetResponse.data.budgets;\n      setBudgetList(budgets);\n      setTotalBudgetAllocated(\n        budgets.reduce((total, budget) => total + budget.budgetAllocated, 0)\n      );\n    } catch (err) {\n      setMessage(\"Error removing budget. Please try again.\");\n    }\n  };\n  \n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n      <div className=\"budget-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n        <h4>Total Budget Allocated: ₹{totalBudgetAllocated}</h4>\n        <h4>Budget Remaining: ₹{totalIncome - totalBudgetAllocated}</h4>\n      </div>\n      {message && <p className=\"message\">{message}</p>}\n\n      <h4>Add Budget</h4>\n      <div className=\"add-budget\">\n        <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n          <option value=\"\">Select Category</option>\n          {categories.map((category, index) => (\n            <option key={index} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newBudgetAllocated}\n          onChange={(e) => setNewBudgetAllocated(e.target.value)}\n          placeholder=\"Budget Amount\"\n        />\n        <button onClick={handleAddBudget}>Add Budget</button>\n      </div>\n\n      <div>\n        <h4>Budget List</h4>\n        <ul className=\"budget-list\">\n          {budgetList.map((item) => (\n            <li key={item._id} className=\"budget-item\">\n              <span>\n                {item.category}: ₹{item.budgetAllocated}\n              </span>\n              <span>Date: {new Date(item.date).toLocaleDateString()}</span>\n              <p>Update Value:</p>\n              <input\n                type=\"number\"\n                value={item.budgetAllocated}\n                onChange={(e) => handleUpdateBudget(item._id, parseFloat(e.target.value))}\n              />\n              <button onClick={() => handleRemoveBudget(item._id)}>Remove</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}