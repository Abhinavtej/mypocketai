{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [editingBudget, setEditingBudget] = useState({}); // Track edited budgets\n\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear(); // Get the current year\n    setCurrentMonth(`${month} ${year}`); // Set both month and year\n  }, []);\n\n  // Fetch budget and income data from backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch budget data\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          budgetAllocated,\n          categories\n        } = budgetResponse.data;\n\n        // Fetch income data\n        const incomeResponse = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const incomeList = incomeResponse.data.income;\n        const totalIncomeFromAPI = incomeList.reduce((sum, income) => sum + income.amount, 0);\n        setTotalIncome(totalIncomeFromAPI);\n        setBudgetAllocated(budgetAllocated);\n        setRemainingBudget(totalIncomeFromAPI - budgetAllocated);\n        setCategories(categories);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:3001/api/budget\", {\n        category: newCategory,\n        budget: parseFloat(newBudget)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n      fetchUpdatedData();\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n\n  // Update category budget\n  const handleUpdateCategory = async (id, updatedBudget) => {\n    if (!updatedBudget || updatedBudget <= 0) {\n      setMessage(\"Please provide a valid budget.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budget: parseFloat(updatedBudget)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Category updated successfully!\");\n      fetchUpdatedData();\n    } catch (err) {\n      setMessage(\"Error updating category\");\n    }\n  };\n\n  // Remove a category\n  const handleRemoveCategory = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Category removed successfully!\");\n      fetchUpdatedData();\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n\n  // Fetch updated data\n  const fetchUpdatedData = async () => {\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.get(\"http://localhost:3001/api/budget\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const {\n      totalIncome,\n      budgetAllocated,\n      categories\n    } = response.data;\n    setTotalIncome(totalIncome);\n    setBudgetAllocated(budgetAllocated);\n    setRemainingBudget(totalIncome - budgetAllocated);\n    setCategories(categories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Date: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Budget Allocated: \\u20B9\", budgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Remaining Budget: \\u20B9\", remainingBudget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        placeholder: \"Category Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudget,\n        onChange: e => setNewBudget(e.target.value),\n        placeholder: \"Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"category-list\",\n      children: categories.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: editingBudget[item._id] || \"\",\n          onChange: e => setEditingBudget({\n            ...editingBudget,\n            [item._id]: e.target.value\n          }),\n          placeholder: \"Update Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateCategory(item._id, editingBudget[item._id]),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveCategory(item._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"4NIAdCol4s13B7Hhnj6ZbAs+zA8=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","categories","setCategories","totalIncome","setTotalIncome","budgetAllocated","setBudgetAllocated","remainingBudget","setRemainingBudget","newCategory","setNewCategory","newBudget","setNewBudget","message","setMessage","currentMonth","setCurrentMonth","editingBudget","setEditingBudget","month","Date","toLocaleString","year","getFullYear","fetchBudgetData","token","localStorage","getItem","budgetResponse","get","headers","Authorization","data","incomeResponse","incomeList","income","totalIncomeFromAPI","reduce","sum","amount","err","handleAddCategory","post","category","budget","parseFloat","fetchUpdatedData","handleUpdateCategory","id","updatedBudget","put","handleRemoveCategory","delete","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","item","_id","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [editingBudget, setEditingBudget] = useState({}); // Track edited budgets\n\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear(); // Get the current year\n    setCurrentMonth(`${month} ${year}`); // Set both month and year\n  }, []);\n\n  // Fetch budget and income data from backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch budget data\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const { budgetAllocated, categories } = budgetResponse.data;\n\n        // Fetch income data\n        const incomeResponse = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const incomeList = incomeResponse.data.income;\n        const totalIncomeFromAPI = incomeList.reduce((sum, income) => sum + income.amount, 0);\n\n        setTotalIncome(totalIncomeFromAPI);\n        setBudgetAllocated(budgetAllocated);\n        setRemainingBudget(totalIncomeFromAPI - budgetAllocated);\n        setCategories(categories);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\n        \"http://localhost:3001/api/budget\",\n        { category: newCategory, budget: parseFloat(newBudget) },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n      fetchUpdatedData();\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n\n  // Update category budget\n  const handleUpdateCategory = async (id, updatedBudget) => {\n    if (!updatedBudget || updatedBudget <= 0) {\n      setMessage(\"Please provide a valid budget.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        { budget: parseFloat(updatedBudget) },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setMessage(\"Category updated successfully!\");\n      fetchUpdatedData();\n    } catch (err) {\n      setMessage(\"Error updating category\");\n    }\n  };\n\n  // Remove a category\n  const handleRemoveCategory = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setMessage(\"Category removed successfully!\");\n      fetchUpdatedData();\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n\n  // Fetch updated data\n  const fetchUpdatedData = async () => {\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.get(\"http://localhost:3001/api/budget\", {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    const { totalIncome, budgetAllocated, categories } = response.data;\n    setTotalIncome(totalIncome);\n    setBudgetAllocated(budgetAllocated);\n    setRemainingBudget(totalIncome - budgetAllocated);\n    setCategories(categories);\n  };\n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Date: {currentMonth}</p>\n\n      <div className=\"budget-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n        <h3>Budget Allocated: ₹{budgetAllocated}</h3>\n        <h3>Remaining Budget: ₹{remainingBudget}</h3>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <div className=\"add-category\">\n        <input\n          type=\"text\"\n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n          placeholder=\"Category Name\"\n        />\n        <input\n          type=\"number\"\n          value={newBudget}\n          onChange={(e) => setNewBudget(e.target.value)}\n          placeholder=\"Budget Amount\"\n        />\n        <button onClick={handleAddCategory}>Add Category</button>\n      </div>\n\n      <ul className=\"category-list\">\n        {categories.map((item) => (\n          <li key={item._id} className=\"category-item\">\n            <span>{item.category}</span>\n            <input\n              type=\"number\"\n              value={editingBudget[item._id] || \"\"}\n              onChange={(e) =>\n                setEditingBudget({ ...editingBudget, [item._id]: e.target.value })\n              }\n              placeholder=\"Update Budget\"\n            />\n            <button onClick={() => handleUpdateCategory(item._id, editingBudget[item._id])}>\n              Update\n            </button>\n            <button onClick={() => handleRemoveCategory(item._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}