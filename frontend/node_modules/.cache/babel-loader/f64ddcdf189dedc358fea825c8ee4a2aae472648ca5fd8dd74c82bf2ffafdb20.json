{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const category_data = [\"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \"Savings\", \"Miscellaneous\"];\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch budget and income data from backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch budget data\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          totalBudget,\n          totalRemainingBudget,\n          categories\n        } = budgetResponse.data;\n\n        // Fetch income data\n        const incomeResponse = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const totalIncomeFromAPI = incomeResponse.data.income.reduce((sum, income) => sum + income.amount, 0);\n        setTotalIncome(totalIncomeFromAPI);\n        setBudgetAllocated(totalBudget);\n        setRemainingBudget(totalRemainingBudget);\n        setCategories(categories);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n    const currentDate = new Date().toISOString().split(\"T\")[0]; // \"2024-11-09\" format\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3001/api/budget\", {\n        category: newCategory,\n        budgetAllocated: parseFloat(newBudget),\n        remainingBudget: parseFloat(newBudget),\n        date: currentDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const addedCategory = response.data;\n      setCategories(prevCategories => [...prevCategories, addedCategory]);\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n\n  // Update a category budget\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    const updatedBudgetFloat = parseFloat(updatedBudget);\n    if (isNaN(updatedBudgetFloat) || updatedBudgetFloat <= 0) {\n      setMessage(\"Please provide a valid budget amount.\");\n      return;\n    }\n    const newTotalAllocated = categories.reduce((sum, cat) => {\n      return sum + (cat._id === id ? updatedBudgetFloat : cat.budgetAllocated);\n    }, 0);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocation exceeds total income. Please adjust.\");\n      return;\n    }\n    const currentDate = new Date().toLocaleDateString();\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budgetAllocated: updatedBudgetFloat,\n        remainingBudget: updatedBudgetFloat,\n        date: currentDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => prevCategories.map(item => item._id === id ? {\n        ...item,\n        budgetAllocated: updatedBudgetFloat,\n        remainingBudget: updatedBudgetFloat,\n        date: currentDate\n      } : item));\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n\n  // Remove a category\n  const handleRemoveCategory = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCategories(prevCategories => prevCategories.filter(item => item._id !== id));\n      setMessage(\"Category removed successfully.\");\n    } catch (err) {\n      setMessage(\"Error removing category.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Allocated Budget: \\u20B9\", budgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Remaining Budget: \\u20B9\", remainingBudget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this), category_data.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudget,\n        onChange: e => setNewBudget(e.target.value),\n        placeholder: \"Enter Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"category-item\",\n          children: [category.category, \": \\u20B9\", category.budgetAllocated, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Date: \", new Date(category.date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleBudgetUpdate(category._id, category.budgetAllocated),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: category.budgetAllocated,\n            onChange: e => handleBudgetUpdate(category._id, category.budgetAllocated)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveCategory(category._id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, category._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"MxlM6tfM8Y9PRDSXwUeZtP5+CaI=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","categories","setCategories","totalIncome","setTotalIncome","budgetAllocated","setBudgetAllocated","remainingBudget","setRemainingBudget","newCategory","setNewCategory","newBudget","setNewBudget","message","setMessage","currentMonth","setCurrentMonth","category_data","month","Date","toLocaleString","year","getFullYear","fetchBudgetData","token","localStorage","getItem","budgetResponse","get","headers","Authorization","totalBudget","totalRemainingBudget","data","incomeResponse","totalIncomeFromAPI","income","reduce","sum","amount","err","handleAddCategory","newTotalAllocated","parseFloat","currentDate","toISOString","split","response","post","category","date","addedCategory","prevCategories","handleBudgetUpdate","id","updatedBudget","updatedBudgetFloat","isNaN","cat","_id","toLocaleDateString","put","map","item","handleRemoveCategory","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","index","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  const category_data = [\n    \"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \n    \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \n    \"Savings\", \"Miscellaneous\"\n  ];\n\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch budget and income data from backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch budget data\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const { totalBudget, totalRemainingBudget, categories } = budgetResponse.data;\n\n        // Fetch income data\n        const incomeResponse = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const totalIncomeFromAPI = incomeResponse.data.income.reduce((sum, income) => sum + income.amount, 0);\n\n        setTotalIncome(totalIncomeFromAPI);\n        setBudgetAllocated(totalBudget);\n        setRemainingBudget(totalRemainingBudget);\n        setCategories(categories);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n\n    const currentDate = new Date().toISOString().split(\"T\")[0]; // \"2024-11-09\" format\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\n        \"http://localhost:3001/api/budget\",\n        { category: newCategory, budgetAllocated: parseFloat(newBudget), remainingBudget: parseFloat(newBudget), date: currentDate },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      const addedCategory = response.data;\n      setCategories((prevCategories) => [...prevCategories, addedCategory]);\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n\n  // Update a category budget\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    const updatedBudgetFloat = parseFloat(updatedBudget);\n\n    if (isNaN(updatedBudgetFloat) || updatedBudgetFloat <= 0) {\n      setMessage(\"Please provide a valid budget amount.\");\n      return;\n    }\n\n    const newTotalAllocated = categories.reduce((sum, cat) => {\n      return sum + (cat._id === id ? updatedBudgetFloat : cat.budgetAllocated);\n    }, 0);\n\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocation exceeds total income. Please adjust.\");\n      return;\n    }\n\n    const currentDate = new Date().toLocaleDateString();\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        { budgetAllocated: updatedBudgetFloat, remainingBudget: updatedBudgetFloat, date: currentDate },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      setCategories((prevCategories) =>\n        prevCategories.map((item) =>\n          item._id === id ? { ...item, budgetAllocated: updatedBudgetFloat, remainingBudget: updatedBudgetFloat, date: currentDate } : item\n        )\n      );\n\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n\n  // Remove a category\n  const handleRemoveCategory = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setCategories((prevCategories) => prevCategories.filter((item) => item._id !== id));\n      setMessage(\"Category removed successfully.\");\n    } catch (err) {\n      setMessage(\"Error removing category.\");\n    }\n  };\n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n      <div className=\"budget-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n        <h4>Allocated Budget: ₹{budgetAllocated}</h4>\n        <h4>Remaining Budget: ₹{remainingBudget}</h4>\n      </div>\n\n      {message && <p>{message}</p>}\n\n      <div className=\"add-category\">\n      <select value={newCategory} onChange={(e) => setNewCategory(e.target.value)}>\n        <option value=\"\">Select a Category</option>\n        {category_data.map((category, index) => (\n          <option key={index} value={category}>\n            {category}\n          </option>\n        ))}\n      </select>\n        <input \n          type=\"number\" \n          value={newBudget} \n          onChange={(e) => setNewBudget(e.target.value)} \n          placeholder=\"Enter Budget Amount\" \n        />\n        <button onClick={handleAddCategory}>Add Category</button>\n      </div>\n\n      <div className=\"category-list\">\n        <ul>\n          {categories.map((category) => (\n            <li className=\"category-item\" key={category._id}>\n              {category.category}: ₹{category.budgetAllocated}\n              <span>Date: {new Date(category.date).toLocaleDateString()}</span>\n              <button onClick={() => handleBudgetUpdate(category._id, category.budgetAllocated)}>\n                Update\n              </button>\n              <input\n              type=\"number\"\n              value={category.budgetAllocated}\n              onChange={(e) => handleBudgetUpdate(category._id, category.budgetAllocated)}\n            />\n              <button onClick={() => handleRemoveCategory(category._id)}>Remove</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}