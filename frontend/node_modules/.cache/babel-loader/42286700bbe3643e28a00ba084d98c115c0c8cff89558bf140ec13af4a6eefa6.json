{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/IncomeManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomeManagement = () => {\n  _s();\n  const [incomeStack, setIncomeStack] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(\"\");\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const incomeSources = [\"Part-Time Job\", \"Scholarship\", \"Allowance\", \"Freelancing\", \"Other\"];\n  useEffect(() => {\n    const date = new Date();\n    setCurrentMonth(`${date.getDate()} ${date.toLocaleString(\"default\", {\n      month: \"long\"\n    })} ${date.getFullYear()}`);\n    fetchIncome();\n  }, []);\n  const fetchIncome = async () => {\n    try {\n      const response = await axios.get(\"/api/income\");\n      setIncomeStack(response.data);\n      calculateTotal(response.data);\n    } catch (error) {\n      setMessage(\"Failed to fetch income data\");\n    }\n  };\n  const calculateTotal = incomeData => {\n    const total = incomeData.reduce((sum, item) => sum + item.amount, 0);\n    setTotalIncome(total);\n  };\n  const addIncome = async () => {\n    if (!selectedSource || !newAmount) {\n      setMessage(\"Please select an income source and enter an amount.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"/api/income\", {\n        source: selectedSource,\n        amount: parseFloat(newAmount)\n      });\n      setIncomeStack([...incomeStack, response.data]);\n      calculateTotal([...incomeStack, response.data]);\n      setSelectedSource(\"\");\n      setNewAmount(\"\");\n      setMessage(\"Income added successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to add income.\");\n    }\n  };\n  const updateIncome = async (id, updatedAmount) => {\n    try {\n      const response = await axios.put(`/api/income/${id}`, {\n        amount: updatedAmount\n      });\n      const updatedIncomeStack = incomeStack.map(item => item._id === id ? response.data : item);\n      setIncomeStack(updatedIncomeStack);\n      calculateTotal(updatedIncomeStack);\n      setMessage(\"Income updated successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to update income.\");\n    }\n  };\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`/api/income/${id}`);\n      const updatedIncomeStack = incomeStack.filter(item => item._id !== id);\n      setIncomeStack(updatedIncomeStack);\n      calculateTotal(updatedIncomeStack);\n      setMessage(\"Income removed successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to remove income.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"income-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Income Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Date: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-income\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSource,\n        onChange: e => setSelectedSource(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Income Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), incomeSources.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          children: source\n        }, source, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newAmount,\n        onChange: e => setNewAmount(e.target.value),\n        placeholder: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIncome,\n        children: \"Add Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"income-list\",\n      children: incomeStack.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"income-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.source, \": \\u20B9\", item.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: item.amount,\n          onBlur: e => updateIncome(item._id, parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteIncome(item._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(IncomeManagement, \"SxRQbp4dE/kAOMVGWXkJH2+tzyQ=\");\n_c = IncomeManagement;\nexport default IncomeManagement;\nvar _c;\n$RefreshReg$(_c, \"IncomeManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","IncomeManagement","_s","incomeStack","setIncomeStack","selectedSource","setSelectedSource","newAmount","setNewAmount","currentMonth","setCurrentMonth","totalIncome","setTotalIncome","message","setMessage","incomeSources","date","Date","getDate","toLocaleString","month","getFullYear","fetchIncome","response","get","data","calculateTotal","error","incomeData","total","reduce","sum","item","amount","addIncome","post","source","parseFloat","updateIncome","id","updatedAmount","put","updatedIncomeStack","map","_id","deleteIncome","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","defaultValue","onBlur","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/IncomeManagement.css\";\n\nconst IncomeManagement = () => {\n  const [incomeStack, setIncomeStack] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(\"\");\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [message, setMessage] = useState(\"\");\n\n  const incomeSources = [\n    \"Part-Time Job\",\n    \"Scholarship\",\n    \"Allowance\",\n    \"Freelancing\",\n    \"Other\",\n  ];\n\n  useEffect(() => {\n    const date = new Date();\n    setCurrentMonth(\n      `${date.getDate()} ${date.toLocaleString(\"default\", { month: \"long\" })} ${date.getFullYear()}`\n    );\n    fetchIncome();\n  }, []);\n\n  const fetchIncome = async () => {\n    try {\n      const response = await axios.get(\"/api/income\");\n      setIncomeStack(response.data);\n      calculateTotal(response.data);\n    } catch (error) {\n      setMessage(\"Failed to fetch income data\");\n    }\n  };\n\n  const calculateTotal = (incomeData) => {\n    const total = incomeData.reduce((sum, item) => sum + item.amount, 0);\n    setTotalIncome(total);\n  };\n\n  const addIncome = async () => {\n    if (!selectedSource || !newAmount) {\n      setMessage(\"Please select an income source and enter an amount.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"/api/income\", {\n        source: selectedSource,\n        amount: parseFloat(newAmount),\n      });\n      setIncomeStack([...incomeStack, response.data]);\n      calculateTotal([...incomeStack, response.data]);\n      setSelectedSource(\"\");\n      setNewAmount(\"\");\n      setMessage(\"Income added successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to add income.\");\n    }\n  };\n\n  const updateIncome = async (id, updatedAmount) => {\n    try {\n      const response = await axios.put(`/api/income/${id}`, { amount: updatedAmount });\n      const updatedIncomeStack = incomeStack.map((item) =>\n        item._id === id ? response.data : item\n      );\n      setIncomeStack(updatedIncomeStack);\n      calculateTotal(updatedIncomeStack);\n      setMessage(\"Income updated successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to update income.\");\n    }\n  };\n\n  const deleteIncome = async (id) => {\n    try {\n      await axios.delete(`/api/income/${id}`);\n      const updatedIncomeStack = incomeStack.filter((item) => item._id !== id);\n      setIncomeStack(updatedIncomeStack);\n      calculateTotal(updatedIncomeStack);\n      setMessage(\"Income removed successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to remove income.\");\n    }\n  };\n\n  return (\n    <div className=\"income-container\">\n      <h2>Income Management</h2>\n      <p className=\"date-display\">Date: {currentMonth}</p>\n\n      <div className=\"income-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n      </div>\n\n      <div className=\"add-income\">\n        <select\n          value={selectedSource}\n          onChange={(e) => setSelectedSource(e.target.value)}\n        >\n          <option value=\"\">Select Income Source</option>\n          {incomeSources.map((source) => (\n            <option key={source} value={source}>\n              {source}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newAmount}\n          onChange={(e) => setNewAmount(e.target.value)}\n          placeholder=\"Amount\"\n        />\n        <button onClick={addIncome}>Add Income</button>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <ul className=\"income-list\">\n        {incomeStack.map((item) => (\n          <li key={item._id} className=\"income-item\">\n            <span>{item.source}: ₹{item.amount}</span>\n            <input\n              type=\"number\"\n              defaultValue={item.amount}\n              onBlur={(e) => updateIncome(item._id, parseFloat(e.target.value))}\n            />\n            <button onClick={() => deleteIncome(item._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default IncomeManagement;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMmB,aAAa,GAAG,CACpB,eAAe,EACf,aAAa,EACb,WAAW,EACX,aAAa,EACb,OAAO,CACR;EAEDlB,SAAS,CAAC,MAAM;IACd,MAAMmB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBP,eAAe,CACb,GAAGM,IAAI,CAACE,OAAO,CAAC,CAAC,IAAIF,IAAI,CAACG,cAAc,CAAC,SAAS,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC,IAAIJ,IAAI,CAACK,WAAW,CAAC,CAAC,EAC9F,CAAC;IACDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,aAAa,CAAC;MAC/CpB,cAAc,CAACmB,QAAQ,CAACE,IAAI,CAAC;MAC7BC,cAAc,CAACH,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdb,UAAU,CAAC,6BAA6B,CAAC;IAC3C;EACF,CAAC;EAED,MAAMY,cAAc,GAAIE,UAAU,IAAK;IACrC,MAAMC,KAAK,GAAGD,UAAU,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,CAAC,CAAC;IACpErB,cAAc,CAACiB,KAAK,CAAC;EACvB,CAAC;EAED,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAAC7B,cAAc,IAAI,CAACE,SAAS,EAAE;MACjCO,UAAU,CAAC,qDAAqD,CAAC;MACjE;IACF;IACA,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMzB,KAAK,CAACqC,IAAI,CAAC,aAAa,EAAE;QAC/CC,MAAM,EAAE/B,cAAc;QACtB4B,MAAM,EAAEI,UAAU,CAAC9B,SAAS;MAC9B,CAAC,CAAC;MACFH,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEoB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC/CC,cAAc,CAAC,CAAC,GAAGvB,WAAW,EAAEoB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC/CnB,iBAAiB,CAAC,EAAE,CAAC;MACrBE,YAAY,CAAC,EAAE,CAAC;MAChBM,UAAU,CAAC,4BAA4B,CAAC;IAC1C,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdb,UAAU,CAAC,uBAAuB,CAAC;IACrC;EACF,CAAC;EAED,MAAMwB,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,aAAa,KAAK;IAChD,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMzB,KAAK,CAAC2C,GAAG,CAAC,eAAeF,EAAE,EAAE,EAAE;QAAEN,MAAM,EAAEO;MAAc,CAAC,CAAC;MAChF,MAAME,kBAAkB,GAAGvC,WAAW,CAACwC,GAAG,CAAEX,IAAI,IAC9CA,IAAI,CAACY,GAAG,KAAKL,EAAE,GAAGhB,QAAQ,CAACE,IAAI,GAAGO,IACpC,CAAC;MACD5B,cAAc,CAACsC,kBAAkB,CAAC;MAClChB,cAAc,CAACgB,kBAAkB,CAAC;MAClC5B,UAAU,CAAC,8BAA8B,CAAC;IAC5C,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdb,UAAU,CAAC,0BAA0B,CAAC;IACxC;EACF,CAAC;EAED,MAAM+B,YAAY,GAAG,MAAON,EAAE,IAAK;IACjC,IAAI;MACF,MAAMzC,KAAK,CAACgD,MAAM,CAAC,eAAeP,EAAE,EAAE,CAAC;MACvC,MAAMG,kBAAkB,GAAGvC,WAAW,CAAC4C,MAAM,CAAEf,IAAI,IAAKA,IAAI,CAACY,GAAG,KAAKL,EAAE,CAAC;MACxEnC,cAAc,CAACsC,kBAAkB,CAAC;MAClChB,cAAc,CAACgB,kBAAkB,CAAC;MAClC5B,UAAU,CAAC,8BAA8B,CAAC;IAC5C,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdb,UAAU,CAAC,0BAA0B,CAAC;IACxC;EACF,CAAC;EAED,oBACEd,OAAA;IAAKgD,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BjD,OAAA;MAAAiD,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrD,OAAA;MAAGgD,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,QAAM,EAACxC,YAAY;IAAA;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpDrD,OAAA;MAAKgD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BjD,OAAA;QAAAiD,QAAA,GAAI,sBAAe,EAACtC,WAAW;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAENrD,OAAA;MAAKgD,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBjD,OAAA;QACEsD,KAAK,EAAEjD,cAAe;QACtBkD,QAAQ,EAAGC,CAAC,IAAKlD,iBAAiB,CAACkD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,gBAEnDjD,OAAA;UAAQsD,KAAK,EAAC,EAAE;UAAAL,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7CtC,aAAa,CAAC4B,GAAG,CAAEP,MAAM,iBACxBpC,OAAA;UAAqBsD,KAAK,EAAElB,MAAO;UAAAa,QAAA,EAChCb;QAAM,GADIA,MAAM;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTrD,OAAA;QACE0D,IAAI,EAAC,QAAQ;QACbJ,KAAK,EAAE/C,SAAU;QACjBgD,QAAQ,EAAGC,CAAC,IAAKhD,YAAY,CAACgD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CK,WAAW,EAAC;MAAQ;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eACFrD,OAAA;QAAQ4D,OAAO,EAAE1B,SAAU;QAAAe,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EAELxC,OAAO,iBAAIb,OAAA;MAAGgD,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEpC;IAAO;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhDrD,OAAA;MAAIgD,SAAS,EAAC,aAAa;MAAAC,QAAA,EACxB9C,WAAW,CAACwC,GAAG,CAAEX,IAAI,iBACpBhC,OAAA;QAAmBgD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxCjD,OAAA;UAAAiD,QAAA,GAAOjB,IAAI,CAACI,MAAM,EAAC,UAAG,EAACJ,IAAI,CAACC,MAAM;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CrD,OAAA;UACE0D,IAAI,EAAC,QAAQ;UACbG,YAAY,EAAE7B,IAAI,CAACC,MAAO;UAC1B6B,MAAM,EAAGN,CAAC,IAAKlB,YAAY,CAACN,IAAI,CAACY,GAAG,EAAEP,UAAU,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACFrD,OAAA;UAAQ4D,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACb,IAAI,CAACY,GAAG,CAAE;UAAAK,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPvDrB,IAAI,CAACY,GAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACnD,EAAA,CApIID,gBAAgB;AAAA8D,EAAA,GAAhB9D,gBAAgB;AAsItB,eAAeA,gBAAgB;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}