{"ast":null,"code":"import React,{useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import axios from\"axios\";import styles from\"../assets/css/Auth.module.css\";import logo from\"../assets/images/logo.png\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const{token}=useParams();// Get token from URL\nconst[password,setPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[message,setMessage]=useState(\"\");const[success,setSuccess]=useState(false);const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();if(!password||!confirmPassword){setMessage(\"Please fill in all fields.\");setSuccess(false);return;}if(password!==confirmPassword){setMessage(\"Passwords do not match.\");setSuccess(false);return;}try{const response=await axios.post(`http://localhost:3001/api/auth/reset-password/${token}`,{password});setMessage(response.data.message||\"Password reset successfully!\");setSuccess(true);// Redirect to login page after a delay\nsetTimeout(()=>{navigate(\"/login\");},3000);}catch(error){var _error$response,_error$response$data;setMessage(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"Failed to reset password.\");setSuccess(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:styles.authContainer,children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Logo\",className:styles.authlogo}),/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:styles.authForm,children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Enter new password\",className:styles.authInput}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),placeholder:\"Confirm new password\",className:styles.authInput}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.authButton,children:\"Reset Password\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:success?styles.successMessage:styles.errorMessage,children:message})]});};export default ResetPassword;","map":{"version":3,"names":["React","useState","useParams","useNavigate","axios","styles","logo","jsx","_jsx","jsxs","_jsxs","ResetPassword","token","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","success","setSuccess","navigate","handleSubmit","e","preventDefault","response","post","data","setTimeout","error","_error$response","_error$response$data","className","authContainer","children","src","alt","authlogo","onSubmit","authForm","type","value","onChange","target","placeholder","authInput","authButton","successMessage","errorMessage"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styles from \"../assets/css/Auth.module.css\";\nimport logo from \"../assets/images/logo.png\";\n\nconst ResetPassword = () => {\n  const { token } = useParams(); // Get token from URL\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!password || !confirmPassword) {\n      setMessage(\"Please fill in all fields.\");\n      setSuccess(false);\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match.\");\n      setSuccess(false);\n      return;\n    }\n\n    try {\n      const response = await axios.post(`http://localhost:3001/api/auth/reset-password/${token}`, {\n        password,\n      });\n      setMessage(response.data.message || \"Password reset successfully!\");\n      setSuccess(true);\n\n      // Redirect to login page after a delay\n      setTimeout(() => {\n        navigate(\"/login\");\n      }, 3000);\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"Failed to reset password.\");\n      setSuccess(false);\n    }\n  };\n\n  return (\n    <div className={styles.authContainer}>\n      <img src={logo} alt=\"Logo\" className={styles.authlogo} />\n      <h2>Reset Password</h2>\n      <form onSubmit={handleSubmit} className={styles.authForm}>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Enter new password\"\n          className={styles.authInput}\n        />\n        <input\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          placeholder=\"Confirm new password\"\n          className={styles.authInput}\n        />\n        <button type=\"submit\" className={styles.authButton}>\n          Reset Password\n        </button>\n      </form>\n      {message && (\n        <p className={success ? styles.successMessage : styles.errorMessage}>{message}</p>\n      )}\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}