{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetAllocation = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const category_data = [\"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \"Savings\", \"Miscellaneous\"];\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch budget and income data from backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch budget data\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          budgetAllocated,\n          categories\n        } = budgetResponse.data;\n\n        // Fetch income data\n        const incomeResponse = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const incomeList = incomeResponse.data.income;\n        const totalIncomeFromAPI = incomeList.reduce((sum, income) => sum + income.amount, 0);\n        setTotalIncome(totalIncomeFromAPI);\n        setBudgetAllocated(budgetAllocated);\n        setRemainingBudget(totalIncomeFromAPI - budgetAllocated);\n        setCategories(categories);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n\n    // Check if the new budget exceeds the remaining budget\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n\n    // Get the current date in YYYY-MM-DD format\n    const currentDate = new Date().toISOString().split(\"T\")[0]; // \"2024-11-09\" format\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\"http://localhost:3001/api/budget\", {\n        category: newCategory,\n        budget: parseFloat(newBudget),\n        date: currentDate\n      },\n      // Include date\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const addedCategory = response.data;\n\n      // Update local state with the new category\n      setCategories(prevCategories => [...prevCategories, addedCategory]);\n\n      // Update budget calculations\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n\n  // Handle budget update automatically on change\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    const updatedBudgetFloat = parseFloat(updatedBudget);\n    if (isNaN(updatedBudgetFloat) || updatedBudgetFloat <= 0) {\n      setMessage(\"Please provide a valid budget amount.\");\n      return;\n    }\n    const newTotalAllocated = categories.reduce((sum, cat) => {\n      if (cat._id === id) {\n        return sum + updatedBudgetFloat;\n      }\n      return sum + cat.budget;\n    }, 0);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocation exceeds total income. Please adjust.\");\n      return;\n    }\n    const currentDate = new Date().toLocaleDateString();\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:3001/api/budget/${id}`, {\n        budget: updatedBudgetFloat,\n        date: currentDate\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Update the category locally\n      setCategories(prevCategories => prevCategories.map(item => item._id === id ? {\n        ...item,\n        budget: updatedBudgetFloat,\n        date: currentDate\n      } : item));\n      const updatedBudgetAllocated = newTotalAllocated;\n      setBudgetAllocated(updatedBudgetAllocated);\n      setRemainingBudget(totalIncome - updatedBudgetAllocated);\n      setMessage(\"Budget updated successfully!\");\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n\n  // Remove a category\n  const handleRemoveCategory = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedCategories = categories.filter(item => item._id !== id);\n      setCategories(updatedCategories);\n\n      // Recalculate budget allocations\n      const updatedBudgetAllocated = updatedCategories.reduce((sum, cat) => sum + cat.budget, 0);\n      setBudgetAllocated(updatedBudgetAllocated);\n      setRemainingBudget(totalIncome - updatedBudgetAllocated);\n      setMessage(\"Category removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Date: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Budget Allocated: \\u20B9\", budgetAllocated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Remaining Budget: \\u20B9\", remainingBudget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Category and Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newCategory,\n        onChange: e => setNewCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), category_data.map((source, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          children: source\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"1\",\n        value: newBudget,\n        onChange: e => setNewBudget(e.target.value),\n        placeholder: \"Budget Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCategory,\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"category-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Category and Budget List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"category-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.category, \": \\u20B9\", item.budget]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", item.date ? new Date(item.date).toLocaleDateString() : \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: item.budget,\n          onChange: e => handleBudgetUpdate(item._id, e.target.value),\n          placeholder: \"Budget Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveCategory(item._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetAllocation, \"MxlM6tfM8Y9PRDSXwUeZtP5+CaI=\");\n_c = BudgetAllocation;\nexport default BudgetAllocation;\nvar _c;\n$RefreshReg$(_c, \"BudgetAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BudgetAllocation","_s","categories","setCategories","totalIncome","setTotalIncome","budgetAllocated","setBudgetAllocated","remainingBudget","setRemainingBudget","newCategory","setNewCategory","newBudget","setNewBudget","message","setMessage","currentMonth","setCurrentMonth","category_data","month","Date","toLocaleString","year","getFullYear","fetchBudgetData","token","localStorage","getItem","budgetResponse","get","headers","Authorization","data","incomeResponse","incomeList","income","totalIncomeFromAPI","reduce","sum","amount","err","handleAddCategory","newTotalAllocated","parseFloat","currentDate","toISOString","split","response","post","category","budget","date","addedCategory","prevCategories","handleBudgetUpdate","id","updatedBudget","updatedBudgetFloat","isNaN","cat","_id","toLocaleDateString","put","map","item","updatedBudgetAllocated","handleRemoveCategory","delete","updatedCategories","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","source","index","type","min","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/BudgetAllocation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/BudgetAllocation.css\";\n\nconst BudgetAllocation = () => {\n  const [categories, setCategories] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [budgetAllocated, setBudgetAllocated] = useState(0);\n  const [remainingBudget, setRemainingBudget] = useState(0);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newBudget, setNewBudget] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n\n  const category_data = [\"Food\", \"Movies\", \"OTT\", \"Shopping\", \"Travel\", \"Rent\", \"Utilities\", \"Health\", \"Insurance\", \"Investments\", \"Savings\", \"Miscellaneous\"];\n\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch budget and income data from backend\n  useEffect(() => {\n    const fetchBudgetData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        // Fetch budget data\n        const budgetResponse = await axios.get(\"http://localhost:3001/api/budget\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const { budgetAllocated, categories } = budgetResponse.data;\n\n        // Fetch income data\n        const incomeResponse = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n\n        const incomeList = incomeResponse.data.income;\n        const totalIncomeFromAPI = incomeList.reduce((sum, income) => sum + income.amount, 0);\n\n        setTotalIncome(totalIncomeFromAPI);\n        setBudgetAllocated(budgetAllocated);\n        setRemainingBudget(totalIncomeFromAPI - budgetAllocated);\n        setCategories(categories);\n      } catch (err) {\n        setMessage(\"Error fetching data\");\n      }\n    };\n\n    fetchBudgetData();\n  }, []);\n\n  // Add a new category\n  const handleAddCategory = async () => {\n    if (!newCategory || !newBudget || newBudget <= 0) {\n      setMessage(\"Please provide a valid category and budget.\");\n      return;\n    }\n  \n    // Check if the new budget exceeds the remaining budget\n    const newTotalAllocated = budgetAllocated + parseFloat(newBudget);\n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocated exceeds total income. Please adjust.\");\n      return;\n    }\n  \n    // Get the current date in YYYY-MM-DD format\n    const currentDate = new Date().toISOString().split(\"T\")[0]; // \"2024-11-09\" format\n  \n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(\n        \"http://localhost:3001/api/budget\",\n        { category: newCategory, budget: parseFloat(newBudget), date: currentDate }, // Include date\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n  \n      const addedCategory = response.data;\n  \n      // Update local state with the new category\n      setCategories((prevCategories) => [...prevCategories, addedCategory]);\n  \n      // Update budget calculations\n      setBudgetAllocated(newTotalAllocated);\n      setRemainingBudget(totalIncome - newTotalAllocated);\n  \n      setMessage(\"Category added successfully!\");\n      setNewCategory(\"\");\n      setNewBudget(\"\");\n    } catch (err) {\n      setMessage(\"Error adding category\");\n    }\n  };\n  \n\n  // Handle budget update automatically on change\n  const handleBudgetUpdate = async (id, updatedBudget) => {\n    const updatedBudgetFloat = parseFloat(updatedBudget);\n  \n    if (isNaN(updatedBudgetFloat) || updatedBudgetFloat <= 0) {\n      setMessage(\"Please provide a valid budget amount.\");\n      return;\n    }\n  \n    const newTotalAllocated = categories.reduce((sum, cat) => {\n      if (cat._id === id) {\n        return sum + updatedBudgetFloat;\n      }\n      return sum + cat.budget;\n    }, 0);\n  \n    if (newTotalAllocated > totalIncome) {\n      setMessage(\"Budget allocation exceeds total income. Please adjust.\");\n      return;\n    }\n  \n    const currentDate = new Date().toLocaleDateString();\n  \n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(\n        `http://localhost:3001/api/budget/${id}`,\n        { budget: updatedBudgetFloat, date: currentDate },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n  \n      // Update the category locally\n      setCategories((prevCategories) =>\n        prevCategories.map((item) =>\n          item._id === id ? { ...item, budget: updatedBudgetFloat, date: currentDate } : item\n        )\n      );\n  \n      const updatedBudgetAllocated = newTotalAllocated;\n      setBudgetAllocated(updatedBudgetAllocated);\n      setRemainingBudget(totalIncome - updatedBudgetAllocated);\n  \n      setMessage(\"Budget updated successfully!\");\n    } catch (err) {\n      setMessage(\"Error updating budget\");\n    }\n  };\n  \n  // Remove a category\n  const handleRemoveCategory = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:3001/api/budget/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      const updatedCategories = categories.filter((item) => item._id !== id);\n      setCategories(updatedCategories);\n\n      // Recalculate budget allocations\n      const updatedBudgetAllocated = updatedCategories.reduce((sum, cat) => sum + cat.budget, 0);\n      setBudgetAllocated(updatedBudgetAllocated);\n      setRemainingBudget(totalIncome - updatedBudgetAllocated);\n\n      setMessage(\"Category removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing category\");\n    }\n  };\n\n  return (\n    <div className=\"budget-container\">\n      <h2>Budget Allocation</h2>\n      <p className=\"date-display\">Date: {currentMonth}</p>\n\n      <div className=\"budget-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n        <h4>Budget Allocated: ₹{budgetAllocated}</h4>\n        <h4>Remaining Budget: ₹{remainingBudget}</h4>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <p>Add Category and Budget</p>\n      <div className=\"add-category\">\n        <select \n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n        >\n          <option value=\"\">Select Category</option>\n          {category_data.map((source, index) => (\n            <option key={index} value={source}>\n              {source}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          min=\"1\"\n          value={newBudget}\n          onChange={(e) => setNewBudget(e.target.value)}\n          placeholder=\"Budget Amount\"\n        />\n        <button onClick={handleAddCategory}>Add Category</button>\n      </div>\n\n      <ul className=\"category-list\">\n      <p>Category and Budget List</p>\n        {categories.map((item) => (\n          <li key={item._id} className=\"category-item\">\n            <span>{item.category}: ₹{item.budget}</span>\n            <span>Date: {item.date ? new Date(item.date).toLocaleDateString() : \"N/A\"}</span>\n            <input\n              type=\"number\"\n              min=\"1\"\n              value={item.budget}\n              onChange={(e) => handleBudgetUpdate(item._id, e.target.value)}\n              placeholder=\"Budget Amount\"\n            />\n            <button onClick={() => handleRemoveCategory(item._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BudgetAllocation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}