{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/IncomeManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomeManagement = () => {\n  _s();\n  const [incomeStack, setIncomeStack] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(\"\");\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const incomeSources = [\"Pocket Money\", \"Part-Time Job\", \"Scholarship\", \"Allowance\", \"Freelancing\", \"Other\"];\n  useEffect(() => {\n    const date = new Date();\n    setCurrentMonth(`${date.getDate()} ${date.toLocaleString(\"default\", {\n      month: \"long\"\n    })} ${date.getFullYear()}`);\n  }, []);\n  const fetchIncome = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/income\");\n      setIncomeStack(response.data);\n      calculateTotal(response.data);\n    } catch (error) {\n      setMessage(\"Failed to fetch income data\");\n    }\n  }, []);\n  useEffect(() => {\n    fetchIncome();\n  }, [fetchIncome]);\n  const calculateTotal = incomeData => {\n    const total = incomeData.reduce((sum, item) => sum + item.amount, 0);\n    setTotalIncome(total);\n  };\n  const addIncome = async () => {\n    if (!selectedSource || !newAmount) {\n      setMessage(\"Please select an income source and enter an amount.\");\n      return;\n    }\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMessage(\"You must be logged in.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:3001/api/income\", {\n        source: selectedSource,\n        amount: parseFloat(newAmount)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setIncomeStack([...incomeStack, response.data]);\n      calculateTotal([...incomeStack, response.data]);\n      setSelectedSource(\"\");\n      setNewAmount(\"\");\n      setMessage(\"Income added successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to add income.\");\n    }\n  };\n  const updateIncome = async (id, updatedAmount) => {\n    try {\n      const response = await axios.put(`http://localhost:3001/api/income/${id}`, {\n        amount: updatedAmount\n      });\n      const updatedIncomeStack = incomeStack.map(item => item._id === id ? response.data : item);\n      setIncomeStack(updatedIncomeStack);\n      calculateTotal(updatedIncomeStack);\n      setMessage(\"Income updated successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to update income.\");\n    }\n  };\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/api/income/${id}`);\n      const updatedIncomeStack = incomeStack.filter(item => item._id !== id);\n      setIncomeStack(updatedIncomeStack);\n      calculateTotal(updatedIncomeStack);\n      setMessage(\"Income removed successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to remove income.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"income-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Income Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Date: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-income\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSource,\n        onChange: e => setSelectedSource(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Income Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), incomeSources.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          children: source\n        }, source, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newAmount,\n        onChange: e => setNewAmount(e.target.value),\n        placeholder: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIncome,\n        children: \"Add Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"income-list\",\n      children: incomeStack.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"income-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.source, \": \\u20B9\", item.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: item.amount,\n          onBlur: e => updateIncome(item._id, parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteIncome(item._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(IncomeManagement, \"pz+XkPxVYOx17x9tSeij3bIqTmw=\");\n_c = IncomeManagement;\nexport default IncomeManagement;\nvar _c;\n$RefreshReg$(_c, \"IncomeManagement\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","IncomeManagement","_s","incomeStack","setIncomeStack","selectedSource","setSelectedSource","newAmount","setNewAmount","currentMonth","setCurrentMonth","totalIncome","setTotalIncome","message","setMessage","incomeSources","date","Date","getDate","toLocaleString","month","getFullYear","fetchIncome","response","get","data","calculateTotal","error","incomeData","total","reduce","sum","item","amount","addIncome","token","localStorage","getItem","post","source","parseFloat","headers","Authorization","updateIncome","id","updatedAmount","put","updatedIncomeStack","map","_id","deleteIncome","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","defaultValue","onBlur","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/IncomeManagement.css\";\n\nconst IncomeManagement = () => {\n  const [incomeStack, setIncomeStack] = useState([]);\n  const [selectedSource, setSelectedSource] = useState(\"\");\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [message, setMessage] = useState(\"\");\n\n  const incomeSources = [\n    \"Pocket Money\",\n    \"Part-Time Job\",\n    \"Scholarship\",\n    \"Allowance\",\n    \"Freelancing\",\n    \"Other\",\n  ];\n\n  useEffect(() => {\n    const date = new Date();\n    setCurrentMonth(\n      `${date.getDate()} ${date.toLocaleString(\"default\", { month: \"long\" })} ${date.getFullYear()}`\n    );\n  }, []);\n\n  const fetchIncome = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/income\");\n      setIncomeStack(response.data);\n      calculateTotal(response.data);\n    } catch (error) {\n      setMessage(\"Failed to fetch income data\");\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchIncome();\n  }, [fetchIncome]);\n\n  const calculateTotal = (incomeData) => {\n    const total = incomeData.reduce((sum, item) => sum + item.amount, 0);\n    setTotalIncome(total);\n  };\n\n  const addIncome = async () => {\n    if (!selectedSource || !newAmount) {\n      setMessage(\"Please select an income source and enter an amount.\");\n      return;\n    }\n  \n    const token = localStorage.getItem(\"token\");\n    \n    if (!token) {\n      setMessage(\"You must be logged in.\");\n      return;\n    }\n  \n    try {\n      const response = await axios.post(\"http://localhost:3001/api/income\", {\n        source: selectedSource,\n        amount: parseFloat(newAmount),\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        }\n      });\n      setIncomeStack([...incomeStack, response.data]);\n      calculateTotal([...incomeStack, response.data]);\n      setSelectedSource(\"\");\n      setNewAmount(\"\");\n      setMessage(\"Income added successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to add income.\");\n    }\n  };\n  \n\n  const updateIncome = async (id, updatedAmount) => {\n    try {\n      const response = await axios.put(`http://localhost:3001/api/income/${id}`, { amount: updatedAmount });\n      const updatedIncomeStack = incomeStack.map((item) =>\n        item._id === id ? response.data : item\n      );\n      setIncomeStack(updatedIncomeStack);\n      calculateTotal(updatedIncomeStack);\n      setMessage(\"Income updated successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to update income.\");\n    }\n  };\n\n  const deleteIncome = async (id) => {\n    try {\n      await axios.delete(`http://localhost:3001/api/income/${id}`);\n      const updatedIncomeStack = incomeStack.filter((item) => item._id !== id);\n      setIncomeStack(updatedIncomeStack);\n      calculateTotal(updatedIncomeStack);\n      setMessage(\"Income removed successfully!\");\n    } catch (error) {\n      setMessage(\"Failed to remove income.\");\n    }\n  };\n\n  return (\n    <div className=\"income-container\">\n      <h2>Income Management</h2>\n      <p className=\"date-display\">Date: {currentMonth}</p>\n\n      <div className=\"income-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n      </div>\n\n      <div className=\"add-income\">\n        <select\n          value={selectedSource}\n          onChange={(e) => setSelectedSource(e.target.value)}\n        >\n          <option value=\"\">Select Income Source</option>\n          {incomeSources.map((source) => (\n            <option key={source} value={source}>\n              {source}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newAmount}\n          onChange={(e) => setNewAmount(e.target.value)}\n          placeholder=\"Amount\"\n        />\n        <button onClick={addIncome}>Add Income</button>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <ul className=\"income-list\">\n        {incomeStack.map((item) => (\n          <li key={item._id} className=\"income-item\">\n            <span>{item.source}: ₹{item.amount}</span>\n            <input\n              type=\"number\"\n              defaultValue={item.amount}\n              onBlur={(e) => updateIncome(item._id, parseFloat(e.target.value))}\n            />\n            <button onClick={() => deleteIncome(item._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default IncomeManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}