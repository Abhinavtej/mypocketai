{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai/frontend/src/components/ExpenseManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/ExpenseManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseManagement = () => {\n  _s();\n  const [expenseList, setExpenseList] = useState([]);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const [budgetCategories, setBudgetCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [newExpense, setNewExpense] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch expense and budget categories data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to access expense data.\");\n          return;\n        }\n        const [expenseResponse, budgetResponse] = await Promise.all([axios.get(`${apiUrl}/api/expense`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }), axios.get(`${apiUrl}/api/budget`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        })]);\n        setExpenseList(expenseResponse.data.expenses);\n        setTotalExpense(expenseResponse.data.expenses.reduce((total, expense) => total + expense.expense, 0));\n\n        // Assuming budgetResponse.data.budgets contains the categories and their allocated budgets\n        setBudgetCategories(budgetResponse.data.budgets);\n      } catch (err) {\n        setMessage(\"Error fetching data. Please try again.\");\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Add a new expense\n  // Add a new expense\n  const handleAddExpense = async () => {\n    if (!selectedCategory || !newExpense) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n    const expenseAmount = parseFloat(newExpense);\n    if (expenseAmount <= 0) {\n      setMessage(\"Please provide a valid expense.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to add an expense.\");\n        return;\n      }\n\n      // Fetch the budget for the selected category\n      const category = budgetCategories.find(c => c.category === selectedCategory);\n      const categoryBudget = category ? category.budgetAllocated : 0;\n\n      // Calculate the total expense for the category (existing expenses + new expense)\n      const totalCategoryExpense = expenseList.filter(expense => expense.category === selectedCategory).reduce((total, expense) => total + expense.expense, 0) + expenseAmount;\n\n      // Check if the expense exceeds the allocated budget\n      if (totalCategoryExpense > categoryBudget) {\n        setMessage(`Total expense exceeds the allocated budget for ${selectedCategory}, Allocated: ₹${categoryBudget} only.`);\n        return;\n      }\n      await axios.post(`${apiUrl}/api/expense`, {\n        category: selectedCategory,\n        expense: expenseAmount\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Expense added successfully!\");\n      setSelectedCategory(\"\");\n      setNewExpense(\"\");\n      fetchUpdatedData(); // Re-fetch the updated data after adding the expense\n    } catch (err) {\n      setMessage(\"Error adding expense. Please try again.\");\n    }\n  };\n\n  // Update an expense\n  const handleUpdateExpense = async (id, updatedExpense) => {\n    try {\n      var _expenseList$find, _budgetCategories$fin;\n      const expenseAmount = parseFloat(updatedExpense);\n      if (isNaN(expenseAmount) || expenseAmount <= 0) {\n        setMessage(\"Please provide a valid expense.\");\n        return;\n      }\n\n      // Fetch the original category of the expense\n      const expenseCategory = (_expenseList$find = expenseList.find(expense => expense._id === id)) === null || _expenseList$find === void 0 ? void 0 : _expenseList$find.category;\n      const categoryBudget = ((_budgetCategories$fin = budgetCategories.find(category => category.category === expenseCategory)) === null || _budgetCategories$fin === void 0 ? void 0 : _budgetCategories$fin.budgetAllocated) || 0;\n\n      // Calculate the total expense for the category (existing expenses excluding the current one + updated expense)\n      const totalCategoryExpense = expenseList.filter(expense => expense.category === expenseCategory && expense._id !== id).reduce((total, expense) => total + expense.expense, 0) + expenseAmount;\n\n      // Check if the updated expense exceeds the allocated budget\n      if (totalCategoryExpense > categoryBudget) {\n        setMessage(`Updated total expense exceeds the allocated budget for ${expenseCategory}, Allocated: ₹${categoryBudget} only.`);\n        return;\n      }\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to update an expense.\");\n        return;\n      }\n      await axios.put(`${apiUrl}/api/expense/${id}`, {\n        expense: expenseAmount\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Expense updated successfully!\");\n      fetchUpdatedData(); // Re-fetch the updated data after updating the expense\n    } catch (err) {\n      setMessage(\"Error updating expense. Please try again.\");\n    }\n  };\n\n  // Remove an expense\n  const handleRemoveExpense = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove an expense.\");\n        return;\n      }\n      await axios.delete(`${apiUrl}/api/expense/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Expense removed successfully!\");\n      fetchUpdatedData();\n    } catch (err) {\n      setMessage(\"Error removing expense. Please try again.\");\n    }\n  };\n\n  // Re-fetch data\n  const fetchUpdatedData = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to access data.\");\n        return;\n      }\n      const response = await axios.get(`${apiUrl}/api/expense`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setExpenseList(response.data.expenses);\n      setTotalExpense(response.data.expenses.reduce((total, expense) => total + expense.expense, 0));\n    } catch (err) {\n      setMessage(\"Error fetching data. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Expense: \\u20B9\", totalExpense]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-expense\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), budgetCategories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.category,\n          children: category.category\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newExpense,\n        onChange: e => setNewExpense(e.target.value),\n        placeholder: \"Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddExpense,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Expense List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"expense-list\",\n      children: expenseList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"expense-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.category, \": \\u20B9\", item.expense]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", new Date(item.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Update Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: item.expense,\n          onChange: e => handleUpdateExpense(item._id, parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveExpense(item._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseManagement, \"JTv4iUHfWn27mOE8+DCL9+w1pKM=\");\n_c = ExpenseManagement;\nexport default ExpenseManagement;\nvar _c;\n$RefreshReg$(_c, \"ExpenseManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExpenseManagement","_s","expenseList","setExpenseList","totalExpense","setTotalExpense","budgetCategories","setBudgetCategories","selectedCategory","setSelectedCategory","newExpense","setNewExpense","message","setMessage","currentMonth","setCurrentMonth","month","Date","toLocaleString","year","getFullYear","fetchData","token","localStorage","getItem","expenseResponse","budgetResponse","Promise","all","get","apiUrl","headers","Authorization","data","expenses","reduce","total","expense","budgets","err","handleAddExpense","expenseAmount","parseFloat","category","find","c","categoryBudget","budgetAllocated","totalCategoryExpense","filter","post","fetchUpdatedData","handleUpdateExpense","id","updatedExpense","_expenseList$find","_budgetCategories$fin","isNaN","expenseCategory","_id","put","handleRemoveExpense","delete","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","index","type","placeholder","onClick","item","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai/frontend/src/components/ExpenseManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/ExpenseManagement.css\";\n\nconst ExpenseManagement = () => {\n  const [expenseList, setExpenseList] = useState([]);\n  const [totalExpense, setTotalExpense] = useState(0);\n  const [budgetCategories, setBudgetCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [newExpense, setNewExpense] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear();\n    setCurrentMonth(`${month} ${year}`);\n  }, []);\n\n  // Fetch expense and budget categories data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to access expense data.\");\n          return;\n        }\n  \n        const [expenseResponse, budgetResponse] = await Promise.all([\n          axios.get(`${apiUrl}/api/expense`, {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n          axios.get(`${apiUrl}/api/budget`, {\n            headers: { Authorization: `Bearer ${token}` },\n          }),\n        ]);\n  \n        setExpenseList(expenseResponse.data.expenses);\n        setTotalExpense(\n          expenseResponse.data.expenses.reduce((total, expense) => total + expense.expense, 0)\n        );\n        \n        // Assuming budgetResponse.data.budgets contains the categories and their allocated budgets\n        setBudgetCategories(budgetResponse.data.budgets);\n      } catch (err) {\n        setMessage(\"Error fetching data. Please try again.\");\n      }\n    };\n  \n    fetchData();\n  }, []);\n  \n\n  // Add a new expense\n  // Add a new expense\nconst handleAddExpense = async () => {\n  if (!selectedCategory || !newExpense) {\n    setMessage(\"Please fill out both fields.\");\n    return;\n  }\n\n  const expenseAmount = parseFloat(newExpense);\n  if (expenseAmount <= 0) {\n    setMessage(\"Please provide a valid expense.\");\n    return;\n  }\n\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMessage(\"Please log in to add an expense.\");\n      return;\n    }\n\n    // Fetch the budget for the selected category\n    const category = budgetCategories.find((c) => c.category === selectedCategory);\n    const categoryBudget = category ? category.budgetAllocated : 0;\n\n    // Calculate the total expense for the category (existing expenses + new expense)\n    const totalCategoryExpense = expenseList\n      .filter((expense) => expense.category === selectedCategory)\n      .reduce((total, expense) => total + expense.expense, 0) + expenseAmount;\n\n    // Check if the expense exceeds the allocated budget\n    if (totalCategoryExpense > categoryBudget) {\n      setMessage(`Total expense exceeds the allocated budget for ${selectedCategory}, Allocated: ₹${categoryBudget} only.`);\n      return;\n    }\n\n    await axios.post(\n      `${apiUrl}/api/expense`,\n      { category: selectedCategory, expense: expenseAmount },\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n\n    setMessage(\"Expense added successfully!\");\n    setSelectedCategory(\"\");\n    setNewExpense(\"\");\n    fetchUpdatedData(); // Re-fetch the updated data after adding the expense\n  } catch (err) {\n    setMessage(\"Error adding expense. Please try again.\");\n  }\n};\n\n// Update an expense\nconst handleUpdateExpense = async (id, updatedExpense) => {\n  try {\n    const expenseAmount = parseFloat(updatedExpense);\n    if (isNaN(expenseAmount) || expenseAmount <= 0) {\n      setMessage(\"Please provide a valid expense.\");\n      return;\n    }\n\n    // Fetch the original category of the expense\n    const expenseCategory = expenseList.find((expense) => expense._id === id)?.category;\n    const categoryBudget = budgetCategories.find(\n      (category) => category.category === expenseCategory\n    )?.budgetAllocated || 0;\n\n    // Calculate the total expense for the category (existing expenses excluding the current one + updated expense)\n    const totalCategoryExpense = expenseList\n      .filter((expense) => expense.category === expenseCategory && expense._id !== id)\n      .reduce((total, expense) => total + expense.expense, 0) + expenseAmount;\n\n    // Check if the updated expense exceeds the allocated budget\n    if (totalCategoryExpense > categoryBudget) {\n      setMessage(`Updated total expense exceeds the allocated budget for ${expenseCategory}, Allocated: ₹${categoryBudget} only.`);\n      return;\n    }\n\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setMessage(\"Please log in to update an expense.\");\n      return;\n    }\n\n    await axios.put(\n      `${apiUrl}/api/expense/${id}`,\n      { expense: expenseAmount },\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n\n    setMessage(\"Expense updated successfully!\");\n    fetchUpdatedData(); // Re-fetch the updated data after updating the expense\n  } catch (err) {\n    setMessage(\"Error updating expense. Please try again.\");\n  }\n};\n\n  \n\n  // Remove an expense\n  const handleRemoveExpense = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove an expense.\");\n        return;\n      }\n\n      await axios.delete(`${apiUrl}/api/expense/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setMessage(\"Expense removed successfully!\");\n      fetchUpdatedData();\n    } catch (err) {\n      setMessage(\"Error removing expense. Please try again.\");\n    }\n  };\n\n  // Re-fetch data\n  const fetchUpdatedData = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to access data.\");\n        return;\n      }\n\n      const response = await axios.get(`${apiUrl}/api/expense`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      setExpenseList(response.data.expenses);\n      setTotalExpense(\n        response.data.expenses.reduce((total, expense) => total + expense.expense, 0)\n      );\n    } catch (err) {\n      setMessage(\"Error fetching data. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"expense-container\">\n      <h2>Expense Management</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n      <div className=\"expense-summary\">\n        <h3>Total Expense: ₹{totalExpense}</h3>\n      </div>\n      {message && <p className=\"message\">{message}</p>}\n\n      <h4>Add Expense</h4>\n      <div className=\"add-expense\">\n      <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n        <option value=\"\">Select Category</option>\n        {budgetCategories.map((category, index) => (\n          <option key={category._id} value={category.category}>\n            {category.category}\n          </option>\n        ))}\n      </select>\n        <input\n          type=\"number\"\n          value={newExpense}\n          onChange={(e) => setNewExpense(e.target.value)}\n          placeholder=\"Expense\"\n        />\n        <button onClick={handleAddExpense}>Add Expense</button>\n      </div>\n\n      <h4>Expense List</h4>\n      <ul className=\"expense-list\">\n        {expenseList.map((item) => (\n          <li key={item._id} className=\"expense-item\">\n            <span>\n              {item.category}: ₹{item.expense}\n            </span>\n            <span>Date: {new Date(item.date).toLocaleDateString()}</span>\n            <p>Update Value:</p>\n            <input\n              type=\"number\"\n              value={item.expense}\n              onChange={(e) => handleUpdateExpense(item._id, parseFloat(e.target.value))}\n            />\n            <button onClick={() => handleRemoveExpense(item._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ExpenseManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}