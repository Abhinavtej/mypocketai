{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/IncomeManagement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomeManagement = () => {\n  _s();\n  const [incomeList, setIncomeList] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [selectedSource, setSelectedSource] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  // Static list of income sources\n  const incomeSources = [\"Pocket Money\", \"Freelancing\", \"Investments\", \"Stipends\", 'Part-time Job', 'Others'];\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    const year = new Date().getFullYear(); // Get the current year\n    setCurrentMonth(`${month} ${year}`); // Set both month and year\n  }, []);\n\n  // Fetch income data when the component loads\n  useEffect(() => {\n    const fetchIncomeData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to see your income data.\");\n          return;\n        }\n        const response = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIncomeList(response.data.income);\n        setTotalIncome(response.data.totalIncome);\n      } catch (err) {\n        setMessage(\"Error fetching income data\");\n      }\n    };\n    fetchIncomeData();\n  }, []);\n\n  // Add a new income entry\n  const handleAddIncome = async () => {\n    if (!selectedSource || !newAmount) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to add income.\");\n        return;\n      }\n      await axios.post(\"http://localhost:3001/api/income\", {\n        source: selectedSource,\n        income: newAmount\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Income added successfully!\");\n      setNewAmount(\"\");\n      setSelectedSource(\"\");\n      const response = await axios.get(\"http://localhost:3001/api/income\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setIncomeList(response.data.income);\n      setTotalIncome(response.data.totalIncome);\n    } catch (err) {\n      setMessage(\"Error adding income\");\n    }\n  };\n\n  // Handle real-time income update\n  const handleIncomeChange = async (id, newIncome) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to update income.\");\n        return;\n      }\n\n      // Optimistically update UI\n      const updatedIncomeList = incomeList.map(item => item._id === id ? {\n        ...item,\n        income: newIncome\n      } : item);\n      setIncomeList(updatedIncomeList);\n      setTotalIncome(updatedIncomeList.reduce((total, income) => total + income.income, 0));\n\n      // Send the update request to the backend\n      await axios.put(`http://localhost:3001/api/income/${id}`, {\n        income: newIncome\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (err) {\n      setMessage(\"Error updating income\");\n    }\n  };\n\n  // Remove an income entry\n  const handleRemoveIncome = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove income.\");\n        return;\n      }\n      await axios.delete(`http://localhost:3001/api/income/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedIncomeList = incomeList.filter(item => item._id !== id);\n      setIncomeList(updatedIncomeList);\n      setTotalIncome(updatedIncomeList.reduce((total, income) => total + income.income, 0));\n      setMessage(\"Income removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing income\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"income-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Income Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"date-display\",\n      children: [\"Month: \", currentMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"income-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Income: \\u20B9\", totalIncome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add Income\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-income\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSource,\n        onChange: e => setSelectedSource(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Income Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), incomeSources.map((source, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          children: source\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newAmount,\n        onChange: e => setNewAmount(e.target.value),\n        placeholder: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddIncome,\n        children: \"Add Income\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Income List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"income-list\",\n      children: incomeList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"income-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [item.source, \": \\u20B9\", item.income, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date: \", new Date(item.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Update Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: item.income,\n          onChange: e => handleIncomeChange(item._id, parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveIncome(item._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(IncomeManagement, \"7JRp5HSK6C0xQyqMNpwVqL5ADV8=\");\n_c = IncomeManagement;\nexport default IncomeManagement;\nvar _c;\n$RefreshReg$(_c, \"IncomeManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","IncomeManagement","_s","incomeList","setIncomeList","totalIncome","setTotalIncome","newAmount","setNewAmount","message","setMessage","selectedSource","setSelectedSource","currentMonth","setCurrentMonth","incomeSources","month","Date","toLocaleString","year","getFullYear","fetchIncomeData","token","localStorage","getItem","response","get","headers","Authorization","data","income","err","handleAddIncome","post","source","handleIncomeChange","id","newIncome","updatedIncomeList","map","item","_id","reduce","total","put","handleRemoveIncome","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","index","type","placeholder","onClick","date","toLocaleDateString","parseFloat","_c","$RefreshReg$"],"sources":["/Users/abhinavtej/Desktop/MYPOCKET_AI/mypocketai-website/frontend/src/components/IncomeManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../assets/css/IncomeManagement.css\";\n\nconst IncomeManagement = () => {\n  const [incomeList, setIncomeList] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [selectedSource, setSelectedSource] = useState(\"\");\n  const [currentMonth, setCurrentMonth] = useState(\"\");\n\n  // Static list of income sources\n  const incomeSources = [\"Pocket Money\", \"Freelancing\", \"Investments\", \"Stipends\", 'Part-time Job', 'Others'];\n\n  // Fetch the current month and format it\n  useEffect(() => {\n    const month = new Date().toLocaleString(\"default\", { month: \"long\" });\n    const year = new Date().getFullYear(); // Get the current year\n    setCurrentMonth(`${month} ${year}`); // Set both month and year\n  }, []);\n\n  // Fetch income data when the component loads\n  useEffect(() => {\n    const fetchIncomeData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setMessage(\"Please log in to see your income data.\");\n          return;\n        }\n\n        const response = await axios.get(\"http://localhost:3001/api/income\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setIncomeList(response.data.income);\n        setTotalIncome(response.data.totalIncome);\n      } catch (err) {\n        setMessage(\"Error fetching income data\");\n      }\n    };\n\n    fetchIncomeData();\n  }, []);\n\n  // Add a new income entry\n  const handleAddIncome = async () => {\n    if (!selectedSource || !newAmount) {\n      setMessage(\"Please fill out both fields.\");\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to add income.\");\n        return;\n      }\n\n      await axios.post(\n        \"http://localhost:3001/api/income\",\n        { source: selectedSource, income: newAmount },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setMessage(\"Income added successfully!\");\n      setNewAmount(\"\");\n      setSelectedSource(\"\");\n      const response = await axios.get(\"http://localhost:3001/api/income\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setIncomeList(response.data.income);\n      setTotalIncome(response.data.totalIncome);\n    } catch (err) {\n      setMessage(\"Error adding income\");\n    }\n  };\n\n  // Handle real-time income update\n  const handleIncomeChange = async (id, newIncome) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to update income.\");\n        return;\n      }\n\n      // Optimistically update UI\n      const updatedIncomeList = incomeList.map((item) =>\n        item._id === id ? { ...item, income: newIncome } : item\n      );\n      setIncomeList(updatedIncomeList);\n      setTotalIncome(updatedIncomeList.reduce((total, income) => total + income.income, 0));\n\n      // Send the update request to the backend\n      await axios.put(\n        `http://localhost:3001/api/income/${id}`,\n        { income: newIncome },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n    } catch (err) {\n      setMessage(\"Error updating income\");\n    }\n  };\n\n  // Remove an income entry\n  const handleRemoveIncome = async (id) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setMessage(\"Please log in to remove income.\");\n        return;\n      }\n\n      await axios.delete(`http://localhost:3001/api/income/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      const updatedIncomeList = incomeList.filter((item) => item._id !== id);\n      setIncomeList(updatedIncomeList);\n      setTotalIncome(updatedIncomeList.reduce((total, income) => total + income.income, 0));\n\n      setMessage(\"Income removed successfully!\");\n    } catch (err) {\n      setMessage(\"Error removing income\");\n    }\n  };\n\n  return (\n    <div className=\"income-container\">\n      <h2>Income Management</h2>\n      <p className=\"date-display\">Month: {currentMonth}</p>\n\n      <div className=\"income-summary\">\n        <h3>Total Income: ₹{totalIncome}</h3>\n      </div>\n\n      {message && <p className=\"message\">{message}</p>}\n\n      <p>Add Income</p>\n      <div className=\"add-income\">\n        <select\n          value={selectedSource}\n          onChange={(e) => setSelectedSource(e.target.value)}\n        >\n          <option value=\"\">Select Income Source</option>\n          {incomeSources.map((source, index) => (\n            <option key={index} value={source}>\n              {source}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={newAmount}\n          onChange={(e) => setNewAmount(e.target.value)}\n          placeholder=\"Amount\"\n        />\n        <button onClick={handleAddIncome}>Add Income</button>\n      </div>\n\n      <p>Income List</p>\n      <ul className=\"income-list\">\n        {incomeList.map((item) => (\n          <li key={item._id} className=\"income-item\">\n            <span>{item.source}: ₹{item.income} </span>\n            <span>Date: {new Date(item.date).toLocaleDateString()}</span>\n            <p>Update Value:</p>&nbsp;\n            <input\n              type=\"number\"\n              value={item.income}\n              onChange={(e) => handleIncomeChange(item._id, parseFloat(e.target.value))}\n            />\n            <button onClick={() => handleRemoveIncome(item._id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default IncomeManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}